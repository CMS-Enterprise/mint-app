name: Run Tests

on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SES_SOURCE_ARN:
        required: true
      OKTA_TEST_PASSWORD:
        required: true
      OKTA_TEST_SECRET:
        required: true
      OKTA_TEST_USERNAME:
        required: true
      AWS_ROLE_TO_ASSUME:
        required: true

env:
  EASI_APP_NODE_VERSION: "16.14.0"
  EASI_APP_GO_VERSION: "1.16.6"
  GIT_HASH: ${{ github.event.pull_request.head.sha || github.sha }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  DOCKER_BUILDKIT: 1

jobs:
  server_test:
    if: ${{ false }} # Disabled until we can pull images to test from ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846
        with:
          ref: ${{ env.GIT_HASH }}
      - name: Configure go cache
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0
        with:
          path: |
            ~/go/pkg/mod
          key: v1-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            v1-go-
      - name: Set up go
        uses: actions/setup-go@bfdd3570ce990073878bf10f6b2d79082de49492
        with:
          go-version: ${{ env.EASI_APP_GO_VERSION }}
      - name: Login to Docker Hub
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
      - name: Run backend server tests
        env:
          APP_ENV: test
          AWS_REGION: us-west-2 # easi app tests expect AWS_REGION instead of AWS_DEFAULT_REGION
          AWS_SES_SOURCE: '"EASi Test" <no-reply-test@info.easi.cms.gov>'
          AWS_SES_SOURCE_ARN: ${{ secrets.AWS_SES_SOURCE_ARN }}
          AWS_S3_FILE_UPLOAD_BUCKET: easi-app-file-uploads
          CLIENT_PROTOCOL: http
          CLIENT_PORT: 3000
          CLIENT_HOSTNAME: localhost:3000
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: easi-db-migrate
          GRT_EMAIL: success@simulator.amazonses.com
          ACCESSIBILITY_TEAM_EMAIL: success@simulator.amazonses.com
          OKTA_CLIENT_ID: 0oa2e913coDQeG19S297
          OKTA_DOMAIN: https://test.idp.idm.cms.gov
          OKTA_ISSUER: https://test.idp.idm.cms.gov/oauth2/aus2e96etlbFPnBHt297
          OKTA_REDIRECT_URI: http://localhost:3000/implicit/callback
          OKTA_TEST_PASSWORD: ${{ secrets.OKTA_TEST_PASSWORD }}
          OKTA_TEST_SECRET: ${{ secrets.OKTA_TEST_SECRET }}
          OKTA_TEST_USERNAME: ${{ secrets.OKTA_TEST_USERNAME }}
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: postgres
          PGUSER: app_user
          PGPASS: supersecretapp
          PGSSLMODE: disable
          DB_MAX_CONNECTIONS: 20
          FLAG_SOURCE: LOCAL
        run: |
          docker-compose --project-name easi-server-test -f docker-compose.ci_server_test.yml up -d db
          docker-compose --project-name easi-server-test -f docker-compose.ci_server_test.yml up --exit-code-from db_migrate db_migrate
          ./scripts/build_app
          ./scripts/testsuite
          docker-compose --project-name easi-server-test -f docker-compose.ci_server_test.yml down
      - name: Upload backend test artifacts
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: backend-tests
          path: results
          retention-days: 14
      - name: Announce failure
        if: ${{ failure() }}
        run: |
          ./scripts/github-action-announce-broken-branch

  e2e_tests:
    if: ${{ false }} # Disabled until we can pull images to test from ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846
        with:
          ref: ${{ env.GIT_HASH }}
      - name: Set up node
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236
        with:
          node-version: ${{ env.EASI_APP_NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Configure yarn cache
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./node_modules
          key: v1-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-
      - name: Build frontend code
        env:
          REACT_APP_API_ADDRESS: http://easi:8080/api/v1
          REACT_APP_GRAPHQL_ADDRESS: http://easi:8080/api/graph/query
          REACT_APP_APP_ENV: test
          REACT_APP_OKTA_CLIENT_ID: 0oa2e913coDQeG19S297
          REACT_APP_OKTA_DOMAIN: https://test.idp.idm.cms.gov
          REACT_APP_OKTA_SERVER_ID: aus2e96etlbFPnBHt297
          REACT_APP_OKTA_ISSUER: https://test.idp.idm.cms.gov/oauth2/aus2e96etlbFPnBHt297
          REACT_APP_OKTA_REDIRECT_URI: http://localhost:3000/implicit/callback
          REACT_APP_LOCAL_AUTH_ENABLED: true
        run: yarn run build
      - name: Login to Docker Hub
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
      - name: Run e2e cypress tests
        env:
          APP_ENV: test
          AWS_SES_SOURCE_ARN: ${{ secrets.AWS_SES_SOURCE_ARN }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          OKTA_TEST_PASSWORD: ${{ secrets.OKTA_TEST_PASSWORD }}
          OKTA_TEST_SECRET: ${{ secrets.OKTA_TEST_SECRET }}
          OKTA_TEST_USERNAME: ${{ secrets.OKTA_TEST_USERNAME }}
        run: |
          ./scripts/run-cypress-test-docker
      - name: Upload cypress videos
        if: ${{ always() }}
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 14
      - name: Upload cypress screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
          retention-days: 14
      - name: Announce failure
        if: ${{ failure() }}
        run: |
          ./scripts/github-action-announce-broken-branch

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846
        with:
          ref: ${{ env.GIT_HASH }}
      - name: Set up node
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236
        with:
          node-version: ${{ env.EASI_APP_NODE_VERSION }}
      - name: Set up go
        uses: actions/setup-go@bfdd3570ce990073878bf10f6b2d79082de49492
        with:
          go-version: ${{ env.EASI_APP_GO_VERSION }}
      - name: Set up python
        uses: actions/setup-python@98f2ad02fd48d057ee3b4d4f66525b231c3e52b6
        with:
          python-version: "3.9"
      - name: Configure go cache
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0
        with:
          path: |
            ~/go/pkg/mod
          key: v1-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            v1-go-
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Configure yarn cache
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./node_modules
          key: v1-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-
      # go-swagger is used for pre-commit hooks
      - name: Install go-swagger
        id: install-go-swagger
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https gnupg curl
          curl -1sLf 'https://dl.cloudsmith.io/public/go-swagger/go-swagger/gpg.2F8CB673971B5C9E.key' | sudo apt-key add -
          curl -1sLf 'https://dl.cloudsmith.io/public/go-swagger/go-swagger/config.deb.txt?distro=debian&codename=any-version' | sudo tee /etc/apt/sources.list.d/go-swagger-go-swagger.list
          sudo apt-get update
          sudo apt-get install -y swagger
      - name: Pre-commit checks
        uses: pre-commit/action@9b88afc9cd57fd75b655d5c71bd38146d07135fe
        with:
          extra_args: --all-files
      - name: Announce failure
        if: ${{ failure() }}
        run: |
          ./scripts/github-action-announce-broken-branch

  client_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846
        with:
          ref: ${{ env.GIT_HASH }}
      - name: Set up node
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236
        with:
          node-version: ${{ env.EASI_APP_NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Configure yarn cache
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./node_modules
          key: v1-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-
      # Switch to :coverage when we have improved coverage numbers
      # TODO: https://jiraent.cms.gov/browse/EASI-1993
      # - run: yarn test:coverage
      - run: yarn test
      - name: Announce failure
        if: ${{ failure() }}
        run: |
          ./scripts/github-action-announce-broken-branch

  client_typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v2.3.4
        with:
          ref: ${{ env.GIT_HASH }}
      - name: Set up node
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v2.1.5
        with:
          node-version: ${{ env.EASI_APP_NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Configure yarn cache
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0 # v2.1.6
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./node_modules
          key: v1-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-
      - name: Run typechecking
        id: typechecker
        # Uses GitHub environment files to store typechecker output and pass to next stage
        # see https://github.com/actions/toolkit/blob/main/docs/commands.md#environment-files
        run: |
          yarn build:ts 2>&1 | tee test.log
          result_code=${PIPESTATUS[0]}
          echo 'TS_LOG<<EOF' >> $GITHUB_ENV
          cat test.log >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          exit $result_code
        continue-on-error: true
