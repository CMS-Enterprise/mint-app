name: build_db_clean_image

on:
  schedule:
    - cron: "0 6 * * 6"

env:
  AWS_DEFAULT_REGION: us-west-2
  DOCKER_BUILDKIT: 1

jobs:
  build_db_clean_image:
    if: ${{ false }} # Disabled until we have a need for this image and can deploy / call it
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Login to Docker Hub
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@b874a33292cc9887d2e80bc63f6f1a11fccb4a7b
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: easi-db-clean
        run: |
          docker build --quiet --no-cache --tag "$ECR_REGISTRY/$ECR_REPOSITORY:latest" --file "Dockerfile.db_clean" .
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:latest"
