# This GitHub action checks for duplicate migration prefixes in the ./migrations folder,
# comparing the head branch with the base branch.

name: Check Migrations

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check_migrations:
    runs-on: ubuntu-latest
    env:
      HEAD_BRANCH_SHA: ${{ github.event.pull_request.head.sha }}
      BASE_BRANCH_SHA: ${{ github.event.pull_request.base.sha }}

    steps:
      - name: Checkout Head Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.HEAD_BRANCH_SHA }}


      - name: Checkout Base Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BASE_BRANCH_SHA }}

      - name: Find migration files
        run: |
          echo "Comparing head branch '${HEAD_BRANCH_SHA}' with base branch '${BASE_BRANCH_SHA}'"
          git fetch --no-tags origin "${BASE_BRANCH_SHA}:${BASE_BRANCH_SHA}" # Fetch the latest version of the base branch
          HEAD_FILES=$(git diff --name-only "${BASE_BRANCH_SHA}" "${HEAD_BRANCH_SHA}" -- ./migrations)
          BASE_FILES=$(git ls-tree --name-only "${BASE_BRANCH_SHA}" -- ./migrations)
          echo "HEAD files:"
          echo "${HEAD_FILES}"
          echo "BASE files:"
          echo "${BASE_FILES}"

      - name: Check for duplicate migration prefixes
        run: |
          HEAD_PREFIXES=$(echo "${HEAD_FILES}" | awk -F'__' '{print $1}')
          BASE_PREFIXES=$(echo "${BASE_FILES}" | awk -F'__' '{print $1}')
          DUPLICATES=$(echo "${HEAD_PREFIXES} ${BASE_PREFIXES}" | tr ' ' '\n' | sort | uniq -d)
          if [ -n "${DUPLICATES}" ]; then
            echo "Duplicate migration prefixes found: ${DUPLICATES}"
            exit 1
          fi
