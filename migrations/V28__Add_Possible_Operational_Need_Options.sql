INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(1, 'Manage Part C/D enrollment', 'MANAGE_CD', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(2, 'Review and collect plan bids', 'REV_COL_BIDS', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(3, 'Update the planâ€™s contract', 'UPDATE_CONTRACT', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(4, 'Advertise the model', 'ADVERTISE_MODEL', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(5, 'Collect, review, and score applications', 'COL_REV_SCORE_APP', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(6, 'Obtain an application support contractor', 'APP_SUPPORT_CON', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(7, 'Communicate with participants', 'COMM_W_PART', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(8, 'Manage provider overlaps', 'MANAGE_PROV_OVERLAP', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(9, 'Manage beneficiary overlaps', 'MANAGE_BEN_OVERLAP', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(10, 'Helpdesk support', 'HELPDESK_SUPPORT', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(11, 'IDDOC support', 'IDDOC_SUPPORT', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(12, 'Establish a benchmark with participants', 'ESTABLISH_BENCH', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(13, 'Process participant appeals', 'PROCESS_PART_APPEALS', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(14, 'Acquire an evaluation contractor', 'ACQUIRE_AN_EVAL_CONT', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(15, 'Data to monitor the model', 'DATA_TO_MONITOR', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(16, 'Data to support model evaluation', 'DATA_TO_SUPPORT_EVAL', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(17, 'Claims-based measures', 'CLAIMS_BASED_MEASURES', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(18, 'Quality performance scores', 'QUALITY_PERFORMANCE_SCORES', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(19, 'Send reports/data to participants', 'SEND_REPDATA_TO_PART', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(20, 'Acquire a learning contractor', 'ACQUIRE_A_LEARN_CONT', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(21, 'Participant-to-participant collaboration', 'PART_TO_PART_COLLAB', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(22, 'Educate beneficiaries', 'EDUCATE_BENEF', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(23, 'Adjust how FFS claims are paid', 'ADJUST_FFS_CLAIMS', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(24, 'Manage FFS excluded payments', 'MANAGE_FFS_EXCL_PAYMENTS', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(25, 'Make non-claims based payments', 'MAKE_NON_CLAIMS_BASED_PAYMENTS', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(26, 'Compute shared savings payment', 'COMPUTE_SHARED_SAVINGS_PAYMENT', 'MINT');
INSERT INTO "public"."possible_operational_need"("id", "need_name", "need_key", "created_by") VALUES(27, 'Recover payments', 'RECOVER_PAYMENTS', 'MINT');
