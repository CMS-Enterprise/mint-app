{
  "modelPlan": {
    "model_name": {
      "gqlField": "modelName",
      "goField": "ModelName",
      "dbField": "model_name",
      "label": "Model name",
      "dataType": "string",
      "formType": "text"
    },
    "previous_name": {
      "gqlField": "previousName",
      "goField": "PreviousName",
      "dbField": "previous_name",
      "label": "Previous names",
      "dataType": "string",
      "formType": "text"
    },
    "name_history": {
      "gqlField": "nameHistory",
      "goField": "NameHistory",
      "dbField": "name_history",
      "label": "Previous names",
      "dataType": "string",
      "isArray": true,
      "formType": "text",
      "filterGroups": [
        "OACT",
        "DFSDM",
        "CCW",
        "IPC",
        "IDDOC",
        "PBG",
        "MDM",
        "CBOSC"
      ]
    },
    "abbreviation": {
      "gqlField": "abbreviation",
      "goField": "Abbreviation",
      "dbField": "abbreviation",
      "label": "Short name",
      "sublabel": "The abbreviation, acronym, or other common name used for the model.",
      "dataType": "string",
      "formType": "text"
    },
    "archived": {
      "gqlField": "archived",
      "goField": "Archived",
      "dbField": "archived",
      "label": "Archived",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      }
    },
    "status": {
      "gqlField": "status",
      "goField": "Status",
      "dbField": "status",
      "label": "What is the status of your Model Plan?",
      "dataType": "enum",
      "formType": "select",
      "options": {
        "PLAN_DRAFT": "Draft Model Plan",
        "PLAN_COMPLETE": "Model Plan complete",
        "ICIP_COMPLETE": "ICIP complete",
        "INTERNAL_CMMI_CLEARANCE": "In internal (CMMI) clearance",
        "CMS_CLEARANCE": "In CMS clearance",
        "HHS_CLEARANCE": "In HHS clearance",
        "OMB_ASRF_CLEARANCE": "In OMB clearance",
        "CLEARED": "Cleared",
        "ANNOUNCED": "Announced",
        "ACTIVE": "Active",
        "ENDED": "Ended",
        "PAUSED": "Paused",
        "CANCELED": "Canceled"
      }
    }
  },
  "basics": {
    "model_category": {
      "gqlField": "modelCategory",
      "goField": "ModelCategory",
      "dbField": "model_category",
      "label": "Primary model category",
      "dataType": "enum",
      "formType": "radio",
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "additionalModelCategories"
      },
      "options": {
        "ACCOUNTABLE_CARE": "Accountable Care",
        "DISEASE_SPECIFIC_AND_EPISODIC": "Disease-Specific & Episode-Based",
        "HEALTH_PLAN": "Health Plan",
        "PRESCRIPTION_DRUG": "Prescription Drug",
        "STATE_BASED": "State & Community-Based",
        "STATUTORY": "Statutory",
        "TO_BE_DETERMINED": "To be determined"
      },
      "tooltips": {
        "ACCOUNTABLE_CARE": "Models in which a doctor, group of health care providers or hospital takes financial responsibility for improving quality of care, including advanced primary care services, care coordination and health outcomes for a defined group of patients, thereby reducing care fragmentation and unnecessary costs for patients and the health system",
        "DISEASE_SPECIFIC_AND_EPISODIC": "Models which aim to address deficits in care for a defined population with a specific shared disease or medical condition, procedure, or care episode",
        "HEALTH_PLAN": "Models comprising Medicare Advantage plans",
        "PRESCRIPTION_DRUG": "Models that seek to improve access to and/or the affordability of prescription drugs covered under Medicare (Part B and D) or Medicaid.",
        "STATE_BASED": "Models in which a state or community-based organization serves as the main contractual participant, including managed care organizations serving Medicaid beneficiaries.",
        "STATUTORY": "Models and demonstrations requiring testing as determined by Congress and/or the Secretary of Health and Human Services.",
        "TO_BE_DETERMINED": ""
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "additional_model_categories": {
      "gqlField": "additionalModelCategories",
      "goField": "AdditionalModelCategories",
      "dbField": "additional_model_categories",
      "label": "Additional model categories",
      "sublabel": "If your model doesnâ€™t fall into any additional categories, you can skip this.",
      "dataType": "string",
      "formType": "checkbox",
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "modelCategory"
      },
      "options": {
        "ACCOUNTABLE_CARE": "Accountable Care",
        "DISEASE_SPECIFIC_AND_EPISODIC": "Disease-Specific & Episode-Based",
        "HEALTH_PLAN": "Health Plan",
        "PRESCRIPTION_DRUG": "Prescription Drug",
        "STATE_BASED": "State & Community-Based",
        "STATUTORY": "Statutory",
        "TO_BE_DETERMINED": "To be determined"
      },
      "tooltips": {
        "ACCOUNTABLE_CARE": "Models in which a doctor, group of health care providers or hospital takes financial responsibility for improving quality of care, including advanced primary care services, care coordination and health outcomes for a defined group of patients, thereby reducing care fragmentation and unnecessary costs for patients and the health system",
        "DISEASE_SPECIFIC_AND_EPISODIC": "Models which aim to address deficits in care for a defined population with a specific shared disease or medical condition, procedure, or care episode",
        "HEALTH_PLAN": "Models comprising Medicare Advantage plans",
        "PRESCRIPTION_DRUG": "Models that seek to improve access to and/or the affordability of prescription drugs covered under Medicare (Part B and D) or Medicaid.",
        "STATE_BASED": "Models in which a state or community-based organization serves as the main contractual participant, including managed care organizations serving Medicaid beneficiaries.",
        "STATUTORY": "Models and demonstrations requiring testing as determined by Congress and/or the Secretary of Health and Human Services.",
        "TO_BE_DETERMINED": ""
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "ams_model_ID": {
      "gqlField": "amsModelID",
      "goField": "AmsModelID",
      "dbField": "ams_model_ID",
      "label": "Model ID",
      "dataType": "string",
      "formType": "textarea"
    },
    "demo_code": {
      "gqlField": "demoCode",
      "goField": "DemoCode",
      "dbField": "demo_code",
      "label": "Demo code(s)",
      "dataType": "string",
      "formType": "textarea"
    },
    "cmmi_groups": {
      "gqlField": "cmsCenters",
      "goField": "CMMIGroups",
      "dbField": "cmmi_groups",
      "label": "CMS component",
      "dataType": "enum",
      "formType": "checkbox",
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "cmmiGroups"
      },
      "options": {
        "CMMI": "Center for Medicare and Medicaid Innovation (CMMI)",
        "CENTER_FOR_CLINICAL_STANDARDS_AND_QUALITY": "Center for Clinical Standards and Quality (CCSQ)",
        "CENTER_FOR_MEDICAID_AND_CHIP_SERVICES": "Center for Medicaid and CHIP Services (CMCS)",
        "CENTER_FOR_MEDICARE": "Center for Medicare (CM)",
        "FEDERAL_COORDINATED_HEALTH_CARE_OFFICE": "Federal Coordinated Health Care Office (FCHCO)",
        "CENTER_FOR_PROGRAM_INTEGRITY": "Center for Program Integrity (CPI)"
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "cms_centers": {
      "gqlField": "cmmiGroups",
      "goField": "CMSCenters",
      "dbField": "cms_centers",
      "label": "CMMI Group",
      "sublabel": "You only need to select the CMMI group if CMMI is selected as the main CMS component.",
      "dataType": "enum",
      "formType": "checkbox",
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "cmsCenters"
      },
      "options": {
        "PATIENT_CARE_MODELS_GROUP": "Patient Care Models Group (PCMG)",
        "POLICY_AND_PROGRAMS_GROUP": "Policy and Programs Group (PPG)",
        "SEAMLESS_CARE_MODELS_GROUP": "Seamless Care Models Group (SCMG)",
        "STATE_AND_POPULATION_HEALTH_GROUP": "State and Population Health Group (SPHG)",
        "TBD": "To be determined"
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "model_type": {
      "gqlField": "modelType",
      "goField": "ModelType",
      "dbField": "model_type",
      "label": "Model Type",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "VOLUNTARY": "Voluntary",
        "MANDATORY_NATIONAL": "Mandatory national",
        "MANDATORY_REGIONAL_OR_STATE": "Mandatory regional or state",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "modelTypeOther"
      },
      "filterGroups": [
        "DFSDM",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "model_type_other": {
      "gqlField": "modelTypeOther",
      "goField": "ModelTypeOther",
      "dbField": "model_type_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "DFSDM",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "problem": {
      "gqlField": "problem",
      "goField": "Problem",
      "dbField": "problem",
      "label": "Problem statement",
      "dataType": "string",
      "formType": "textarea"
    },
    "goal": {
      "gqlField": "goal",
      "goField": "Goal",
      "dbField": "goal",
      "label": "Goal",
      "sublabel": "Please include the high level goal of the program and a description of the project.",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "DFSDM",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "test_interventions": {
      "gqlField": "testInterventions",
      "goField": "TestInterventions",
      "dbField": "test_interventions",
      "label": "Test Interventions",
      "dataType": "string",
      "formType": "textarea"
    },
    "note": {
      "gqlField": "note",
      "goField": "Note",
      "dbField": "note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "complete_icip": {
      "gqlField": "completeICIP",
      "goField": "CompleteICIP",
      "dbField": "complete_icip",
      "label": "Complete ICIP",
      "dataType": "date",
      "formType": "datePicker",
      "filterGroups": [
        "IPC"
      ]
    },
    "clearance_starts": {
      "gqlField": "clearanceStarts",
      "goField": "ClearanceStarts",
      "dbField": "clearance_starts",
      "label": "Clearance start date",
      "dataType": "date",
      "formType": "datePicker",
      "filterGroups": [
        "IPC"
      ]
    },
    "clearance_ends": {
      "gqlField": "clearanceEnds",
      "goField": "ClearanceEnds",
      "dbField": "clearance_ends",
      "label": "Clearance end date",
      "dataType": "date",
      "formType": "datePicker",
      "filterGroups": [
        "IPC"
      ]
    },
    "announced": {
      "gqlField": "announced",
      "goField": "Announced",
      "dbField": "announced",
      "label": "Announce model",
      "dataType": "date",
      "formType": "datePicker",
      "filterGroups": [
        "CBOSC",
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "applications_starts": {
      "gqlField": "applicationsStart",
      "goField": "ApplicationsStart",
      "dbField": "applications_starts",
      "label": "Application start date",
      "dataType": "date",
      "formType": "datePicker",
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "applicationsEnd"
      },
      "filterGroups": [
        "CBOSC",
        "IPC"
      ]
    },
    "applications_ends": {
      "gqlField": "applicationsEnd",
      "goField": "ApplicationsEnd",
      "dbField": "applications_ends",
      "label": "Application end date",
      "dataType": "date",
      "formType": "datePicker",
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "applicationsStart"
      },
      "filterGroups": [
        "CBOSC",
        "IPC"
      ]
    },
    "performance_period_starts": {
      "gqlField": "performancePeriodStarts",
      "goField": "PerformancePeriodStarts",
      "dbField": "performance_period_starts",
      "label": "Performance start date",
      "dataType": "date",
      "formType": "datePicker",
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "performancePeriodEnds"
      },
      "filterGroups": [
        "CBOSC",
        "CCW",
        "DFSDM",
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "performance_period_ends": {
      "gqlField": "performancePeriodEnds",
      "goField": "PerformancePeriodEnds",
      "dbField": "performance_period_ends",
      "label": "Performance end date",
      "dataType": "date",
      "formType": "datePicker",
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "performancePeriodStarts"
      },
      "filterGroups": [
        "CBOSC",
        "CCW",
        "DFSDM",
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "high_level_note": {
      "gqlField": "highLevelNote",
      "goField": "HighLevelNote",
      "dbField": "high_level_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "wrap_up_ends": {
      "gqlField": "wrapUpEnds",
      "goField": "WrapUpEnds",
      "dbField": "wrap_up_ends",
      "label": "Model wrap-up end date",
      "dataType": "date",
      "formType": "datePicker",
      "filterGroups": [
        "IPC"
      ]
    },
    "phased_in": {
      "gqlField": "phasedIn",
      "goField": "PhasedIn",
      "dbField": "phased_in",
      "label": "If timelines are tight, might there be pieces of the model that can be phased in over time?",
      "sublabel": "That is, the basic model would start at the earliest possible date but additional facets could be phased in at a later quarter.",
      "dataType": "boolean",
      "formType": "radio",
      "isPageStart": true,
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "phased_in_note": {
      "gqlField": "phasedInNote",
      "goField": "PhasedInNote",
      "dbField": "phased_in_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "status": {
      "gqlField": "status",
      "goField": "Status",
      "dbField": "status",
      "label": "Model Plan status",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "READY": "Ready",
        "IN_PROGRESS": "In progress",
        "READY_FOR_REVIEW": "Ready for review",
        "READY_FOR_CLEARANCE": "Ready for clearance"
      }
    }
  },
  "generalCharacteristics": {
    "is_new_model": {
      "gqlField": "isNewModel",
      "goField": "IsNewModel",
      "dbField": "is_new_model",
      "label": "Is this a new track of an existing model or a new model?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "New model",
        "false": "New track of an existing model"
      },
      "childRelation": {
        "false": [
          null
        ]
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "existing_model": {
      "gqlField": "existingModel",
      "goField": "ExistingModel",
      "dbField": "existing_model",
      "label": "Which existing model?",
      "sublabel": "Start typing the name of the model",
      "dataType": "string",
      "formType": "select",
      "filterGroups": [
        "IPC"
      ]
    },
    "resembles_existing_model": {
      "gqlField": "resemblesExistingModel",
      "goField": "ResemblesExistingModel",
      "dbField": "resembles_existing_model",
      "label": "Does your proposed track/model resemble any existing models?",
      "dataType": "enum",
      "formType": "radio",
      "options": {
        "YES": "Yes",
        "NO": "No",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "resemblesExistingModelOtherSpecify"
      },
      "childRelation": {
        "YES": [
          null,
          null,
          null
        ],
        "NO": [
          null
        ]
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "resembles_existing_model_why_how": {
      "gqlField": "resemblesExistingModelWhyHow",
      "goField": "ResemblesExistingModelWhyHow",
      "dbField": "resembles_existing_model_why_how",
      "label": "Explain why and how the model made this decision.",
      "dataType": "string",
      "formType": "textarea"
    },
    "resembles_existing_model_which": {
      "gqlField": "resemblesExistingModelWhich",
      "goField": "ResemblesExistingModelWhich",
      "dbField": "resembles_existing_model_which",
      "label": "Which existing models does your proposed track/model most closely resemble?",
      "sublabel": "Start typing the name of the model",
      "multiSelectLabel": "Selected models",
      "dataType": "string",
      "formType": "multiSelect",
      "isArray": true,
      "isModelLinks": true,
      "options": {
        "Other": "Other"
      },
      "optionsRelatedInfo": {
        "Other": "resemblesExistingModelOtherOption"
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "resembles_existing_model_how": {
      "gqlField": "resemblesExistingModelHow",
      "goField": "ResemblesExistingModelHow",
      "dbField": "resembles_existing_model_how",
      "label": "In what way does the new model resemble the selected model(s)?",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IPC"
      ]
    },
    "resembles_existing_model_other_specify": {
      "gqlField": "resemblesExistingModelOtherSpecify",
      "goField": "ResemblesExistingModelOtherSpecify",
      "dbField": "resembles_existing_model_other_specify",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "resembles_existing_model_other_selected": {
      "gqlField": "resemblesExistingModelOtherSelected",
      "goField": "ResemblesExistingModelOtherSelected",
      "dbField": "resembles_existing_model_other_selected",
      "label": "",
      "dataType": "boolean",
      "formType": "radio",
      "isOtherType": true,
      "options": {
        "true": "",
        "false": ""
      }
    },
    "resembles_existing_model_other_option": {
      "gqlField": "resemblesExistingModelOtherOption",
      "goField": "ResemblesExistingModelOtherOption",
      "dbField": "resembles_existing_model_other_option",
      "label": "Please specify other",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "resembles_existing_model_note": {
      "gqlField": "resemblesExistingModelNote",
      "goField": "ResemblesExistingModelNote",
      "dbField": "resembles_existing_model_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "participation_in_model_precondition": {
      "gqlField": "participationInModelPrecondition",
      "goField": "ParticipationInModelPrecondition",
      "dbField": "participation_in_model_precondition",
      "label": "Is participation in another model a precondition for participation in this model?",
      "dataType": "enum",
      "formType": "radio",
      "options": {
        "YES": "Yes",
        "NO": "No",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "participationInModelPreconditionOtherSpecify"
      },
      "childRelation": {
        "YES": [
          null,
          null
        ]
      }
    },
    "participation_in_model_precondition_other_specify": {
      "gqlField": "participationInModelPreconditionOtherSpecify",
      "goField": "ParticipationInModelPreconditionOtherSpecify",
      "dbField": "participation_in_model_precondition_other_specify",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "participation_in_model_precondition_which": {
      "gqlField": "participationInModelPreconditionWhich",
      "goField": "ParticipationInModelPreconditionWhich",
      "dbField": "participation_in_model_precondition_which",
      "label": "Which models?",
      "sublabel": "Start typing the name of the model",
      "multiSelectLabel": "Selected models",
      "dataType": "string",
      "formType": "multiSelect",
      "isArray": true,
      "isModelLinks": true,
      "options": {
        "Other": "Other"
      },
      "optionsRelatedInfo": {
        "Other": "participationInModelPreconditionOtherOption"
      }
    },
    "participation_in_model_precondition_other_selected": {
      "gqlField": "participationInModelPreconditionOtherSelected",
      "goField": "ParticipationInModelPreconditionOtherSelected",
      "dbField": "participation_in_model_precondition_other_selected",
      "label": "",
      "dataType": "boolean",
      "formType": "radio",
      "isOtherType": true,
      "options": {
        "true": "",
        "false": ""
      }
    },
    "participation_in_model_precondition_other_option": {
      "gqlField": "participationInModelPreconditionOtherOption",
      "goField": "ParticipationInModelPreconditionOtherOption",
      "dbField": "participation_in_model_precondition_other_option",
      "label": "Please specify other",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "participation_in_model_precondition_why_how": {
      "gqlField": "participationInModelPreconditionWhyHow",
      "goField": "ParticipationInModelPreconditionWhyHow",
      "dbField": "participation_in_model_precondition_why_how",
      "label": "Explain any details including if it is just part of the model.",
      "dataType": "string",
      "formType": "textarea"
    },
    "participation_in_model_precondition_note": {
      "gqlField": "participationInModelPreconditionNote",
      "goField": "ParticipationInModelPreconditionNote",
      "dbField": "participation_in_model_precondition_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "has_components_or_tracks": {
      "gqlField": "hasComponentsOrTracks",
      "goField": "HasComponentsOrTracks",
      "dbField": "has_components_or_tracks",
      "label": "Are there different components/tracks?",
      "readonlyLabel": "Are there different components/tracks? If so, how do the tracks differ?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "hasComponentsOrTracksDiffer"
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "has_components_or_tracks_differ": {
      "gqlField": "hasComponentsOrTracksDiffer",
      "goField": "HasComponentsOrTracksDiffer",
      "dbField": "has_components_or_tracks_differ",
      "label": "How do the tracks differ?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IPC"
      ]
    },
    "has_components_or_tracks_note": {
      "gqlField": "hasComponentsOrTracksNote",
      "goField": "HasComponentsOrTracksNote",
      "dbField": "has_components_or_tracks_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "agency_or_state_help": {
      "gqlField": "agencyOrStateHelp",
      "goField": "AgencyOrStateHelp",
      "dbField": "agency_or_state_help",
      "label": "Will another Agency or State help design/operate the model? Select all that apply.",
      "readonlyLabel": "Will another Agency or State help design/operate the model?",
      "dataType": "enum",
      "formType": "checkbox",
      "isPageStart": true,
      "options": {
        "YES_STATE": "Yes, we will partner with states",
        "YES_AGENCY_IDEAS": "Yes, we will get ideas from another agency",
        "YES_AGENCY_IAA": "Yes, we will get support from another agency through Inter Agency Agreement (IAA)",
        "NO": "No",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "agencyOrStateHelpOther"
      }
    },
    "agency_or_state_help_other": {
      "gqlField": "agencyOrStateHelpOther",
      "goField": "AgencyOrStateHelpOther",
      "dbField": "agency_or_state_help_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "agency_or_state_help_note": {
      "gqlField": "agencyOrStateHelpNote",
      "goField": "AgencyOrStateHelpNote",
      "dbField": "agency_or_state_help_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "alternative_payment_model_types": {
      "gqlField": "alternativePaymentModelTypes",
      "goField": "AlternativePaymentModelTypes",
      "dbField": "alternative_payment_model_types",
      "label": "What type of Alternative Payment Model (APM) do you think the model could be?",
      "sublabel": "In order to be considered by the Quality Payment Program (QPP), and to be MIPS or Advanced APM, you will need to collect TINs and NPIs for providers.",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ADVANCED": "Advanced APM",
        "MIPS": "MIPS APM",
        "REGULAR": "Regular APM",
        "NOT_APM": "It is not an APM"
      },
      "filterGroups": [
        "CMMI",
        "OACT"
      ]
    },
    "alternative_payment_model_note": {
      "gqlField": "alternativePaymentModelNote",
      "goField": "AlternativePaymentModelNote",
      "dbField": "alternative_payment_model_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "OACT"
      ]
    },
    "key_characteristics": {
      "gqlField": "keyCharacteristics",
      "goField": "KeyCharacteristics",
      "dbField": "key_characteristics",
      "label": "What are the model key characteristics? Select all that apply.",
      "readonlyLabel": "What are the model key characteristics?",
      "dataType": "enum",
      "formType": "multiSelect",
      "multiSelectLabel": "Selected key characteristics",
      "options": {
        "EPISODE_BASED": "Episode-Based Model",
        "MEDICAID_MODEL": "Medicaid Model",
        "PART_C": "Medicare-Advantage (Part C) Model",
        "MEDICARE_FFS_MODEL": "Medicare Fee-for-Service (FFS) Model",
        "PART_D": "Medicare Prescription Drug (Part D) Model",
        "PAYMENT": "Payment Model",
        "POPULATION_BASED": "Population-based Model",
        "PREVENTATIVE": "Preventative Model",
        "SERVICE_DELIVERY": "Service Delivery Model",
        "SHARED_SAVINGS": "Shared Savings Model",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "keyCharacteristicsOther"
      },
      "childRelation": {
        "PART_C": [
          null,
          null,
          null
        ],
        "PART_D": [
          null,
          null,
          null
        ]
      },
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "PBG"
      ]
    },
    "key_characteristics_other": {
      "gqlField": "keyCharacteristicsOther",
      "goField": "KeyCharacteristicsOther",
      "dbField": "key_characteristics_other",
      "label": "Please describe the other key characteristics",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "key_characteristics_note": {
      "gqlField": "keyCharacteristicsNote",
      "goField": "KeyCharacteristicsNote",
      "dbField": "key_characteristics_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "PBG"
      ]
    },
    "collect_plan_bids": {
      "gqlField": "collectPlanBids",
      "goField": "CollectPlanBids",
      "dbField": "collect_plan_bids",
      "label": "Will you review and collect plan bids?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      }
    },
    "collect_plan_bids_note": {
      "gqlField": "collectPlanBidsNote",
      "goField": "CollectPlanBidsNote",
      "dbField": "collect_plan_bids_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "manage_part_c_d_enrollment": {
      "gqlField": "managePartCDEnrollment",
      "goField": "ManagePartCDEnrollment",
      "dbField": "manage_part_c_d_enrollment",
      "label": "Will you manage Part C/D enrollment?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      }
    },
    "manage_part_c_d_enrollment_note": {
      "gqlField": "managePartCDEnrollmentNote",
      "goField": "ManagePartCDEnrollmentNote",
      "dbField": "manage_part_c_d_enrollment_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "plan_contract_updated": {
      "gqlField": "planContractUpdated",
      "goField": "PlanContractUpdated",
      "dbField": "plan_contract_updated",
      "label": "Have you updated the planâ€™s contract?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      }
    },
    "plan_contract_updated_note": {
      "gqlField": "planContractUpdatedNote",
      "goField": "PlanContractUpdatedNote",
      "dbField": "plan_contract_updated_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "care_coordination_involved": {
      "gqlField": "careCoordinationInvolved",
      "goField": "CareCoordinationInvolved",
      "dbField": "care_coordination_involved",
      "label": "Is care coordination involved?",
      "readonlyLabel": "Is care coordination involved? How so?",
      "dataType": "boolean",
      "formType": "radio",
      "isPageStart": true,
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "careCoordinationInvolvedDescription"
      }
    },
    "care_coordination_involved_description": {
      "gqlField": "careCoordinationInvolvedDescription",
      "goField": "CareCoordinationInvolvedDescription",
      "dbField": "care_coordination_involved_description",
      "label": "How so?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "care_coordination_involved_note": {
      "gqlField": "careCoordinationInvolvedNote",
      "goField": "CareCoordinationInvolvedNote",
      "dbField": "care_coordination_involved_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "additional_services_involved": {
      "gqlField": "additionalServicesInvolved",
      "goField": "AdditionalServicesInvolved",
      "dbField": "additional_services_involved",
      "label": "Are additional services involved?",
      "readonlyLabel": "Are additional services involved? How so?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "additionalServicesInvolvedDescription"
      }
    },
    "additional_services_involved_description": {
      "gqlField": "additionalServicesInvolvedDescription",
      "goField": "AdditionalServicesInvolvedDescription",
      "dbField": "additional_services_involved_description",
      "label": "How so?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "additional_services_involved_note": {
      "gqlField": "additionalServicesInvolvedNote",
      "goField": "AdditionalServicesInvolvedNote",
      "dbField": "additional_services_involved_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "community_partners_involved": {
      "gqlField": "communityPartnersInvolvedDescription",
      "goField": "CommunityPartnersInvolvedDescription",
      "dbField": "community_partners_involved",
      "label": "How so?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "community_partners_involved_note": {
      "gqlField": "communityPartnersInvolvedNote",
      "goField": "CommunityPartnersInvolvedNote",
      "dbField": "community_partners_involved_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "geographies_targeted": {
      "gqlField": "geographiesTargeted",
      "goField": "GeographiesTargeted",
      "dbField": "geographies_targeted",
      "label": "Is the model targeted at specific geographies?",
      "dataType": "boolean",
      "formType": "radio",
      "isPageStart": true,
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "childRelation": {
        "true": [
          null,
          null
        ]
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "geographies_targeted_types": {
      "gqlField": "geographiesTargetedTypes",
      "goField": "GeographiesTargetedTypes",
      "dbField": "geographies_targeted_types",
      "label": "Geography type is",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "STATE": "States and territories",
        "REGION": "Region",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "geographiesTargetedTypesOther"
      },
      "childRelation": {
        "STATE": [
          null
        ],
        "REGION": [
          null
        ]
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "geographies_states_and_territories": {
      "gqlField": "geographiesStatesAndTerritories",
      "goField": "GeographiesStatesAndTerritories",
      "dbField": "geographies_states_and_territories",
      "label": "Which states and territories?",
      "multiSelectLabel": "States and territories",
      "dataType": "enum",
      "formType": "multiSelect",
      "isOtherType": true,
      "options": {
        "AL": "AL - Alabama",
        "AK": "AK - Alaska",
        "AZ": "AZ - Arizona",
        "AR": "AR - Arkansas",
        "CA": "CA - California",
        "CO": "CO - Colorado",
        "CT": "CT - Connecticut",
        "DE": "DE - Delaware",
        "DC": "DC - District of Columbia",
        "FL": "FL - Florida",
        "GA": "GA - Georgia",
        "HI": "HI - Hawaii",
        "ID": "ID - Idaho",
        "IL": "IL - Illinois",
        "IN": "IN - Indiana",
        "IA": "IA - Iowa",
        "KS": "KS - Kansas",
        "KY": "KY - Kentucky",
        "LA": "LA - Louisiana",
        "ME": "ME - Maine",
        "MD": "MD - Maryland",
        "MA": "MA - Massachusetts",
        "MI": "MI - Michigan",
        "MN": "MN - Minnesota",
        "MS": "MS - Mississippi",
        "MO": "MO - Missouri",
        "MT": "MT - Montana",
        "NE": "NE - Nebraska",
        "NV": "NV - Nevada",
        "NH": "NH - New Hampshire",
        "NJ": "NJ - New Jersey",
        "NM": "NM - New Mexico",
        "NY": "NY - New York",
        "NC": "NC - North Carolina",
        "ND": "ND - North Dakota",
        "OH": "OH - Ohio",
        "OK": "OK - Oklahoma",
        "OR": "OR - Oregon",
        "PA": "PA - Pennsylvania",
        "RI": "RI - Rhode Island",
        "SC": "SC - South Carolina",
        "SD": "SD - South Dakota",
        "TN": "TN - Tennessee",
        "TX": "TX - Texas",
        "UT": "UT - Utah",
        "VT": "VT - Vermont",
        "VA": "VA - Virginia",
        "WA": "WA - Washington",
        "WV": "WV - West Virginia",
        "WI": "WI - Wisconsin",
        "WY": "WY - Wyoming",
        "AS": "AS - American Samoa",
        "GU": "GU - Guam",
        "MP": "MP - Northern Mariana Islands",
        "PR": "PR - Puerto Rico",
        "UM": "UM - U.S. Minor Outlying Islands",
        "VI": "VI - U.S. Virgin Islands"
      },
      "readonlyOptions": {
        "AL": "Alabama",
        "AK": "Alaska",
        "AZ": "Arizona",
        "AR": "Arkansas",
        "CA": "California",
        "CO": "Colorado",
        "CT": "Connecticut",
        "DE": "Delaware",
        "DC": "District of Columbia",
        "FL": "Florida",
        "GA": "Georgia",
        "HI": "Hawaii",
        "ID": "Idaho",
        "IL": "Illinois",
        "IN": "Indiana",
        "IA": "Iowa",
        "KS": "Kansas",
        "KY": "Kentucky",
        "LA": "Louisiana",
        "ME": "Maine",
        "MD": "Maryland",
        "MA": "Massachusetts",
        "MI": "Michigan",
        "MN": "Minnesota",
        "MS": "Mississippi",
        "MO": "Missouri",
        "MT": "Montana",
        "NE": "Nebraska",
        "NV": "Nevada",
        "NH": "New Hampshire",
        "NJ": "New Jersey",
        "NM": "New Mexico",
        "NY": "New York",
        "NC": "North Carolina",
        "ND": "North Dakota",
        "OH": "Ohio",
        "OK": "Oklahoma",
        "OR": "Oregon",
        "PA": "Pennsylvania",
        "RI": "Rhode Island",
        "SC": "South Carolina",
        "SD": "South Dakota",
        "TN": "Tennessee",
        "TX": "Texas",
        "UT": "Utah",
        "VT": "Vermont",
        "VA": "Virginia",
        "WA": "Washington",
        "WV": "West Virginia",
        "WI": "Wisconsin",
        "WY": "Wyoming",
        "AS": "American Samoa",
        "GU": "Guam",
        "MP": "Northern Mariana Islands",
        "PR": "Puerto Rico",
        "UM": "U.S. Minor Outlying Islands",
        "VI": "U.S. Virgin Islands"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "geographies_region_types": {
      "gqlField": "geographiesRegionTypes",
      "goField": "GeographiesRegionTypes",
      "dbField": "geographies_region_types",
      "label": "Geography region types",
      "dataType": "enum",
      "formType": "checkbox",
      "isOtherType": true,
      "options": {
        "CBSA": "Core-based statistical areas (CBSAs)",
        "HRR": "Hospital Referral Regions (HRR)",
        "MSA": "Metropolitan Statistical Areas (MSAs)"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "geographies_targeted_types_other": {
      "gqlField": "geographiesTargetedTypesOther",
      "goField": "GeographiesTargetedTypesOther",
      "dbField": "geographies_targeted_types_other",
      "label": "Please specify what the other geography type is.",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "geographies_targeted_applied_to": {
      "gqlField": "geographiesTargetedAppliedTo",
      "goField": "GeographiesTargetedAppliedTo",
      "dbField": "geographies_targeted_applied_to",
      "label": "Geographies are applied to",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "BENEFICIARIES": "Beneficiaries",
        "PARTICIPANTS": "Participants",
        "PROVIDERS": "Providers",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "geographiesTargetedAppliedToOther"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "geographies_targeted_applied_to_other": {
      "gqlField": "geographiesTargetedAppliedToOther",
      "goField": "GeographiesTargetedAppliedToOther",
      "dbField": "geographies_targeted_applied_to_other",
      "label": "Please specify what the geographies are applied to.",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "geographies_targeted_note": {
      "gqlField": "geographiesTargetedNote",
      "goField": "GeographiesTargetedNote",
      "dbField": "geographies_targeted_note",
      "label": "Notes",
      "dataType": "boolean",
      "formType": "radio",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "participation_options": {
      "gqlField": "participationOptions",
      "goField": "ParticipationOptions",
      "dbField": "participation_options",
      "label": "Does the model offer different options for participation?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "participation_options_note": {
      "gqlField": "participationOptionsNote",
      "goField": "ParticipationOptionsNote",
      "dbField": "participation_options_note",
      "label": "Notes",
      "dataType": "boolean",
      "formType": "radio",
      "filterGroups": [
        "CMMI"
      ]
    },
    "agreement_types": {
      "gqlField": "agreementTypes",
      "goField": "AgreementTypes",
      "dbField": "agreement_types",
      "label": "What is the agreement type?",
      "sublabel": "Note: CMMI writes, Office of General Council (OGC) approves both types of agreements",
      "dataType": "boolean",
      "formType": "checkbox",
      "options": {
        "COOPERATIVE": "Co-Operative Agreement/Grant",
        "PARTICIPATION": "Participation Agreement",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "agreementTypesOther"
      },
      "childRelation": {
        "PARTICIPATION": [
          null
        ]
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "agreement_types_other": {
      "gqlField": "agreementTypesOther",
      "goField": "AgreementTypesOther",
      "dbField": "agreement_types_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "multiple_patricipation_agreements_needed": {
      "gqlField": "multiplePatricipationAgreementsNeeded",
      "goField": "MultiplePatricipationAgreementsNeeded",
      "dbField": "multiple_patricipation_agreements_needed",
      "label": "Which rule do you anticipate using and what is the target date of display for that regulation?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "multiple_patricipation_agreements_needed_note": {
      "gqlField": "multiplePatricipationAgreementsNeededNote",
      "goField": "MultiplePatricipationAgreementsNeededNote",
      "dbField": "multiple_patricipation_agreements_needed_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "rulemaking_required": {
      "gqlField": "rulemakingRequired",
      "goField": "RulemakingRequired",
      "dbField": "rulemaking_required",
      "label": "Is rulemaking required?",
      "readonlyLabel": "Is rulemaking required? If so, which rule do you anticipate using and what is the target date of display for that regulation?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "rulemakingRequiredDescription"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "rulemaking_required_note": {
      "gqlField": "rulemakingRequiredNote",
      "goField": "RulemakingRequiredNote",
      "dbField": "rulemaking_required_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "authority_allowances": {
      "gqlField": "authorityAllowances",
      "goField": "AuthorityAllowances",
      "dbField": "authority_allowances",
      "label": "What authority allows CMMI to test the model?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ACA": "3021 Affordable Care Act (ACA)",
        "CONGRESSIONALLY_MANDATED": "Congressionally Mandated Demonstration",
        "SSA_PART_B": "Section 1833(e) (Part B services) of the Social Security Act",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "authorityAllowancesOther"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "authority_allowances_other": {
      "gqlField": "authorityAllowancesOther",
      "goField": "AuthorityAllowancesOther",
      "dbField": "authority_allowances_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "authority_allowances_note": {
      "gqlField": "authorityAllowancesNote",
      "goField": "AuthorityAllowancesNote",
      "dbField": "authority_allowances_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "waivers_required": {
      "gqlField": "waiversRequired",
      "goField": "WaiversRequired",
      "dbField": "waivers_required",
      "label": "Are waivers required?",
      "readonlyLabel": "Are waivers required? If so, which types of waivers?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "waiversRequiredTypes"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "waivers_required_types": {
      "gqlField": "waiversRequiredTypes",
      "goField": "WaiversRequiredTypes",
      "dbField": "waivers_required_types",
      "label": "Which types of waivers are required? Select all that apply.",
      "readonlyLabel": "Which types of waivers are required?",
      "dataType": "enum",
      "formType": "checkbox",
      "isOtherType": true,
      "options": {
        "FRAUD_ABUSE": "Fraud and Abuse",
        "MEDICAID": "Medicaid",
        "PROGRAM_PAYMENT": "Program/payment"
      },
      "optionsLabels": {
        "FRAUD_ABUSE": "(Note: Federal Waiver team writes)",
        "MEDICAID": "(1115, other)",
        "PROGRAM_PAYMENT": "(Note: CMMI writes, Office of General Council (OGC) adivses, full clearance process is required)"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "waivers_required_note": {
      "gqlField": "waiversRequiredNote",
      "goField": "WaiversRequiredNote",
      "dbField": "waivers_required_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "status": {
      "gqlField": "status",
      "goField": "Status",
      "dbField": "status",
      "label": "Model Plan status",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "READY": "Ready",
        "IN_PROGRESS": "In progress",
        "READY_FOR_REVIEW": "Ready for review",
        "READY_FOR_CLEARANCE": "Ready for clearance"
      }
    }
  },
  "participantsAndProviders": {
    "participants": {
      "gqlField": "participants",
      "goField": "Participants",
      "dbField": "participants",
      "label": "Who are the participants? Select all that apply.",
      "readonlyLabel": "Who are the participants?",
      "multiSelectLabel": "Selected participants",
      "dataType": "enum",
      "formType": "multiSelect",
      "options": {
        "ACCOUNTABLE_CARE_ORGANIZATION": "Accountable Care Organization (ACO)",
        "COMMERCIAL_PAYERS": "Commercial payers",
        "COMMUNITY_BASED_ORGANIZATIONS": "Community-based organizations (CBO)",
        "CONVENER": "Convener",
        "ENTITIES": "Legal Entities",
        "MEDICAID_MANAGED_CARE_ORGANIZATIONS": "Medicaid Managed Care organizations",
        "MEDICAID_PROVIDERS": "Medicaid providers",
        "MEDICARE_ADVANTAGE_PLANS": "Medicare Advantage plans",
        "MEDICARE_ADVANTAGE_PRESCRIPTION_DRUG_PLANS": "Medicare Advantage Prescription Drug (MAPD) plans",
        "MEDICARE_PROVIDERS": "Medicare providers/suppliers",
        "NON_PROFIT_ORGANIZATIONS": "Non-profit organizations",
        "STANDALONE_PART_D_PLANS": "Standalone Part D plans",
        "STATES": "States",
        "STATE_MEDICAID_AGENCIES": "State Medicaid agencies",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "MEDICARE_PROVIDERS": "medicareProviderType",
        "STATES": "statesEngagement",
        "OTHER": "participantsOther"
      },
      "filterGroups": [
        "CBOSC",
        "CMMI",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "medicare_provider_type": {
      "gqlField": "medicareProviderType",
      "goField": "MedicareProviderType",
      "dbField": "medicare_provider_type",
      "label": "Which type of Medicare providers/suppliers?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CBOSC",
        "CMMI",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "states_engagement": {
      "gqlField": "statesEngagement",
      "goField": "StatesEngagement",
      "dbField": "states_engagement",
      "label": "Please describe how states will engage with your model.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CBOSC",
        "CMMI",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "participantsOther": {
      "gqlField": "participantsOther",
      "goField": "ParticipantsOther",
      "dbField": "participantsOther",
      "label": "Please describe the other participants engaging with this model",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CBOSC",
        "CMMI",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "participantsNote": {
      "gqlField": "participantsNote",
      "goField": "ParticipantsNote",
      "dbField": "participantsNote",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CBOSC",
        "CMMI",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "participants_currently_in_models_note": {
      "gqlField": "participantsCurrentlyInModelsNote",
      "goField": "ParticipantsCurrentlyInModelsNote",
      "dbField": "participants_currently_in_models_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "modelApplicationLevel": {
      "gqlField": "modelApplicationLevel",
      "goField": "ModelApplicationLevel",
      "dbField": "modelApplicationLevel",
      "label": "At what level will the model apply?",
      "sublabel": "(e.g., all services identified at the CPT or ICD-10 code level, epsiode of care for a specific span of time, all hospitals unpaid under the Inpatient Prospective Payment System in a certain state)",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "expected_number_of_participants": {
      "gqlField": "expectedNumberOfParticipants",
      "goField": "ExpectedNumberOfParticipants",
      "dbField": "expected_number_of_participants",
      "label": "How many participants do you expect?",
      "sublabel": "Note: Sometimes RRCEG provides a minimum for the power calculation. Other times stakeholder research may inform the team about who are good candidates or might be interested in participating.",
      "dataType": "number",
      "formType": "rangeInput",
      "filterGroups": [
        "CBOSC",
        "CCW",
        "DFSDM",
        "IPC"
      ],
      "isPageStart": true,
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "estimateConfidence"
      }
    },
    "estimate_confidence": {
      "gqlField": "estimateConfidence",
      "goField": "EstimateConfidence",
      "dbField": "estimate_confidence",
      "label": "What is your level of confidence on this estimate?",
      "dataType": "enum",
      "formType": "radio",
      "options": {
        "NOT_AT_ALL": "Not at all confident",
        "SLIGHTLY": "Slightly confident",
        "FAIRLY": "Fairly confident",
        "COMPLETELY": "Completely confident"
      },
      "filterGroups": [
        "CBOSC",
        "CCW",
        "DFSDM",
        "IPC"
      ],
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "expectedNumberOfParticipants"
      }
    },
    "confidence_note": {
      "gqlField": "confidenceNote",
      "goField": "ConfidenceNote",
      "dbField": "confidence_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CBOSC",
        "CCW",
        "DFSDM",
        "IPC"
      ]
    },
    "recruitment_method": {
      "gqlField": "recruitmentMethod",
      "goField": "RecruitmentMethod",
      "dbField": "recruitment_method",
      "label": "How will you recruit the participants?",
      "dataType": "enum",
      "formType": "radio",
      "options": {
        "APPLICATION_COLLECTION_TOOL": "Use an application collection tool",
        "LOI": "LOI (Letter of intent)",
        "NOFO": "NOFO (Notice of funding opportunity for grants/cooperative agreements)",
        "OTHER": "Other",
        "NA": "Not applicable"
      },
      "optionsLabels": {
        "NOFO": "CMMI writes, Office of General Council (OGC) reviews and approves"
      },
      "optionsRelatedInfo": {
        "OTHER": "recruitmentOther"
      }
    },
    "recruitment_other": {
      "gqlField": "recruitmentOther",
      "goField": "RecruitmentOther",
      "dbField": "recruitment_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "recruitment_note": {
      "gqlField": "recruitmentNote",
      "goField": "RecruitmentNote",
      "dbField": "recruitment_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "selection_method": {
      "gqlField": "selectionMethod",
      "goField": "SelectionMethod",
      "dbField": "selection_method",
      "label": "How will you select participants? Select all that appy.",
      "readonlyLabel": "How will you select participants?",
      "multiSelectLabel": "Selected participants",
      "dataType": "enum",
      "formType": "multiSelect",
      "options": {
        "APPLICATION_REVIEW_AND_SCORING_TOOL": "Use an application review and scoring tool",
        "APPLICATION_SUPPORT_CONTRACTOR": "Get an application support contractor",
        "BASIC_CRITERIA": "We have a basic set of criteria and plan to accept any participant that meets them",
        "CMS_COMPONENT_OR_PROCESS": "Another CMS component or process will provide support",
        "MODEL_TEAM_REVIEW_APPLICATIONS": "Model team will review applications",
        "SUPPORT_FROM_CMMI": "Solicit support for CMII staff",
        "OTHER": "Other",
        "NO_SELECTING_PARTICIPANTS": "We wonâ€™t be selecting participants"
      },
      "optionsRelatedInfo": {
        "OTHER": "selectionOther"
      },
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "PBG"
      ]
    },
    "selection_other": {
      "gqlField": "selectionOther",
      "goField": "SelectionOther",
      "dbField": "selection_other",
      "label": "Please describe the other participants engaging with this model",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "PBG"
      ]
    },
    "selection_note": {
      "gqlField": "selectionNote",
      "goField": "SelectionNote",
      "dbField": "selection_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "PBG"
      ]
    },
    "participant_added_frequency": {
      "gqlField": "participantAddedFrequency",
      "goField": "ParticipantAddedFrequency",
      "dbField": "participant_added_frequency",
      "label": "How frequently are participants added?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "participantAddedFrequencyContinually",
        "OTHER": "participantAddedFrequencyOther"
      },
      "filterGroups": [
        "IPC"
      ],
      "isPageStart": true
    },
    "participant_added_frequency_continually": {
      "gqlField": "participantAddedFrequencyContinually",
      "goField": "ParticipantAddedFrequencyContinually",
      "dbField": "participant_added_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "IPC"
      ]
    },
    "participant_added_frequency_other": {
      "gqlField": "participantAddedFrequencyOther",
      "goField": "ParticipantAddedFrequencyOther",
      "dbField": "participant_added_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "IPC"
      ]
    },
    "participant_added_frequency_note": {
      "gqlField": "participantAddedFrequencyNote",
      "goField": "ParticipantAddedFrequencyNote",
      "dbField": "participant_added_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "IPC"
      ]
    },
    "participant_removed_frequency": {
      "gqlField": "participantRemovedFrequency",
      "goField": "ParticipantRemovedFrequency",
      "dbField": "participant_removed_frequency",
      "label": "How frequently are participants removed?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "participantRemovedFrequencyContinually",
        "OTHER": "participantRemovedFrequencyOther"
      },
      "filterGroups": [
        "IPC"
      ]
    },
    "participant_removed_frequency_continually": {
      "gqlField": "participantRemovedFrequencyContinually",
      "goField": "ParticipantRemovedFrequencyContinually",
      "dbField": "participant_removed_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "IPC"
      ]
    },
    "participant_removed_frequency_other": {
      "gqlField": "participantRemovedFrequencyOther",
      "goField": "ParticipantRemovedFrequencyOther",
      "dbField": "participant_removed_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "IPC"
      ]
    },
    "participant_removed_frequency_note": {
      "gqlField": "participantRemovedFrequencyNote",
      "goField": "ParticipantRemovedFrequencyNote",
      "dbField": "participant_removed_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "IPC"
      ]
    },
    "communication_method": {
      "gqlField": "communicationMethodOther",
      "goField": "CommunicationMethodOther",
      "dbField": "communication_method",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CBOSC",
        "IPC"
      ]
    },
    "communication_note": {
      "gqlField": "communicationNote",
      "goField": "CommunicationNote",
      "dbField": "communication_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CBOSC",
        "IPC"
      ]
    },
    "risk_type": {
      "gqlField": "riskType",
      "goField": "RiskType",
      "dbField": "risk_type",
      "label": "What type of risk will the participant assume?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "TWO_SIDED": "Two-sided",
        "ONE_SIDED": "One-sided",
        "CAPITATION": "Capitation",
        "NOT_RISK_BASED": "Not risk-based",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "riskOther"
      }
    },
    "risk_other": {
      "gqlField": "riskOther",
      "goField": "RiskOther",
      "dbField": "risk_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "risk_note": {
      "gqlField": "riskNote",
      "goField": "RiskNote",
      "dbField": "risk_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "will_risk_change": {
      "gqlField": "willRiskChange",
      "goField": "WillRiskChange",
      "dbField": "will_risk_change",
      "label": "Will the risk arrangement change as the model progresses?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      }
    },
    "will_risk_change_note": {
      "gqlField": "willRiskChangeNote",
      "goField": "WillRiskChangeNote",
      "dbField": "will_risk_change_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "coordinate_work": {
      "gqlField": "coordinateWork",
      "goField": "CoordinateWork",
      "dbField": "coordinate_work",
      "label": "Will the participants coordinate the work of others?",
      "sublabel": "(e.g. conveners)",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "isPageStart": true
    },
    "coordinate_work_note": {
      "gqlField": "coordinateWorkNote",
      "goField": "CoordinateWorkNote",
      "dbField": "coordinate_work_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "gainshare_payments": {
      "gqlField": "gainsharePayments",
      "goField": "GainsharePayments",
      "dbField": "gainshare_payments",
      "label": "Will there be gainsharing payments?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "childRelation": {
        "true": [
          null,
          null
        ]
      },
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "gainsharePaymentsTrack"
      }
    },
    "gainshare_payments_track": {
      "gqlField": "gainsharePaymentsTrack",
      "goField": "GainsharePaymentsTrack",
      "dbField": "gainshare_payments_track",
      "label": "Will you track gainsharing payments?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "gainsharePayments"
      }
    },
    "gainshare_payments_eligibility": {
      "gqlField": "gainsharePaymentsEligibility",
      "goField": "GainsharePaymentsEligibility",
      "dbField": "gainshare_payments_eligibility",
      "label": "Are providers eligible to participate in gainsharing arrangements?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ALL_PROVIDERS": "All providers",
        "SOME_PROVIDERS": "Some providers",
        "OTHER": "Other",
        "NO": "No"
      },
      "optionsRelatedInfo": {
        "OTHER": "gainsharePaymentsEligibilityOther"
      }
    },
    "gainshare_payments_eligibility_other": {
      "gqlField": "gainsharePaymentsEligibilityOther",
      "goField": "GainsharePaymentsEligibilityOther",
      "dbField": "gainshare_payments_eligibility_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "gainshare_payments_note": {
      "gqlField": "gainsharePaymentsNote",
      "goField": "GainsharePaymentsNote",
      "dbField": "gainshare_payments_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "participants_ids": {
      "gqlField": "participantsIds",
      "goField": "ParticipantsIds",
      "dbField": "participants_ids",
      "label": "Will you collect participant IDs? If so, select which types.",
      "sublabel": "Note: If this will be a MIPS or Advanced APM, you need to collect provider TIN-NPIs for participants to benefit from QPP. In addition, CPI vetting needs to be preformed.",
      "readonlyLabel": "Will you collect participant IDs?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "CCNS": "CCNs",
        "NPIS": "NPIs",
        "TINS": "TINs",
        "OTHER": "Other",
        "NO_IDENTIFIERS": "No, we will not collect provider identifiers"
      },
      "optionsRelatedInfo": {
        "OTHER": "participantsIdsOther"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "participants_ids_other": {
      "gqlField": "participantsIdsOther",
      "goField": "ParticipantsIdsOther",
      "dbField": "participants_ids_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC"
      ]
    },
    "participants_ids_note": {
      "gqlField": "participantsIDSNote",
      "goField": "ParticipantsIDSNote",
      "dbField": "participants_ids_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "provider_addition_frequency": {
      "gqlField": "providerAdditionFrequency",
      "goField": "ProviderAdditionFrequency",
      "dbField": "provider_addition_frequency",
      "label": "How frequently are providers added?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "providerAdditionFrequencyContinually",
        "OTHER": "providerAdditionFrequencyOther"
      },
      "filterGroups": [
        "OACT",
        "IPC"
      ],
      "isPageStart": true
    },
    "provide_addition_frequency_continually": {
      "gqlField": "providerAdditionFrequencyContinually",
      "goField": "ProviderAdditionFrequencyContinually",
      "dbField": "provide_addition_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "OACT",
        "IPC"
      ]
    },
    "provider_addition_frequency_other": {
      "gqlField": "providerAdditionFrequencyOther",
      "goField": "ProviderAdditionFrequencyOther",
      "dbField": "provider_addition_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "OACT",
        "IPC"
      ]
    },
    "provider_addition_frequency_note": {
      "gqlField": "providerAdditionFrequencyNote",
      "goField": "ProviderAdditionFrequencyNote",
      "dbField": "provider_addition_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "OACT",
        "IPC"
      ]
    },
    "provider_add_method": {
      "gqlField": "providerAddMethod",
      "goField": "ProviderAddMethod",
      "dbField": "provider_add_method",
      "label": "How will you decide to add providers? Select all that apply.",
      "sublabel": "Please include details on decision points, timing, and implications of adding them to the model in an additional note.",
      "readonlyLabel": "How will you decide to add providers?",
      "dataType": "enum",
      "formType": "multiSelect",
      "multiSelectLabel": "How will you add providers?",
      "options": {
        "PROSPECTIVELY": "Add prospectively (based on previous yearâ€™s interactions)",
        "RETROSPECTIVELY": "Add retrospectively (once an interaction happens this year)",
        "VOLUNTARILY": "Add voluntarily",
        "MANDATORILY": "Add mandatorily",
        "ONLINE_TOOLS": "Use online tools to view what types of participant files and data have been uploaded and downloaded",
        "OTHER": "Other",
        "NA": "Not applicable"
      },
      "optionsRelatedInfo": {
        "OTHER": "providerAddMethodOther"
      },
      "filterGroups": [
        "IPC",
        "OACT"
      ]
    },
    "provider_add_method_other": {
      "gqlField": "providerAddMethodOther",
      "goField": "ProviderAddMethodOther",
      "dbField": "provider_add_method_other",
      "label": "Please describe the other method for deciding which providers to add.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IPC",
        "OACT"
      ]
    },
    "provider_add_method_note": {
      "gqlField": "providerAddMethodNote",
      "goField": "ProviderAddMethodNote",
      "dbField": "provider_add_method_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IPC",
        "OACT"
      ]
    },
    "provider_leave_method": {
      "gqlField": "providerLeaveMethod",
      "goField": "ProviderLeaveMethod",
      "dbField": "provider_leave_method",
      "label": "Can providers leave the model? Select all that apply.",
      "readonlyLabel": "Can providers leave the model?",
      "sublabel": "Please include details on decision points, timing, and implications of leaving the model in an additional note.",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "VARIES_BY_TYPE_OF_PROVIDER": "It varies by type of provider",
        "NOT_ALLOWED_TO_LEAVE": "They are not allowed to leave",
        "AFTER_A_CERTAIN_WITH_IMPLICATIONS": "They can leave after a certain date but there are implications",
        "VOLUNTARILY_WITHOUT_IMPLICATIONS": "They can leave voluntarily at any time without implications",
        "OTHER": "Other",
        "NOT_APPLICABLE": "Not applicable"
      },
      "optionsRelatedInfo": {
        "OTHER": "providerLeaveMethodOther"
      },
      "filterGroups": [
        "IPC",
        "OACT"
      ]
    },
    "provider_leave_method_other": {
      "gqlField": "providerLeaveMethodOther",
      "goField": "ProviderLeaveMethodOther",
      "dbField": "provider_leave_method_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IPC",
        "OACT"
      ],
      "isOtherType": true
    },
    "provider_leave_method_note": {
      "gqlField": "providerLeaveMethodNote",
      "goField": "ProviderLeaveMethodNote",
      "dbField": "provider_leave_method_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IPC",
        "OACT"
      ]
    },
    "provider_removal_frequency": {
      "gqlField": "providerRemovalFrequency",
      "goField": "ProviderRemovalFrequency",
      "dbField": "provider_removal_frequency",
      "label": "How frequently are providers removed?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "providerRemovalFrequencyContinually",
        "OTHER": "providerRemovalFrequencyOther"
      }
    },
    "provide_removal_frequency_continually": {
      "gqlField": "providerRemovalFrequencyContinually",
      "goField": "ProviderRemovalFrequencyContinually",
      "dbField": "provide_removal_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "provider_removal_frequency_other": {
      "gqlField": "providerRemovalFrequencyOther",
      "goField": "ProviderRemovalFrequencyOther",
      "dbField": "provider_removal_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "provider_removal_frequency_note": {
      "gqlField": "providerRemovalFrequencyNote",
      "goField": "ProviderRemovalFrequencyNote",
      "dbField": "provider_removal_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "provider_overlap": {
      "gqlField": "providerOverlap",
      "goField": "ProviderOverlap",
      "dbField": "provider_overlap",
      "label": "Will the providers overlap with other models?",
      "dataType": "enum",
      "formType": "radio",
      "options": {
        "YES_NEED_POLICIES": "Yes, we expect to develop policies to manage the overlaps",
        "YES_NO_ISSUES": "Yes, and the overlaps would not be an issue",
        "NO": "No"
      },
      "childRelation": {
        "YES_NEED_POLICIES": [
          null
        ],
        "YES_NO_ISSUES": [
          null
        ]
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "provider_overlap_hierarchy": {
      "gqlField": "providerOverlapHierarchy",
      "goField": "ProviderOverlapHierarchy",
      "dbField": "provider_overlap_hierarchy",
      "label": "If model providers can be in multiple models that may interact, please note the desired hierarchy of how any payment changes or edits should be applied.",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "provider_overlap_note": {
      "gqlField": "providerOverlapNote",
      "goField": "ProviderOverlapNote",
      "dbField": "provider_overlap_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "status": {
      "gqlField": "status",
      "goField": "Status",
      "dbField": "status",
      "label": "Model Plan status",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "READY": "Ready",
        "IN_PROGRESS": "In progress",
        "READY_FOR_REVIEW": "Ready for review",
        "READY_FOR_CLEARANCE": "Ready for clearance"
      }
    }
  },
  "beneficiaries": {
    "beneficiaries": {
      "gqlField": "beneficiaries",
      "goField": "Beneficiaries",
      "dbField": "beneficiaries",
      "label": "Who are the beneficiaries of this model? Select all that apply.",
      "readonlyLabel": "Who are the beneficiaries of this model?",
      "dataType": "enum",
      "formType": "multiSelect",
      "multiSelectLabel": "Selected groups",
      "options": {
        "DISEASE_SPECIFIC": "Disease-specific",
        "DUALLY_ELIGIBLE": "Dually-eligible beneficiaries",
        "MEDICAID": "Medicaid/Children's Health Insurance Program (CHIP)",
        "MEDICARE_ADVANTAGE": "Medicare Advantage",
        "MEDICARE_FFS": "Medicare FFS beneficiaries",
        "MEDICARE_PART_D": "Prescription Drug (Medicare Part D)",
        "UNDERSERVED": "Underserved",
        "NA": "Not applicable",
        "OTHER": "Other"
      },
      "optionsLabels": {
        "DISEASE_SPECIFIC": "(based on a diagnosis, procedure code, condition, etc.)"
      },
      "optionsRelatedInfo": {
        "DISEASE_SPECIFIC": "diseaseSpecificGroup",
        "OTHER": "beneficiariesOther"
      },
      "filterGroups": [
        "MDM"
      ]
    },
    "disease_specific_group": {
      "gqlField": "diseaseSpecificGroup",
      "goField": "DiseaseSpecificGroup",
      "dbField": "disease_specific_group",
      "label": "Please describe the disease-specific groups this model will impact.",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "MDM"
      ]
    },
    "beneficiaries_other": {
      "gqlField": "beneficiariesNote",
      "goField": "BeneficiariesNote",
      "dbField": "beneficiaries_other",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "MDM"
      ]
    },
    "treat_dual_elligible_different": {
      "gqlField": "treatDualElligibleDifferentHow",
      "goField": "TreatDualElligibleDifferentHow",
      "dbField": "treat_dual_elligible_different",
      "label": "How so?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "treat_dual_elligible_different_note": {
      "gqlField": "treatDualElligibleDifferentNote",
      "goField": "TreatDualElligibleDifferentNote",
      "dbField": "treat_dual_elligible_different_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "exclude_certain_characteristics": {
      "gqlField": "excludeCertainCharacteristics",
      "goField": "ExcludeCertainCharacteristics",
      "dbField": "exclude_certain_characteristics",
      "label": "Should beneficiaries with certain characteristics or enrollments be excluded?",
      "readonlyLabel": "Should beneficiaries with certain characteristics or enrollments be excluded? How so, what are the exclusionary criteria?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "YES": "Yes",
        "NO": "No",
        "TBD": "Not applicable"
      },
      "optionsRelatedInfo": {
        "YES": "excludeCertainCharacteristicsCriteria"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "exclude_certain_characteristics_criteria": {
      "gqlField": "excludeCertainCharacteristicsCriteria",
      "goField": "ExcludeCertainCharacteristicsCriteria",
      "dbField": "exclude_certain_characteristics_criteria",
      "label": "What are the exclusionary criteria?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "exclude_certain_characteristics_note": {
      "gqlField": "excludeCertainCharacteristicsNote",
      "goField": "ExcludeCertainCharacteristicsNote",
      "dbField": "exclude_certain_characteristics_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "number_people_impacted": {
      "gqlField": "numberPeopleImpacted",
      "goField": "NumberPeopleImpacted",
      "dbField": "number_people_impacted",
      "label": "How many people do you think will be impacted by this model?",
      "dataType": "number",
      "formType": "rangeInput",
      "isPageStart": true,
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "estimateConfidence"
      },
      "filterGroups": [
        "MDM"
      ]
    },
    "estimate_confidence": {
      "gqlField": "estimateConfidence",
      "goField": "EstimateConfidence",
      "dbField": "estimate_confidence",
      "label": "What is your level of confidence on this estimate?",
      "dataType": "enum",
      "formType": "radio",
      "options": {
        "NOT_AT_ALL": "Not at all confident",
        "SLIGHTLY": "Slightly confident",
        "FAIRLY": "Fairly confident",
        "COMPLETELY": "Completely confident"
      },
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "numberPeopleImpacted"
      },
      "filterGroups": [
        "MDM"
      ]
    },
    "confidence_note": {
      "gqlField": "confidenceNote",
      "goField": "ConfidenceNote",
      "dbField": "confidence_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "MDM"
      ]
    },
    "beneficiary_selection_method": {
      "gqlField": "beneficiarySelectionMethod",
      "goField": "BeneficiarySelectionMethod",
      "dbField": "beneficiary_selection_method",
      "label": "How will you choose beneficiaries? Select all that apply.",
      "readonlyLabel": "How will you choose beneficiaries?",
      "dataType": "enum",
      "formType": "multiSelect",
      "multiSelectLabel": "Selected methods",
      "options": {
        "HISTORICAL": "Historical claims",
        "PROSPECTIVE": "Prospective selection",
        "RETROSPECTIVE": "Retrospective selection",
        "VOLUNTARY": "Voluntary alignment",
        "PROVIDER_SIGN_UP": "Beneficiary will sign up through their provider",
        "OTHER": "Other",
        "NA": "Not applicable"
      },
      "optionsRelatedInfo": {
        "OTHER": "beneficiarySelectionOther"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_selection_other": {
      "gqlField": "beneficiarySelectionOther",
      "goField": "BeneficiarySelectionOther",
      "dbField": "beneficiary_selection_other",
      "label": "Please describe the other method for choosing beneficiaries.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_selection_note": {
      "gqlField": "beneficiarySelectionNote",
      "goField": "BeneficiarySelectionNote",
      "dbField": "beneficiary_selection_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_selection_frequency": {
      "gqlField": "beneficiarySelectionFrequency",
      "goField": "BeneficiarySelectionFrequency",
      "dbField": "beneficiary_selection_frequency",
      "label": "How frequently are beneficiaries added?",
      "dataType": "enum",
      "formType": "checkbox",
      "isPageStart": true,
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "ANNUALLY": "",
        "SEMIANNUALLY": "",
        "QUARTERLY": "",
        "MONTHLY": "",
        "CONTINUALLY": "beneficiarySelectionFrequencyContinually",
        "OTHER": "beneficiarySelectionFrequencyOther"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_selection_frequency_continually": {
      "gqlField": "beneficiarySelectionFrequencyContinually",
      "goField": "BeneficiarySelectionFrequencyContinually",
      "dbField": "beneficiary_selection_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_selection_frequency_other": {
      "gqlField": "beneficiarySelectionFrequencyOther",
      "goField": "BeneficiarySelectionFrequencyOther",
      "dbField": "beneficiary_selection_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_selection_frequency_note": {
      "gqlField": "beneficiarySelectionFrequencyNote",
      "goField": "BeneficiarySelectionFrequencyNote",
      "dbField": "beneficiary_selection_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_removal_frequency": {
      "gqlField": "beneficiaryRemovalFrequency",
      "goField": "BeneficiaryRemovalFrequency",
      "dbField": "beneficiary_removal_frequency",
      "label": "How frequently are beneficiaries removed?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "ANNUALLY": "",
        "SEMIANNUALLY": "",
        "QUARTERLY": "",
        "MONTHLY": "",
        "CONTINUALLY": "beneficiaryRemovalFrequencyContinually",
        "OTHER": "beneficiaryRemovalFrequencyOther"
      }
    },
    "beneficiary_removal_frequency_continually": {
      "gqlField": "beneficiaryRemovalFrequencyContinually",
      "goField": "BeneficiaryRemovalFrequencyContinually",
      "dbField": "beneficiary_removal_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_removal_frequency_other": {
      "gqlField": "beneficiaryRemovalFrequencyOther",
      "goField": "BeneficiaryRemovalFrequencyOther",
      "dbField": "beneficiary_removal_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_removal_frequency_note": {
      "gqlField": "beneficiaryRemovalFrequencyNote",
      "goField": "BeneficiaryRemovalFrequencyNote",
      "dbField": "beneficiary_removal_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "CMMI"
      ]
    },
    "beneficiary_overlap": {
      "gqlField": "beneficiaryOverlap",
      "goField": "BeneficiaryOverlap",
      "dbField": "beneficiary_overlap",
      "label": "Will the beneficiaries overlap with other models?",
      "dataType": "enum",
      "formType": "radio",
      "options": {
        "YES_NEED_POLICIES": "Yes, we expect to develop policies to manage the overlaps",
        "YES_NO_ISSUES": "Yes, and the overlaps would not be an issue",
        "NO": "No"
      },
      "filterGroups": [
        "MDM"
      ]
    },
    "beneficiary_overlap_note": {
      "gqlField": "beneficiaryOverlapNote",
      "goField": "BeneficiaryOverlapNote",
      "dbField": "beneficiary_overlap_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "MDM"
      ]
    },
    "precedence_rules": {
      "gqlField": "precedenceRules",
      "goField": "PrecedenceRules",
      "dbField": "precedence_rules",
      "label": "Are there precedence rules between this model and other model(s)?",
      "sublabel": "i.e. other models have precedence over you (e.g. mandatory or statutory models running at the same time as yours)",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "YES": "Yes",
        "NO": "No"
      },
      "optionsRelatedInfo": {
        "YES": "precedenceRulesYes",
        "NO": "precedenceRulesNo"
      },
      "filterGroups": [
        "MDM",
        "OACT"
      ]
    },
    "precedence_rules_yes": {
      "gqlField": "precedenceRulesYes",
      "goField": "PrecedenceRulesYes",
      "dbField": "precedence_rules_yes",
      "label": "Please describe",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "MDM",
        "OACT"
      ]
    },
    "precedence_rules_no": {
      "gqlField": "precedenceRulesNo",
      "goField": "PrecedenceRulesNo",
      "dbField": "precedence_rules_no",
      "label": "Please describe",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "MDM",
        "OACT"
      ]
    },
    "precedence_rules_note": {
      "gqlField": "precedenceRulesNote",
      "goField": "PrecedenceRulesNote",
      "dbField": "precedence_rules_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "MDM",
        "OACT"
      ]
    },
    "status": {
      "gqlField": "status",
      "goField": "Status",
      "dbField": "status",
      "label": "Model Plan status",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "READY": "Ready",
        "IN_PROGRESS": "In progress",
        "READY_FOR_REVIEW": "Ready for review",
        "READY_FOR_CLEARANCE": "Ready for clearance"
      }
    }
  },
  "opsEvalAndLearning": {
    "stakeholders": {
      "gqlField": "stakeholdersOther",
      "goField": "StakeholdersOther",
      "dbField": "stakeholders",
      "label": "Please describe the other stakeholders you plan to communicate with.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CBOSC"
      ]
    },
    "stakeholders_note": {
      "gqlField": "helpdeskUse",
      "goField": "HelpdeskUse",
      "dbField": "stakeholders_note",
      "label": "Do you plan to use a helpdesk?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CBOSC"
      ]
    },
    "helpdesk_use_note": {
      "gqlField": "helpdeskUseNote",
      "goField": "HelpdeskUseNote",
      "dbField": "helpdesk_use_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CBOSC"
      ]
    },
    "contractor_support": {
      "gqlField": "contractorSupport",
      "goField": "ContractorSupport",
      "dbField": "contractor_support",
      "label": "What contractors will support your model?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ONE": "One contractor to support implementation",
        "MULTIPLE": "May have separate contractors for different implementation functions",
        "NONE": "Do not plan to use an implemenation contractor",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "contractorSupportOther"
      },
      "childRelation": {
        "ONE": [
          null
        ],
        "MULTIPLE": [
          null
        ],
        "OTHER": [
          null
        ]
      },
      "filterGroups": [
        "CBOSC",
        "IDDOC",
        "PBG"
      ]
    },
    "contractor_support_other": {
      "gqlField": "contractorSupportOther",
      "goField": "ContractorSupportOther",
      "dbField": "contractor_support_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CBOSC",
        "IDDOC",
        "PBG"
      ]
    },
    "contractor_support_how": {
      "gqlField": "contractorSupportHow",
      "goField": "ContractorSupportHow",
      "dbField": "contractor_support_how",
      "label": "In what capacity will they support your model?",
      "sublabel": "(implementation, data analysis, quality, etc.)",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CBOSC",
        "IDDOC",
        "PBG"
      ]
    },
    "contractor_support_note": {
      "gqlField": "contractorSupportNote",
      "goField": "ContractorSupportNote",
      "dbField": "contractor_support_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CBOSC",
        "IDDOC",
        "PBG"
      ]
    },
    "iddoc_support": {
      "gqlField": "iddocSupport",
      "goField": "IddocSupport",
      "dbField": "iddoc_support",
      "label": "Are you planning to use IDDOC support?",
      "sublabel": "IDDOC is commonly known as ACO-OS (Accountable Care Organization Operating System). They can provide support for design, development, operations, and maintenance.",
      "dataType": "boolean",
      "formType": "radio",
      "isPageStart": true,
      "readonlyHeader": "IDDOC operations",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "childRelation": {
        "true": [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "iddoc_support_note": {
      "gqlField": "iddocSupportNote",
      "goField": "IddocSupportNote",
      "dbField": "iddoc_support_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "technical_contacts_identified": {
      "gqlField": "technicalContactsIdentified",
      "goField": "TechnicalContactsIdentified",
      "dbField": "technical_contacts_identified",
      "label": "Are technical contacts identified?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "technicalContactsIdentifiedDetail"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "technical_contacts_identified_detail": {
      "gqlField": "technicalContactsIdentifiedDetail",
      "goField": "TechnicalContactsIdentifiedDetail",
      "dbField": "technical_contacts_identified_detail",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC"
      ]
    },
    "technical_contacts_identified_note": {
      "gqlField": "technicalContactsIdentifiedNote",
      "goField": "TechnicalContactsIdentifiedNote",
      "dbField": "technical_contacts_identified_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "capture_participant_info": {
      "gqlField": "captureParticipantInfoNote",
      "goField": "CaptureParticipantInfoNote",
      "dbField": "capture_participant_info",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "icd_owner": {
      "gqlField": "icdOwner",
      "goField": "IcdOwner",
      "dbField": "icd_owner",
      "label": "ICD owner",
      "dataType": "string",
      "formType": "text",
      "isPageStart": true,
      "readonlyHeader": "Interface Control Document (ICD)",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "draft_icd_due_date": {
      "gqlField": "draftIcdDueDate",
      "goField": "DraftIcdDueDate",
      "dbField": "draft_icd_due_date",
      "label": "Draft ICD required by",
      "dataType": "date",
      "formType": "datePicker",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "icd_note": {
      "gqlField": "icdNote",
      "goField": "IcdNote",
      "dbField": "icd_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "uat_needs": {
      "gqlField": "uatNeeds",
      "goField": "UatNeeds",
      "dbField": "uat_needs",
      "label": "User Acceptance Testing (UAT) â€“ test data needs",
      "dataType": "string",
      "formType": "textarea",
      "isPageStart": true,
      "readonlyHeader": "Testing",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "stc_needs": {
      "gqlField": "stcNeeds",
      "goField": "StcNeeds",
      "dbField": "stc_needs",
      "label": "STC â€“ test data needs",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "testing_timelines": {
      "gqlField": "testingTimelines",
      "goField": "TestingTimelines",
      "dbField": "testing_timelines",
      "label": "Define the testing timelines",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "testing_note": {
      "gqlField": "testingNote",
      "goField": "TestingNote",
      "dbField": "testing_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_monitoring_file_types": {
      "gqlField": "dataMonitoringFileTypes",
      "goField": "DataMonitoringFileTypes",
      "dbField": "data_monitoring_file_types",
      "label": "What types of files? Select all that apply.",
      "readonlyLabel": "What types of files?",
      "dataType": "enum",
      "formType": "checkbox",
      "isPageStart": true,
      "readonlyHeader": "Data monitoring",
      "options": {
        "BENEFICIARY": "Beneficiary",
        "PROVIDER": "Provider",
        "PART_A": "Part A",
        "PART_B": "Part B",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "dataMonitoringFileOther"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_monitoring_file_other": {
      "gqlField": "dataMonitoringFileOther",
      "goField": "DataMonitoringFileOther",
      "dbField": "data_monitoring_file_other",
      "label": "What types of responses?",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_response_type": {
      "gqlField": "dataResponseType",
      "goField": "DataResponseType",
      "dbField": "data_response_type",
      "label": "What types of responses?",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_response_file_frequency": {
      "gqlField": "dataResponseFileFrequency",
      "goField": "DataResponseFileFrequency",
      "dbField": "data_response_file_frequency",
      "label": "Frequency of files?",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_full_time_or_incremental": {
      "gqlField": "dataFullTimeOrIncremental",
      "goField": "DataFullTimeOrIncremental",
      "dbField": "data_full_time_or_incremental",
      "label": "Full time or incremental?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "FULL_TIME": "Full time",
        "INCREMENTAL": "Incremental"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "eft_set_up": {
      "gqlField": "eftSetUp",
      "goField": "EftSetUp",
      "dbField": "eft_set_up",
      "label": "Are Electronic File Transfer (EFT) and connectivity set up?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "unsolicited_adjustments_included": {
      "gqlField": "unsolicitedAdjustmentsIncluded",
      "goField": "UnsolicitedAdjustmentsIncluded",
      "dbField": "unsolicited_adjustments_included",
      "label": "Will unsolicited adjustments be included?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_flow_diagrams_needed": {
      "gqlField": "dataFlowDiagramsNeeded",
      "goField": "DataFlowDiagramsNeeded",
      "dbField": "data_flow_diagrams_needed",
      "label": "Are data flow diagrams needed?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "produce_benefit_enhancement_files": {
      "gqlField": "produceBenefitEnhancementFiles",
      "goField": "ProduceBenefitEnhancementFiles",
      "dbField": "produce_benefit_enhancement_files",
      "label": "Will you produce Benefit Enhancement Files?",
      "sublabel": "This means we would use these files for Participating and Preferred Providers.",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "file_naming_conventions": {
      "gqlField": "fileNamingConventions",
      "goField": "FileNamingConventions",
      "dbField": "file_naming_conventions",
      "label": "File naming conventions",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_monitoring_note": {
      "gqlField": "dataMonitoringNote",
      "goField": "DataMonitoringNote",
      "dbField": "data_monitoring_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC"
      ]
    },
    "benchmark_for_performance": {
      "gqlField": "benchmarkForPerformance",
      "goField": "BenchmarkForPerformance",
      "dbField": "benchmark_for_performance",
      "label": "Will you establish a benchmark to capture performance?",
      "dataType": "enum",
      "formType": "radio",
      "isPageStart": true,
      "options": {
        "YES_RECONCILE": "Yes, and we will reconcile actual performance against it",
        "YES_NO_RECONCILE": "Yes, but we will not reconcile actual performance against it",
        "NO": "No"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "benchmark_for_performance_note": {
      "gqlField": "benchmarkForPerformanceNote",
      "goField": "BenchmarkForPerformanceNote",
      "dbField": "benchmark_for_performance_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "compute_performance_scores": {
      "gqlField": "computePerformanceScores",
      "goField": "ComputePerformanceScores",
      "dbField": "compute_performance_scores",
      "label": "Will you compute performance scores?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "compute_performance_scores_note": {
      "gqlField": "computePerformanceScoresNote",
      "goField": "ComputePerformanceScoresNote",
      "dbField": "compute_performance_scores_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "risk_adjust_performance": {
      "gqlField": "riskAdjustPerformance",
      "goField": "RiskAdjustPerformance",
      "dbField": "risk_adjust_performance",
      "label": "Performance Scores",
      "readonlyLabel": "Will you make risk adjustments to performance scores?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "riskAdjustFeedback"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "risk_adjust_feedback": {
      "gqlField": "riskAdjustFeedback",
      "goField": "RiskAdjustFeedback",
      "dbField": "risk_adjust_feedback",
      "label": "Feedback Results",
      "readonlyLabel": "Will you make risk adjustments to feedback results?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "riskAdjustPerformance"
      }
    },
    "risk_adjust_payments": {
      "gqlField": "riskAdjustPayments",
      "goField": "RiskAdjustPayments",
      "dbField": "risk_adjust_payments",
      "label": "Payments",
      "readonlyLabel": "Will you make risk adjustments to payments?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "riskAdjustOther"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "risk_adjust_other": {
      "gqlField": "riskAdjustOther",
      "goField": "RiskAdjustOther",
      "dbField": "risk_adjust_other",
      "label": "Others",
      "readonlyLabel": "Will you make risk adjustments to others?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "riskAdjustPayments"
      }
    },
    "risk_adjust_note": {
      "gqlField": "riskAdjustNote",
      "goField": "RiskAdjustNote",
      "dbField": "risk_adjust_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "appeal_performance": {
      "gqlField": "appealPerformance",
      "goField": "AppealPerformance",
      "dbField": "appeal_performance",
      "label": "Performance Scores",
      "readonlyLabel": "Will participants be able to appeal performance scores?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "appealFeedback"
      }
    },
    "appeal_feedback": {
      "gqlField": "appealFeedback",
      "goField": "AppealFeedback",
      "dbField": "appeal_feedback",
      "label": "Feedback Results",
      "readonlyLabel": "Will participants be able to appeal feedback results?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "appealPerformance"
      }
    },
    "appeal_payments": {
      "gqlField": "appealPayments",
      "goField": "AppealPayments",
      "dbField": "appeal_payments",
      "label": "Payments",
      "readonlyLabel": "Will participants be able to appeal payments?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "left",
        "adjacentField": "appealOther"
      }
    },
    "appeal_other": {
      "gqlField": "appealOther",
      "goField": "AppealOther",
      "dbField": "appeal_other",
      "label": "Others",
      "readonlyLabel": "Will participants be able to appeal others?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "adjacentPositioning": {
        "position": "right",
        "adjacentField": "appealPayments"
      }
    },
    "appeal_note": {
      "gqlField": "appealNote",
      "goField": "AppealNote",
      "dbField": "appeal_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "evaluation_approaches": {
      "gqlField": "evaluationApproaches",
      "goField": "eEvaluationApproaches",
      "dbField": "evaluation_approaches",
      "label": "What type of evaluation approach are you considering? Select all that apply.",
      "readonlyLabel": "What type of evaluation approach are you considering?",
      "dataType": "enum",
      "formType": "checkbox",
      "isPageStart": true,
      "options": {
        "COMPARISON_MATCH": "Identify a comparison/match group",
        "CONTROL_INTERVENTION": "Establish control and intervention groups",
        "INTERRUPTED_TIME": "Interrupted time series",
        "NON_MEDICARE_DATA": "Leverage non-Medicare data (such as Medicaid data, external data sets)",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "evaluationApproachOther"
      }
    },
    "evaluation_approach_other": {
      "gqlField": "evaluationApproachOther",
      "goField": "EvaluationApproachOther",
      "dbField": "evaluation_approach_other",
      "label": "Please describe the other evaluation approach you are considering.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "evalutaion_approach_note": {
      "gqlField": "evalutaionApproachNote",
      "goField": "EvalutaionApproachNote",
      "dbField": "evalutaion_approach_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "ccm_involvment": {
      "gqlField": "ccmInvolvment",
      "goField": "CcmInvolvment",
      "dbField": "ccm_involvment",
      "label": "Is Chronic Conditions Warehouse (CCW) involved in the model?",
      "sublabel": "If you select either yes option, there will be additional questions to answer.",
      "dataType": "enum",
      "formType": "checkbox",
      "hideRelatedQuestionAlert": true,
      "options": {
        "YES_EVALUATION": "Yes, for evaluation",
        "YES__IMPLEMENTATION": "Yes, for implementation",
        "NO": "No",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "ccmInvolvmentOther"
      },
      "childRelation": {
        "YES_EVALUATION": [
          null,
          null,
          null
        ],
        "YES__IMPLEMENTATION": [
          null,
          null,
          null
        ]
      },
      "filterGroups": [
        "CCW"
      ]
    },
    "ccm_involvment_other": {
      "gqlField": "ccmInvolvmentOther",
      "goField": "CcmInvolvmentOther",
      "dbField": "ccm_involvment_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CCW"
      ]
    },
    "ccm_involvment_note": {
      "gqlField": "ccmInvolvmentNote",
      "goField": "CcmInvolvmentNote",
      "dbField": "ccm_involvment_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CCW"
      ]
    },
    "data_needed_for_monitoring": {
      "gqlField": "dataNeededForMonitoring",
      "goField": "DataNeededForMonitoring",
      "dbField": "data_needed_for_monitoring",
      "label": "What data do you need to monitor the model? Select all that apply.",
      "readonlyLabel": "What data do you need to monitor the model?",
      "sublabel": "If you select quality claims-based measures or quality reported measures, there will be additional questions to answer.",
      "dataType": "enum",
      "formType": "multiSelect",
      "multiSelectLabel": "Selected data",
      "options": {
        "SITE_VISITS": "Site visits",
        "MEDICARE_CLAIMS": "Medicare claims",
        "MEDICAID_CLAIMS": "Medicaid claims",
        "ENCOUNTER_DATA": "Encounter data",
        "NO_PAY_CLAIMS": "No pay claims",
        "QUALITY_CLAIMS_BASED_MEASURES": "Quality claims-based measures",
        "QUALITY_REPORTED_MEASURES": "Quality reported measures",
        "CLINICAL_DATA": "Clinical data",
        "NON_CLINICAL_DATA": "Non-clinical data (e.g., surveys)",
        "NON_MEDICAL_DATA": "Non-medical data (e.g., housing, nutrition)",
        "OTHER": "Other",
        "NOT_PLANNING_TO_COLLECT_DATA": "Not planning to collect data"
      },
      "hideRelatedQuestionAlert": true,
      "optionsRelatedInfo": {
        "OTHER": "dataNeededForMonitoringOther"
      },
      "childRelation": {
        "QUALITY_CLAIMS_BASED_MEASURES": [
          null,
          null
        ],
        "QUALITY_REPORTED_MEASURES": [
          null,
          null
        ]
      },
      "filterGroups": [
        "CMMI",
        "IDDOC"
      ]
    },
    "data_needed_for_monitoring_other": {
      "gqlField": "dataNeededForMonitoringOther",
      "goField": "DataNeededForMonitoringOther",
      "dbField": "data_needed_for_monitoring_other",
      "label": "What other data do you need to monitor?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "IDDOC"
      ]
    },
    "data_needed_for_monitoring_note": {
      "gqlField": "dataNeededForMonitoringNote",
      "goField": "DataNeededForMonitoringNote",
      "dbField": "data_needed_for_monitoring_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "IDDOC"
      ]
    },
    "data_to_send_particicipants": {
      "gqlField": "dataToSendParticicipants",
      "goField": "DataToSendParticicipants",
      "dbField": "data_to_send_particicipants",
      "label": "What data will you send to participants? Select all that apply.",
      "readonlyLabel": "What data will you send to participants?",
      "dataType": "enum",
      "formType": "multiSelect",
      "options": {
        "BASELINE_HISTORICAL_DATA": "Baseline/historical data",
        "CLAIMS_LEVEL_DATA": "Claims-level data",
        "BENEFICIARY_LEVEL_DATA": "Beneficiary-level data",
        "PARTICIPANT_LEVEL_DATA": "Participant-level data",
        "PROVIDER_LEVEL_DATA": "Provider-level data",
        "OTHER_MIPS_DATA": "Other",
        "NOT_PLANNING_TO_SEND_DATA": "Not planning to send data"
      },
      "optionsRelatedInfo": {
        "OTHER_MIPS_DATA": "dataToSendParticicipantsOther"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "data_to_send_particicipants_other": {
      "gqlField": "dataToSendParticicipantsOther",
      "goField": "DataToSendParticicipantsOther",
      "dbField": "data_to_send_particicipants_other",
      "label": "What other data do you need to send?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "data_to_send_particicipants_note": {
      "gqlField": "dataToSendParticicipantsNote",
      "goField": "DataToSendParticicipantsNote",
      "dbField": "data_to_send_particicipants_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "share_cclf_data": {
      "gqlField": "shareCclfData",
      "goField": "ShareCclfData",
      "dbField": "share_cclf_data",
      "label": "Does the model require that identifiable Claim and Claim Line Feed (CCLFs) data need to be shared with participants?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "share_cclf_data_note": {
      "gqlField": "shareCclfDataNote",
      "goField": "ShareCclfDataNote",
      "dbField": "share_cclf_data_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "send_files_between_ccw": {
      "gqlField": "sendFilesBetweenCcw",
      "goField": "SendFilesBetweenCcw",
      "dbField": "send_files_between_ccw",
      "label": "Will you need to send files between the CCW and other applications?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CCW"
      ]
    },
    "send_files_between_ccw_note": {
      "gqlField": "sendFilesBetweenCcwNote",
      "goField": "SendFilesBetweenCcwNote",
      "dbField": "send_files_between_ccw_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CCW"
      ]
    },
    "app_to_send_files_to_known": {
      "gqlField": "appToSendFilesToKnown",
      "goField": "AppToSendFilesToKnown",
      "dbField": "app_to_send_files_to_known",
      "label": "Do you know which applications will be on the other sides of the file transfers?",
      "readonlyLabel": "Do you know which applications will be on the other sides of the file transfers? If so, please specify.",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "appToSendFilesToWhich"
      },
      "filterGroups": [
        "CCW"
      ]
    },
    "app_to_send_files_to_which": {
      "gqlField": "appToSendFilesToWhich",
      "goField": "AppToSendFilesToWhich",
      "dbField": "app_to_send_files_to_which",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CCW"
      ]
    },
    "app_to_send_files_to_note": {
      "gqlField": "appToSendFilesToNote",
      "goField": "AppToSendFilesToNote",
      "dbField": "app_to_send_files_to_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CCW"
      ]
    },
    "use_ccw_for_file_distribiution_to_participants": {
      "gqlField": "useCcwForFileDistribiutionToParticipants",
      "goField": "UseCcwForFileDistribiutionToParticipants",
      "dbField": "use_ccw_for_file_distribiution_to_participants",
      "label": "Will you use the CCW to distribute files to and from model participants?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CCW"
      ]
    },
    "use_ccw_for_file_distribiution_to_participants_note": {
      "gqlField": "useCcwForFileDistribiutionToParticipantsNote",
      "goField": "UseCcwForFileDistribiutionToParticipantsNote",
      "dbField": "use_ccw_for_file_distribiution_to_participants_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CCW"
      ]
    },
    "develop_new_quality_measures": {
      "gqlField": "developNewQualityMeasures",
      "goField": "DevelopNewQualityMeasures",
      "dbField": "develop_new_quality_measures",
      "label": "Do you plan to develop a new validated quality measure for your model?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "develop_new_quality_measures_note": {
      "gqlField": "developNewQualityMeasuresNote",
      "goField": "DevelopNewQualityMeasuresNote",
      "dbField": "develop_new_quality_measures_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "quality_performance_impacts_payment": {
      "gqlField": "qualityPerformanceImpactsPayment",
      "goField": "QualityPerformanceImpactsPayment",
      "dbField": "quality_performance_impacts_payment",
      "label": "Does quality performance impact payment?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "YES": "Yes",
        "NO": "No",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "qualityPerformanceImpactsPaymentOther"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "quality_performance_impacts_payment_other": {
      "gqlField": "qualityPerformanceImpactsPaymentOther",
      "goField": "QualityPerformanceImpactsPaymentOther",
      "dbField": "quality_performance_impacts_payment_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "quality_performance_impacts_payment_note": {
      "gqlField": "qualityPerformanceImpactsPaymentNote",
      "goField": "QualityPerformanceImpactsPaymentNote",
      "dbField": "quality_performance_impacts_payment_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "CMMI"
      ]
    },
    "data_sharing_starts": {
      "gqlField": "dataSharingStarts",
      "goField": "DataSharingStarts",
      "dbField": "data_sharing_starts",
      "label": "Data sharing starts",
      "sublabel": "If using ACO-OS support, SSM request to begin analysis at least 1 year before implementation",
      "dataType": "enum",
      "formType": "select",
      "isPageStart": true,
      "readonlyHeader": "Data sharing, collection, and reporting timing and frequency",
      "options": {
        "DURING_APPLICATION_PERIOD": "During application period",
        "SHORTLY_BEFORE_THE_START_DATE": "Shortly before the start date",
        "EARLY_IN_THE_FIRST_PERFORMANCE_YEAR": "Early in the first performance year",
        "LATER_IN_THE_FIRST_PERFORMANCE_YEAR": "Later in the first performance year",
        "IN_THE_SUBSEQUENT_PERFORMANCE_YEAR": "In the subsequent performance year",
        "AT_SOME_OTHER_POINT_IN_TIME": "At some other point in time",
        "NOT_PLANNING_TO_DO_THIS": "Not planning to do this",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "dataSharingStartsOther"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_sharing_starts_other": {
      "gqlField": "dataSharingStartsOther",
      "goField": "DataSharingStartsOther",
      "dbField": "data_sharing_starts_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_sharing_frequency": {
      "gqlField": "dataSharingFrequency",
      "goField": "DataSharingFrequency",
      "dbField": "data_sharing_frequency",
      "label": "How often do you anticipate sharing data?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "dataSharingFrequencyContinually",
        "OTHER": "dataSharingFrequencyOther"
      },
      "filterGroups": [
        "CMMI",
        "IDDOC"
      ]
    },
    "data_sharing_frequency_continually": {
      "gqlField": "dataSharingFrequencyContinually",
      "goField": "DataSharingFrequencyContinually",
      "dbField": "data_sharing_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "IDDOC"
      ]
    },
    "data_sharing_frequency_other": {
      "gqlField": "dataSharingFrequencyOther",
      "goField": "DataSharingFrequencyOther",
      "dbField": "data_sharing_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "IDDOC"
      ]
    },
    "data_sharing_starts_note": {
      "gqlField": "dataSharingStartsNote",
      "goField": "DataSharingStartsNote",
      "dbField": "data_sharing_starts_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "IDDOC"
      ]
    },
    "data_collection_starts": {
      "gqlField": "dataCollectionStarts",
      "goField": "DataCollectionStarts",
      "dbField": "data_collection_starts",
      "label": "Data collection starts",
      "dataType": "enum",
      "formType": "select",
      "options": {
        "DURING_APPLICATION_PERIOD": "During application period",
        "SHORTLY_BEFORE_THE_START_DATE": "Shortly before the start date",
        "EARLY_IN_THE_FIRST_PERFORMANCE_YEAR": "Early in the first performance year",
        "LATER_IN_THE_FIRST_PERFORMANCE_YEAR": "Later in the first performance year",
        "IN_THE_SUBSEQUENT_PERFORMANCE_YEAR": "In the subsequent performance year",
        "AT_SOME_OTHER_POINT_IN_TIME": "At some other point in time",
        "NOT_PLANNING_TO_DO_THIS": "Not planning to do this",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "dataCollectionStartsOther"
      },
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_collection_starts_other": {
      "gqlField": "dataCollectionStartsOther",
      "goField": "DataCollectionStartsOther",
      "dbField": "data_collection_starts_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC"
      ]
    },
    "data_collection_frequency": {
      "gqlField": "dataCollectionFrequency",
      "goField": "DataCollectionFrequency",
      "dbField": "data_collection_frequency",
      "label": "How often do you anticipate collecting data?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "dataCollectionFrequencyContinually",
        "OTHER": "dataCollectionFrequencyOther"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "data_collection_frequency_continually": {
      "gqlField": "dataCollectionFrequencyContinually",
      "goField": "DataCollectionFrequencyContinually",
      "dbField": "data_collection_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "data_collection_frequency_other": {
      "gqlField": "dataCollectionFrequencyOther",
      "goField": "DataCollectionFrequencyOther",
      "dbField": "data_collection_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "data_collection_frequency_note": {
      "gqlField": "dataCollectionFrequencyNote",
      "goField": "DataCollectionFrequencyNote",
      "dbField": "data_collection_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "quality_reporting_starts": {
      "gqlField": "qualityReportingStarts",
      "goField": "QualityReportingStarts",
      "dbField": "quality_reporting_starts",
      "label": "Quality reporting starts",
      "dataType": "enum",
      "formType": "select",
      "options": {
        "DURING_APPLICATION_PERIOD": "During application period",
        "SHORTLY_BEFORE_THE_START_DATE": "Shortly before the start date",
        "EARLY_IN_THE_FIRST_PERFORMANCE_YEAR": "Early in the first performance year",
        "LATER_IN_THE_FIRST_PERFORMANCE_YEAR": "Later in the first performance year",
        "IN_THE_SUBSEQUENT_PERFORMANCE_YEAR": "In the subsequent performance year",
        "AT_SOME_OTHER_POINT_IN_TIME": "At some other point in time",
        "NOT_PLANNING_TO_DO_THIS": "Not planning to do this",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": ""
      }
    },
    "quality_reporting_starts_other": {
      "gqlField": "qualityReportingStartsOther",
      "goField": "QualityReportingStartsOther",
      "dbField": "quality_reporting_starts_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "quality_reporting_starts_note": {
      "gqlField": "qualityReportingStartsNote",
      "goField": "QualityReportingStartsNote",
      "dbField": "quality_reporting_starts_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "quality_reporting_frequency": {
      "gqlField": "qualityReportingFrequency",
      "goField": "QualityReportingFrequency",
      "dbField": "quality_reporting_frequency",
      "label": "How frequently does quality reporting happen?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "qualityReportingFrequencyContinually",
        "OTHER": "qualityReportingFrequencyOther"
      }
    },
    "quality_reporting_frequency_continually": {
      "gqlField": "qualityReportingFrequencyContinually",
      "goField": "QualityReportingFrequencyContinually",
      "dbField": "quality_reporting_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "quality_reporting_frequency_other": {
      "gqlField": "qualityReportingFrequencyOther",
      "goField": "QualityReportingFrequencyOther",
      "dbField": "quality_reporting_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "model_learning_systems": {
      "gqlField": "modelLearningSystems",
      "goField": "ModelLearningSystems",
      "dbField": "model_learning_systems",
      "label": "Will the model have a learning strategy?",
      "dataType": "enum",
      "formType": "checkbox",
      "isPageStart": true,
      "options": {
        "LEARNING_CONTRACTOR": "We plan to have a learning contractor (cross-model or individual)",
        "IT_PLATFORM_CONNECT": "We plan to use an IT platform (Connect)",
        "PARTICIPANT_COLLABORATION": "We plan to enable participant-to-participant collaboration",
        "EDUCATE_BENEFICIARIES": "We plan to educate beneficiaries",
        "OTHER": "Other",
        "NO_LEARNING_SYSTEM": "No, we will not have a learning strategy"
      },
      "optionsRelatedInfo": {
        "OTHER": "modelLearningSystemsOther"
      }
    },
    "model_learning_systems_other": {
      "gqlField": "modelLearningSystemsOther",
      "goField": "ModelLearningSystemsOther",
      "dbField": "model_learning_systems_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "model_learning_systems_note": {
      "gqlField": "modelLearningSystemsNote",
      "goField": "ModelLearningSystemsNote",
      "dbField": "model_learning_systems_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "anticipated_challenges": {
      "gqlField": "anticipatedChallenges",
      "goField": "AnticipatedChallenges",
      "dbField": "anticipated_challenges",
      "label": "What challenges do you anticipate during Model design and implementation?",
      "sublabel": "Please list and known â€™unknowns,â€™ that is, are there policy decisions that you are aware of that are still pending or are subject to change? If so, please list to the best of your ability.",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "status": {
      "gqlField": "status",
      "goField": "Status",
      "dbField": "status",
      "label": "Model Plan status",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "READY": "Ready",
        "IN_PROGRESS": "In progress",
        "READY_FOR_REVIEW": "Ready for review",
        "READY_FOR_CLEARANCE": "Ready for clearance"
      }
    }
  },
  "payments": {
    "funding_source": {
      "gqlField": "fundingSource",
      "goField": "FundingSource",
      "dbField": "funding_source",
      "label": "What will be the funding source for payments? Select all that apply.",
      "readonlyLabel": "What will be the funding source for payments?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "PATIENT_PROTECTION_AFFORDABLE_CARE_ACT": "Patient Protection Affordable Care Act (Sec 3021)",
        "MEDICARE_PART_A_HI_TRUST_FUND": "Medicare Part A (HI) Trust Fund",
        "MEDICARE_PART_B_SMI_TRUST_FUND": "Medicare Part B (SMI) Trust Fund",
        "OTHER": "Other"
      },
      "tooltips": {
        "MEDICARE_PART_A_HI_TRUST_FUND": "Also known as the Hospital Insurance (HI) Trust Fund, this covers inpatient hospital care, skilled nursing facility care, home healthcare, and hospice care.",
        "MEDICARE_PART_B_SMI_TRUST_FUND": "Also known as the Supplementary Medical Insurance (SMI) Trust Fund, this covers physician services, outpatient care, medical supplies, preventive services, and other healthcare services not covered by Part A.",
        "OTHER": ""
      },
      "optionsRelatedInfo": {
        "MEDICARE_PART_A_HI_TRUST_FUND": "fundingSourceMedicareAInfo",
        "MEDICARE_PART_B_SMI_TRUST_FUND": "fundingSourceMedicareBInfo",
        "OTHER": "fundingSourceOther"
      },
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_medicare_a_info": {
      "gqlField": "fundingSourceMedicareAInfo",
      "goField": "FundingSourceMedicareAInfo",
      "dbField": "funding_source_medicare_a_info",
      "label": "Additional details",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_medicare_b_info": {
      "gqlField": "fundingSourceMedicareBInfo",
      "goField": "FundingSourceMedicareBInfo",
      "dbField": "funding_source_medicare_b_info",
      "label": "Additional details",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_other": {
      "gqlField": "fundingSourceOther",
      "goField": "FundingSourceOther",
      "dbField": "funding_source_other",
      "label": "Please describe the funding source.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_note": {
      "gqlField": "fundingSourceNote",
      "goField": "FundingSourceNote",
      "dbField": "funding_source_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_r": {
      "gqlField": "fundingSourceR",
      "goField": "FundingSourceR",
      "dbField": "funding_source_r",
      "label": "What is the funding source for reconciliation or other expenditures? Select all that apply.",
      "readonlyLabel": "What is the funding source for reconciliation or other expenditures?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "PATIENT_PROTECTION_AFFORDABLE_CARE_ACT": "Patient Protection Affordable Care Act (Sec 3021)",
        "MEDICARE_PART_A_HI_TRUST_FUND": "Medicare Part A (HI) Trust Fund",
        "MEDICARE_PART_B_SMI_TRUST_FUND": "Medicare Part B (SMI) Trust Fund",
        "OTHER": "Other"
      },
      "tooltips": {
        "MEDICARE_PART_A_HI_TRUST_FUND": "Also known as the Hospital Insurance (HI) Trust Fund, this covers inpatient hospital care, skilled nursing facility care, home healthcare, and hospice care.",
        "MEDICARE_PART_B_SMI_TRUST_FUND": "Also known as the Supplementary Medical Insurance (SMI) Trust Fund, this covers physician services, outpatient care, medical supplies, preventive services, and other healthcare services not covered by Part A.",
        "OTHER": ""
      },
      "optionsRelatedInfo": {
        "MEDICARE_PART_A_HI_TRUST_FUND": "fundingSourceRMedicareAInfo",
        "MEDICARE_PART_B_SMI_TRUST_FUND": "fundingSourceRMedicareBInfo",
        "OTHER": "fundingSourceROther"
      },
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_r_medicare_a_info": {
      "gqlField": "fundingSourceRMedicareAInfo",
      "goField": "FundingSourceRMedicareAInfo",
      "dbField": "funding_source_r_medicare_a_info",
      "label": "Additional details",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_r_medicare_b_info": {
      "gqlField": "fundingSourceRMedicareBInfo",
      "goField": "FundingSourceRMedicareBInfo",
      "dbField": "funding_source_r_medicare_b_info",
      "label": "Additional details",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true,
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_r_other": {
      "gqlField": "fundingSourceROther",
      "goField": "FundingSourceROther",
      "dbField": "funding_source_r_other",
      "label": "Please describe the funding source.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "funding_source_r_note": {
      "gqlField": "fundingSourceRNote",
      "goField": "FundingSourceRNote",
      "dbField": "funding_source_r_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "DFSDM",
        "IPC",
        "OACT"
      ]
    },
    "pay_recipients": {
      "gqlField": "payRecipients",
      "goField": "PayRecipients",
      "dbField": "pay_recipients",
      "label": "Who will you pay? Select all that apply.",
      "readonlyLabel": "Who will you pay?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "PROVIDERS": "Providers",
        "BENEFICIARIES": "Beneficiaries",
        "PARTICIPANTS": "Participants",
        "STATES": "States",
        "OTHER": "Other"
      }
    },
    "pay_recipients_other_specification": {
      "gqlField": "payRecipientsOtherSpecification",
      "goField": "PayRecipientsOtherSpecification",
      "dbField": "pay_recipients_other_specification",
      "label": "Please specify who you will pay.",
      "dataType": "string",
      "formType": "textarea"
    },
    "pay_recipients_note": {
      "gqlField": "payRecipientsNote",
      "goField": "PayRecipientsNote",
      "dbField": "pay_recipients_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "pay_type": {
      "gqlField": "payType",
      "goField": "PayType",
      "dbField": "pay_type",
      "label": "What will you pay?",
      "sublabel": "If you select claims-based payments or non-claims-based payments, there will be additional questions to answer.",
      "dataType": "enum",
      "formType": "checkbox",
      "hideRelatedQuestionAlert": true,
      "options": {
        "CLAIMS_BASED_PAYMENTS": "Claims-Based Payments",
        "NON_CLAIMS_BASED_PAYMENTS": "Non-Claims-Based Payments",
        "GRANTS": "Grants"
      },
      "childRelation": {
        "CLAIMS_BASED_PAYMENTS": [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "NON_CLAIMS_BASED_PAYMENTS": [
          null,
          null,
          null,
          null,
          null
        ]
      },
      "disconnectedChildren": true,
      "filterGroups": [
        "CMMI",
        "IPC"
      ]
    },
    "pay_type_note": {
      "gqlField": "payTypeNote",
      "goField": "PayTypeNote",
      "dbField": "pay_type_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "IPC"
      ]
    },
    "pay_claims": {
      "gqlField": "payClaims",
      "goField": "PayClaims",
      "dbField": "pay_claims",
      "label": "Select which claims-based payments will you pay.",
      "sublabel": "If you select reductions to beneficiary cost-sharing or other, there will be additional questions to answer.",
      "disconnectedLabel": "questionNotApplicableBeneficiary",
      "dataType": "enum",
      "formType": "multiSelect",
      "multiSelectLabel": "Selected claims-based payments",
      "hideRelatedQuestionAlert": true,
      "disconnectedChildren": true,
      "options": {
        "ADJUSTMENTS_TO_FFS_PAYMENTS": "Adjustments to FFS payments",
        "CARE_MANAGEMENT_HOME_VISITS": "Payments for care management home visits",
        "PAYMENTS_FOR_POST_DISCHARGE_HOME_VISITS": "Payments for post-discharge home visits",
        "SERVICES_NOT_COVERED_THROUGH_TRADITIONAL_MEDICARE": "Payments for services not covered through Traditional Medicare",
        "SNF_CLAIMS_WITHOUT_3DAY_HOSPITAL_ADMISSIONS": "Payments for SNF claims without 3-day hospital admissions",
        "TELEHEALTH_SERVICES_NOT_TRADITIONAL_MEDICARE": "Payments for telehealth services not covered through Traditional Medicare",
        "REDUCTIONS_TO_BENEFICIARY_COST_SHARING": "Reductions to beneficiary cost-sharing",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "payClaimsOther"
      },
      "childRelation": {
        "REDUCTIONS_TO_BENEFICIARY_COST_SHARING": [
          null,
          null,
          null
        ]
      },
      "filterGroups": [
        "CMMI",
        "IPC",
        "OACT"
      ]
    },
    "pay_claims_other": {
      "gqlField": "payClaimsOther",
      "goField": "PayClaimsOther",
      "dbField": "pay_claims_other",
      "label": "Please describe the other claims-based payments you will pay",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "OACT"
      ]
    },
    "pay_claims_note": {
      "gqlField": "payClaimsNote",
      "goField": "PayClaimsNote",
      "dbField": "pay_claims_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "OACT"
      ]
    },
    "should_any_providers_excluded_ffs_systems": {
      "gqlField": "shouldAnyProvidersExcludedFFSSystems",
      "goField": "ShouldAnyProvidersExcludedFFSSystems",
      "dbField": "should_any_providers_excluded_ffs_systems",
      "label": "Should any model providers be excluded from existing Fee-for-Service payment systems?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "should_any_providers_excluded_ffs_systems_note": {
      "gqlField": "shouldAnyProviderExcludedFFSSystemsNote",
      "goField": "ShouldAnyProviderExcludedFFSSystemsNote",
      "dbField": "should_any_providers_excluded_ffs_systems_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "changes_medicare_physician_fee_schedule": {
      "gqlField": "changesMedicarePhysicianFeeSchedule",
      "goField": "ChangesMedicarePhysicianFeeSchedule",
      "dbField": "changes_medicare_physician_fee_schedule",
      "label": "Will the model change the Medicare Physician Fee Schedule?",
      "sublabel": "If so, it might impact Critical Access Hospitals paid under Method II.",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "changes_medicare_physician_fee_schedule_note": {
      "gqlField": "changesMedicarePhysicianFeeScheduleNote",
      "goField": "ChangesMedicarePhysicianFeeScheduleNote",
      "dbField": "changes_medicare_physician_fee_schedule_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "affects_medicare_secondary_payer_claims": {
      "gqlField": "affectsMedicareSecondaryPayerClaims",
      "goField": "AffectsMedicareSecondaryPayerClaims",
      "dbField": "affects_medicare_secondary_payer_claims",
      "label": "Does the model affect Medicare Secondary Payer claims?",
      "readonlyLabel": "Does the model affect Medicare Secondary Payer claims? How so?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "affectsMedicareSecondaryPayerClaimsHow"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "affects_medicare_secondary_payer_claims_how": {
      "gqlField": "affectsMedicareSecondaryPayerClaimsHow",
      "goField": "AffectsMedicareSecondaryPayerClaimsHow",
      "dbField": "affects_medicare_secondary_payer_claims_how",
      "label": "How so?",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "affects_medicare_secondary_payer_claims_note": {
      "gqlField": "affectsMedicareSecondaryPayerClaimsNote",
      "goField": "AffectsMedicareSecondaryPayerClaimsNote",
      "dbField": "affects_medicare_secondary_payer_claims_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "pay_model_differentiation": {
      "gqlField": "payModelDifferentiation",
      "goField": "PayModelDifferentiation",
      "dbField": "pay_model_differentiation",
      "label": "How does the model differ from current policy, especially in terms of payment rates and periodicity of payment?",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "creating_dependencies_between_services": {
      "gqlField": "creatingDependenciesBetweenServices",
      "goField": "CreatingDependenciesBetweenServices",
      "dbField": "creating_dependencies_between_services",
      "label": "Are you anticipating creating dependencies between services?",
      "sublabel": "Examples: Service B cannot be paid until Service A has been paid; Service A cannot be paid without Diagnosis 1; If a certain service or diagnosis exists in history, then Service A cannot be paid.",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "creating_dependencies_between_services_note": {
      "gqlField": "creatingDependenciesBetweenServicesNote",
      "goField": "CreatingDependenciesBetweenServicesNote",
      "dbField": "creating_dependencies_between_services_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "needs_claims_data_collection": {
      "gqlField": "needsClaimsDataCollection",
      "goField": "NeedsClaimsDataCollection",
      "dbField": "needs_claims_data_collection",
      "label": "Will any additional data need to be collected for claims?",
      "sublabel": "If you are not sure what current data is collected via provider billing, please ask Provider Billing Group (PBG)",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "needs_claims_data_collection_note": {
      "gqlField": "needsClaimsDataCollectionNote",
      "goField": "NeedsClaimsDataCollectionNote",
      "dbField": "needs_claims_data_collection_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "providing_third_party_file": {
      "gqlField": "providingThirdPartyFile",
      "goField": "ProvidingThirdPartyFile",
      "dbField": "providing_third_party_file",
      "label": "Will your contractor be providing data (a Third Party File) that will be used in claims processing?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC",
        "PBG"
      ]
    },
    "is_contractor_aware_test_data_requirements": {
      "gqlField": "waiveBeneficiaryCostSharingNote",
      "goField": "WaiveBeneficiaryCostSharingNote",
      "dbField": "is_contractor_aware_test_data_requirements",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "OACT",
        "PBG"
      ]
    },
    "non_claims_payments": {
      "gqlField": "nonClaimsPayments",
      "goField": "NonClaimsPayments",
      "dbField": "non_claims_payments",
      "label": "Select which non-claims-based payments will you pay.",
      "dataType": "enum",
      "formType": "multiSelect",
      "multiSelectLabel": "Selected non-claims-based payments",
      "options": {
        "ADVANCED_PAYMENT": "Advanced Payment",
        "BUNDLED_EPISODE_OF_CARE": "Bundled/Episode of Care",
        "CAPITATION_POPULATION_BASED_FULL": "Capitation/Population Based - Full",
        "CAPITATION_POPULATION_BASED_PARTIAL": "Capitation/Population Based - Partial",
        "CARE_COORDINATION_MANAGEMENT_FEE": "Care Coordination/Management Fee",
        "GLOBAL_BUDGET": "Global Budget",
        "INCENTIVE_PAYMENT": "Incentive Payment",
        "MAPD_SHARED_SAVINGS": "Medicare Advantage Prescription Drug (MAPD) Shared Savings",
        "SHARED_SAVINGS": "Shared Savings",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "OTHER": "nonClaimsPaymentOther"
      },
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "non_claims_payments_other": {
      "gqlField": "nonClaimsPaymentOther",
      "goField": "NonClaimsPaymentOther",
      "dbField": "non_claims_payments_other",
      "label": "Please describe the other non-claims-based payments you will pay.",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "non_claims_payments_note": {
      "gqlField": "nonClaimsPaymentsNote",
      "goField": "NonClaimsPaymentsNote",
      "dbField": "non_claims_payments_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "payment_calculation_owner": {
      "gqlField": "paymentCalculationOwner",
      "goField": "PaymentCalculationOwner",
      "dbField": "payment_calculation_owner",
      "label": "Who will calculate the non-claims based payments?",
      "dataType": "string",
      "formType": "text"
    },
    "number_payments_per_pay_cycle": {
      "gqlField": "numberPaymentsPerPayCycle",
      "goField": "NumberPaymentsPerPayCycle",
      "dbField": "number_payments_per_pay_cycle",
      "label": "Number of payments per payment cycle",
      "sublabel": "This only applies if you are making non-claims-based payments",
      "dataType": "string",
      "formType": "text",
      "filterGroups": [
        "DFSDM",
        "IPC"
      ]
    },
    "number_payments_per_pay_cycle_note": {
      "gqlField": "numberPaymentsPerPayCycleNote",
      "goField": "NumberPaymentsPerPayCycleNote",
      "dbField": "number_payments_per_pay_cycle_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "DFSDM",
        "IPC"
      ]
    },
    "shared_systems_involved_additional_claim_payment": {
      "gqlField": "sharedSystemsInvolvedAdditionalClaimPayment",
      "goField": "SharedSystemsInvolvedAdditionalClaimPayment",
      "dbField": "shared_systems_involved_additional_claim_payment",
      "label": "Will the Shared Systems be involved for additional payment of claims?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CCW"
      ]
    },
    "shared_systems_involved_additional_claim_payment_note": {
      "gqlField": "sharedSystemsInvolvedAdditionalClaimPaymentNote",
      "goField": "SharedSystemsInvolvedAdditionalClaimPaymentNote",
      "dbField": "shared_systems_involved_additional_claim_payment_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CCW"
      ]
    },
    "planning_to_use_innovation_payment_contractor": {
      "gqlField": "planningToUseInnovationPaymentContractor",
      "goField": "PlanningToUseInnovationPaymentContractor",
      "dbField": "planning_to_use_innovation_payment_contractor",
      "label": "Are you planning to use the Innovation Payment Contractor?",
      "sublabel": "Note: If there will be 30+ payees we recommend a contractor.",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "DFSDM",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "planning_to_use_innovation_payment_contractor_note": {
      "gqlField": "planningToUseInnovationPaymentContractorNote",
      "goField": "PlanningToUseInnovationPaymentContractorNote",
      "dbField": "planning_to_use_innovation_payment_contractor_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "DFSDM",
        "IPC",
        "IDDOC",
        "PBG"
      ]
    },
    "expected_calculation_complexity_level": {
      "gqlField": "expectedCalculationComplexityLevel",
      "goField": "ExpectedCalculationComplexityLevel",
      "dbField": "expected_calculation_complexity_level",
      "label": "What level of complexity do you expect calculations to be?",
      "dataType": "enum",
      "formType": "radio",
      "isPageStart": true,
      "options": {
        "LOW": "Low level",
        "MIDDLE": "Middle level",
        "HIGH": "High level"
      }
    },
    "expected_calculation_complexity_level_note": {
      "gqlField": "expectedCalculationComplexityLevelNote",
      "goField": "ExpectedCalculationComplexityLevelNote",
      "dbField": "expected_calculation_complexity_level_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "claims_processing_precedence": {
      "gqlField": "claimsProcessingPrecedence",
      "goField": "ClaimsProcessingPrecedence",
      "dbField": "claims_processing_precedence",
      "label": "Are there any business requirement(s) that address claims processing precedence order with the other model(s)?",
      "readonlyLabel": "Are there any business requirement(s) that address claims processing precedence order with the other model(s)? If so, please specify.",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "claimsProcessingPrecedenceOther"
      }
    },
    "claims_processing_precedence_other": {
      "gqlField": "claimsProcessingPrecedenceOther",
      "goField": "ClaimsProcessingPrecedenceOther",
      "dbField": "claims_processing_precedence_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "text",
      "isOtherType": true
    },
    "claims_processing_precedence_note": {
      "gqlField": "claimsProcessingPrecedenceNote",
      "goField": "ClaimsProcessingPrecedenceNote",
      "dbField": "claims_processing_precedence_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "text"
    },
    "can_participants_select_between_payment_mechanisms": {
      "gqlField": "canParticipantsSelectBetweenPaymentMechanisms",
      "goField": "CanParticipantsSelectBetweenPaymentMechanisms",
      "dbField": "can_participants_select_between_payment_mechanisms",
      "label": "Will participants be allowed to select between multiple payment mechanisms?",
      "readonlyLabel": "Will participants be allowed to select between multiple payment mechanisms? If so, please describe.",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "optionsRelatedInfo": {
        "true": "canParticipantsSelectBetweenPaymentMechanismsHow"
      },
      "filterGroups": [
        "CMMI"
      ]
    },
    "can_participants_select_between_payment_mechanisms_how": {
      "gqlField": "canParticipantsSelectBetweenPaymentMechanismsHow",
      "goField": "CanParticipantsSelectBetweenPaymentMechanismsHow",
      "dbField": "can_participants_select_between_payment_mechanisms_how",
      "label": "Please describe",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI"
      ]
    },
    "can_participants_select_between_payment_mechanisms_note": {
      "gqlField": "canParticipantsSelectBetweenPaymentMechanismsNote",
      "goField": "CanParticipantsSelectBetweenPaymentMechanismsNote",
      "dbField": "can_participants_select_between_payment_mechanisms_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI"
      ]
    },
    "anticipated_payment_frequency": {
      "gqlField": "anticipatedPaymentFrequency",
      "goField": "AnticipatedPaymentFrequency",
      "dbField": "anticipated_payment_frequency",
      "label": "How often do you anticipate making payments?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "anticipatedPaymentFrequencyContinually",
        "OTHER": "anticipatedPaymentFrequencyOther"
      },
      "filterGroups": [
        "CMMI",
        "DFSDM",
        "IPC"
      ]
    },
    "anticipated_payment_frequency_continually": {
      "gqlField": "anticipatedPaymentFrequencyContinually",
      "goField": "AnticipatedPaymentFrequencyContinually",
      "dbField": "anticipated_payment_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "DFSDM",
        "IPC"
      ]
    },
    "anticipated_payment_frequency_other": {
      "gqlField": "anticipatedPaymentFrequencyOther",
      "goField": "AnticipatedPaymentFrequencyOther",
      "dbField": "anticipated_payment_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true,
      "filterGroups": [
        "CMMI",
        "DFSDM",
        "IPC"
      ]
    },
    "anticipated_payment_frequency_note": {
      "gqlField": "anticipatedPaymentFrequencyNote",
      "goField": "AnticipatedPaymentFrequencyNote",
      "dbField": "anticipated_payment_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "DFSDM",
        "IPC"
      ]
    },
    "will_recover_payments": {
      "gqlField": "willRecoverPayments",
      "goField": "WillRecoverPayments",
      "dbField": "will_recover_payments",
      "label": "Will you recover the payments?",
      "dataType": "boolean",
      "formType": "radio",
      "isPageStart": true,
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "CMMI",
        "IPC"
      ]
    },
    "will_recover_payments_note": {
      "gqlField": "willRecoverPaymentsNote",
      "goField": "WillRecoverPaymentsNote",
      "dbField": "will_recover_payments_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "CMMI",
        "IPC"
      ]
    },
    "anticipate_reconciling_payments_retrospectively": {
      "gqlField": "anticipateReconcilingPaymentsRetrospectively",
      "goField": "AnticipateReconcilingPaymentsRetrospectively",
      "dbField": "anticipate_reconciling_payments_retrospectively",
      "label": "Do you anticipate reconciling payments retrospectively?",
      "dataType": "boolean",
      "formType": "radio",
      "options": {
        "true": "Yes",
        "false": "No"
      },
      "filterGroups": [
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "anticipate_reconciling_payments_retrospectively_note": {
      "gqlField": "anticipateReconcilingPaymentsRetrospectivelyNote",
      "goField": "AnticipateReconcilingPaymentsRetrospectivelyNote",
      "dbField": "anticipate_reconciling_payments_retrospectively_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea",
      "filterGroups": [
        "IDDOC",
        "IPC",
        "PBG"
      ]
    },
    "payment_reconciliation_frequency": {
      "gqlField": "paymentReconciliationFrequency",
      "goField": "PaymentReconciliationFrequency",
      "dbField": "payment_reconciliation_frequency",
      "label": "How often are payments reconciled?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "paymentReconciliationFrequencyContinually",
        "OTHER": "paymentReconciliationFrequencyOther"
      }
    },
    "payment_reconciliation_frequency_continually": {
      "gqlField": "paymentReconciliationFrequencyContinually",
      "goField": "PaymentReconciliationFrequencyContinually",
      "dbField": "payment_reconciliation_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "payment_reconciliation_frequency_other": {
      "gqlField": "paymentReconciliationFrequencyOther",
      "goField": "PaymentReconciliationFrequencyOther",
      "dbField": "payment_reconciliation_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "payment_reconciliation_frequency_note": {
      "gqlField": "paymentReconciliationFrequencyNote",
      "goField": "PaymentReconciliationFrequencyNote",
      "dbField": "payment_reconciliation_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "payment_demand_recoupment_frequency": {
      "gqlField": "paymentDemandRecoupmentFrequency",
      "goField": "PaymentDemandRecoupmentFrequency",
      "dbField": "payment_demand_recoupment_frequency",
      "label": "How frequently do you anticipate making demands/recoupments?",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "ANNUALLY": "Annually",
        "SEMIANNUALLY": "Semi-annually",
        "QUARTERLY": "Quarterly",
        "MONTHLY": "Monthly",
        "CONTINUALLY": "Continually",
        "OTHER": "Other"
      },
      "optionsRelatedInfo": {
        "CONTINUALLY": "paymentDemandRecoupmentFrequencyContinually",
        "OTHER": "paymentDemandRecoupmentFrequencyOther"
      }
    },
    "payment_demand_recoupment_frequency_continually": {
      "gqlField": "paymentDemandRecoupmentFrequencyContinually",
      "goField": "PaymentDemandRecoupmentFrequencyContinually",
      "dbField": "payment_demand_recoupment_frequency_continually",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "payment_demand_recoupment_frequency_other": {
      "gqlField": "paymentDemandRecoupmentFrequencyOther",
      "goField": "PaymentReconciliationFrequencyOther",
      "dbField": "payment_demand_recoupment_frequency_other",
      "label": "Please specify",
      "dataType": "string",
      "formType": "textarea",
      "isOtherType": true
    },
    "payment_demand_recoupment_frequency_note": {
      "gqlField": "paymentDemandRecoupmentFrequencyNote",
      "goField": "PaymentReconciliationFrequencyNote",
      "dbField": "payment_demand_recoupment_frequency_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "payment_start_date": {
      "gqlField": "paymentStartDate",
      "goField": "PaymentStartDate",
      "dbField": "payment_start_date",
      "label": "When will payments start? (Enter an approximate date)",
      "readonlyLabel": "When will payments start?",
      "sublabel": "Note: If you are unsure of an approximate date, please select the first day of the approximate month.",
      "dataType": "date",
      "formType": "datePicker",
      "filterGroups": [
        "DFSDM",
        "IPC"
      ]
    },
    "payment_start_date_note": {
      "gqlField": "paymentStartDateNote",
      "goField": "PaymentStartDateNote",
      "dbField": "payment_start_date_note",
      "label": "Notes",
      "dataType": "string",
      "formType": "textarea"
    },
    "status": {
      "gqlField": "status",
      "goField": "Status",
      "dbField": "status",
      "label": "Model Plan status",
      "dataType": "enum",
      "formType": "checkbox",
      "options": {
        "READY": "Ready",
        "IN_PROGRESS": "In progress",
        "READY_FOR_REVIEW": "Ready for review",
        "READY_FOR_CLEARANCE": "Ready for clearance"
      }
    }
  }
}