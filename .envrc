#! /usr/bin/env bash

#########################
# Project Configuration #
#########################

# Helpers for .envrc
APP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Set environment to local to avoid deployed environment specifics (like auth)
export APP_ENV=local
export CLIENT_PROTOCOL=http
export CLIENT_DOMAIN=localhost
export CLIENT_PORT=3005
export CLIENT_HOSTNAME=$CLIENT_DOMAIN:$CLIENT_PORT
export CLIENT_ADDRESS=$CLIENT_PROTOCOL://$CLIENT_HOSTNAME
export API_PORT=8085 # 8080 internally, but docker-compose.backend.yml will forward it to 8085
export VITE_API_ADDRESS=$CLIENT_PROTOCOL://$CLIENT_DOMAIN:$API_PORT/api/v1
export VITE_GRAPHQL_ADDRESS=$CLIENT_PROTOCOL://$CLIENT_DOMAIN:$API_PORT/api/graph/query
export VITE_APP_ENV=$APP_ENV
export LOCAL_AUTH_ENABLED=true
export VITE_LOCAL_AUTH_ENABLED=true
export VITE_GA_TRACKING_ID=G-WDNFWR6RD3 # This, by default points to the `MINT (Localhost)` environment. We do NOT recommend changing this value.

# Email variables
export EMAIL_ENABLED=true
export EMAIL_HOST=email
export EMAIL_PORT=1025
export EMAIL_SENDER=no-reply-mint-localhost@cms.hhs.gov
export GRT_EMAIL=success@simulator.amazonses.com
export ACCESSIBILITY_TEAM_EMAIL=success@simulator.amazonses.com
export MINT_TEAM_EMAIL=MINTTeam@cms.hhs.gov
export DEV_TEAM_EMAIL=devs@cms.hhs.gov
export DATE_CHANGED_RECIPIENT_EMAILS=one@test.gov,two@test.gov
export TAG_POC_EMAILS_ENABLED="TRUE"

# AWS variables
export AWS_REGION=us-west-2
export AWS_S3_FILE_UPLOAD_BUCKET=mint-app-file-uploads
export AWS_S3_ECHIMP_BUCKET=mint-app-echimp-uploads
export AWS_ECHIMP_CR_FILE_NAME=FFS_CR_DATA.parquet
export AWS_ECHIMP_TDL_FILE_NAME=TDL_DATA.parquet

# Setup a local lambda to generate PDFs
export LAMBDA_FUNCTION_PRINCE=handler
export LAMBDA_ENDPOINT="http://localhost:9006"

# OKTA variables
export OKTA_CLIENT_ID=0oad9awvebnsMwWNa297
export OKTA_CLIENT_ID_DEV=0oad9awvebnsMwWNa297
export VITE_OKTA_CLIENT_ID=$OKTA_CLIENT_ID
export OKTA_DOMAIN=https://test.idp.idm.cms.gov
export VITE_OKTA_DOMAIN=$OKTA_DOMAIN
export OKTA_SERVER_ID=ausd980kt2CBBzStG297
export OKTA_SERVER_ID_DEV=ausd980kt2CBBzStG297
export VITE_OKTA_SERVER_ID=$OKTA_SERVER_ID
export OKTA_ISSUER=$OKTA_DOMAIN/oauth2/$OKTA_SERVER_ID
export VITE_OKTA_ISSUER=$OKTA_ISSUER
export OKTA_REDIRECT_URI=http://localhost:3005/implicit/callback
export VITE_OKTA_REDIRECT_URI=$OKTA_REDIRECT_URI

# VITE_ECHIMP_URL won't ever really point to anything useful, since ECHIMP data is mocked locally
# But it needs to be set so the frontend can still construct a URL/Links on CR/TDL cards and pages
export VITE_ECHIMP_URL=http://fake.echimp.url/eeChimpWeb/sso

# OKTA test account
# Needed to run Cypress tests. Look in 1Password.
export OKTA_TEST_USERNAME=
export OKTA_TEST_PASSWORD=
export OKTA_TEST_SECRET=

# Launch Darkly configuration
export FLAG_SOURCE=LOCAL
export LD_SDK_KEY="check 1Password to find this value"
export VITE_LD_CLIENT_ID=632afde9635ca2116a04e82e # Points to our "local" environment
export LD_TIMEOUT_SECONDS=30
export FLAGDATA_FILE="./cypress/fixtures/flagdata.json" # File to load LD flag data from when FLAG_SOURCE=FILE

# HelpScout configuration
export VITE_BEACON_ID="ad55e329-4722-4a83-b3d6-07af22f6edea"

# Default minio credentials for local use
export MINIO_HOST=localhost:9005 # This is overridden in docker-compose.backend.yml
export MINIO_ADDRESS="http://$MINIO_HOST" # This is overridden in docker-compose.backend.yml
export MINIO_ACCESS_KEY='minioadmin'
export MINIO_SECRET_KEY='minioadmin'

# For connecting to a local postgres instance
export PGHOST=localhost # This is overridden in docker-compose.backend.yml
export PGPORT=5437 # This is overridden in docker-compose.backend.yml
export PGDATABASE=postgres
export PGUSER=postgres
export PGPASS=mysecretpassword # PGPASS is used by the app
export PGPASSWORD=mysecretpassword # PGPASSWORD is used by the psql command line tool
export PGSSLMODE=disable
export DB_MAX_CONNECTIONS=20

export USE_TLS=false

##########################################
# DO NOT MAKE LOCAL CHANGES TO THIS FILE #
#                                        #
# Vars in this file can be overridden by #
# exporting them in .envrc.local         #
##########################################

# Add local paths for binaries and scripts
PATH_add ./bin

# CEDAR API Info
export CEDAR_ENV=dev
export CEDAR_API_URL="webmethods-apigw.cedardev.cms.gov"

# Okta API Info
export OKTA_API_URL="https://test.idp.idm.cms.gov"
export OKTA_API_TOKEN=""

# Frontend Dev
export ESLINT_NO_DEV_ERRORS=true

# Backend Debug
export AIR_CONFIG=" "
export AIR_CONFIG_DEBUG="-c .airDebug.conf"
export AIR_CONFIG_DEBUG_WAIT="-c .airDebugWait.conf"

# Faktory Config
export FAKTORY_PROCESS_JOBS=false
export FAKTORY_URL=tcp://faktory:7419
export FAKTORY_CONNECTIONS=20

# Load a local overrides file. Any changes you want to make for your local
# environment should live in that file.

if [ -e .envrc.local ]
then
  source_env .envrc.local
fi
