meta {
  name: ModelPlanCreateForOpNeeds
  type: graphql
  seq: 1
}

post {
  url: {{url}}
  body: graphql
  auth: apikey
}

auth:apikey {
  key: Authorization
  value: Local {"EUAID":"{{EUAID}}","jobCodes":{{jobCodes}},"favorLocalAuth":true}
  placement: header
}

body:graphql {
  mutation createModelPlan{
    
    createModelPlan(modelName:"Excellent Model" ){
      id
  
      id
      modelName
      operationalNeeds {
  
          id
          modelPlanID
          name
          section
          key
          nameOther
          needed
          
      solutions(includeNotNeeded:false) {
          # id
          # status
          # mustStartDts
          
          
          name
          key   
          needed
          nameOther
          pocEmail
          pocName     
          createdBy
          createdDts
      }
                      
          
      }
    
      basics{
          id        
      }
      generalCharacteristics {
          id
      }
      participantsAndProviders {
          id
      }
      beneficiaries {
          id
      }
      opsEvalAndLearning {
          id
      }
      collaborators {
        id
        userID
        teamRole
      }
      # documents{
      #     id
      # }
      # discussions{
      #     id
      #     replies{
      #         id
      #     }
      # }
      payments{
          id
      }
      # crTdls{
      #     id
      # }
      
      
    }
    
    
  }
}

tests {
  let responseData = res.getBody().data.createModelPlan
  
  modelPlanID = responseData.id
  basicsID = responseData.basics.id
  generalCharacteristicsID = responseData.generalCharacteristics.id
  participantsAndProvidersID = responseData.participantsAndProviders.id
  beneficiariesID = responseData.beneficiaries.id
  opsEvalAndLearningID = responseData.opsEvalAndLearning.id
  modelLeadID = responseData.collaborators[0].id
  paymentsID = responseData.payments.id
  
  bru.setVar("modelPlanID", modelPlanID);
  bru.setVar("basicsID", basicsID);
  
  bru.setVar("generalCharacteristicsID", generalCharacteristicsID);
  bru.setVar("participantsAndProvidersID", participantsAndProvidersID);
  bru.setVar("beneficiariesID", beneficiariesID);
  bru.setVar("opsEvalAndLearningID", opsEvalAndLearningID);
  bru.setVar("modelLeadID", modelLeadID);
  bru.setVar("paymentsID", paymentsID);
}
