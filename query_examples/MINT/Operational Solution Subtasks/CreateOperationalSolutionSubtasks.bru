meta {
  name: CreateOperationalSolutionSubtasks
  type: graphql
  seq: 1
}

post {
  url: {{url}}
  body: graphql
  auth: apikey
}

auth:apikey {
  key: Authorization
  value: Local {"EUAID":"{{EUAID}}","jobCodes":{{jobCodes}},"favorLocalAuth":true}
  placement: header
}

body:graphql {
  mutation createOperationalSolutionSubtasks ($solutionID: UUID!, $inputs: [CreateOperationalSolutionSubtaskInput!]!) {
      createOperationalSolutionSubtasks (solutionID: $solutionID, inputs: $inputs) {
          id
          solutionID
          name
          status
          createdBy
          createdDts
          modifiedBy
          modifiedDts
      }
  }
}

body:graphql:vars {
  {
    "solutionID": "{{operationalSolutionID}}",
    "inputs": [
        {
            "name": "Waffle Fries",
            "status": "TODO"
        },
        {
            "name": "Pancake Fries",
            "status": "IN_PROGRESS"
        }
    ]
  }
}

tests {
  let responseData = res.getBody().data.createOperationalSolutionSubtasks
  
  for (let i =0; i< responseData.length; i++){
      subtaskID = responseData[i].id
      bru.setVar("operationalSolutionSubtaskID"+i, subtaskID);
  }
}
