#!/usr/bin/env bash
#

set -eux -o pipefail

case "$APP_ENV" in
  "dev")
    MINT_URL="https://dev.mint.cms.gov"
    export REACT_APP_OKTA_DOMAIN="https://test.idp.idm.cms.gov"
    ;;
  "impl")
    MINT_URL="https://impl.mint.cms.gov"
    export REACT_APP_OKTA_DOMAIN="https://impl.idp.idm.cms.gov"
    ;;
  "prod")
    MINT_URL="https://mint.cms.gov"
    export REACT_APP_OKTA_DOMAIN="https://idm.cms.gov"
    ;;
  *)
    echo "APP_ENV value not recognized: ${APP_ENV:-unset}"
    echo "Allowed values: 'dev', 'impl', 'prod'"
    exit 1
    ;;
esac

# Export REACT_APP_ environment variables required to build the app.
export REACT_APP_APP_ENV="$APP_ENV"
export REACT_APP_OKTA_CLIENT_ID="$OKTA_CLIENT_ID"
export REACT_APP_OKTA_SERVER_ID="$OKTA_SERVER_ID"
export REACT_APP_LD_CLIENT_ID="$LD_CLIENT_ID"
export REACT_APP_OKTA_ISSUER="${REACT_APP_OKTA_DOMAIN}/oauth2/${REACT_APP_OKTA_SERVER_ID}"
export REACT_APP_OKTA_REDIRECT_URI="${MINT_URL}/implicit/callback"
export REACT_APP_API_ADDRESS="${MINT_URL}/api/v1"
export REACT_APP_GRAPHQL_ADDRESS="${MINT_URL}/api/graph/query"
export REACT_APP_LOCAL_AUTH_ENABLED="false" # Disable deploying local auth

# Check if we have any access to the s3 bucket
# Since `s3 ls` returns zero even if the command failed, we assume failure if this command prints anything to stderr
s3_err="$(aws s3 ls "$STATIC_S3_BUCKET" 1>/dev/null 2>&1)"
if [[ -z "$s3_err" ]] ; then
  ( set -x -u ;
    yarn install --frozen-lockfile
    yarn run build || exit
    aws s3 sync --no-progress --delete build/ s3://"$STATIC_S3_BUCKET"/
  )
else
  echo "+ aws s3 ls $STATIC_S3_BUCKET"
  echo "$s3_err"
  echo "--"
  echo "Error reading the S3 bucket. Are you authenticated?" 1>&2
  exit 1
fi
