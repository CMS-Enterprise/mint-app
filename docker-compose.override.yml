---
version: '3.7'
services:
  db:
    ports:
      - 5437:5432
  db_migrate:
    build:
      context: .
      dockerfile: Dockerfile.db_migrations
    volumes:
      - ./migrations:/flyway/sql
  mint:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    image: mint-backend:latest
    volumes:
    # Volume mounting the entire './' directory is dangerous, as it mounts OS-specific folders (and things like .git)
    # So instead, only volume mount things we need!
    #
    # Note, however, that MOST of the files that we care about are copied in the Dockerfile for us, we only really need to copy over the things that
    # we want to be able to change on the fly in local developmement, like our ./pkg/ directory & Air configs.
    # This means that editing things like your go.mod/go.sum and ./cmd/ directory WILL require a rebuild of the image, and won't hot reload with Air.
      - ./pkg/:/mint/pkg/
      - ./cmd/:/mint/cmd/ # Go build uses ./cmd as well
      - ./.air.conf:/mint/.air.conf
      - ./.airDebug.conf:/mint/.airDebug.conf
      - ./.airDebugWait.conf:/mint/.airDebugWait.conf
      - /mint/tmp/air/ # This should match .air.conf's tmp_dir. Note that this isn't a volume mount to a local file/folder, but just an empty volume for Air to use.
    entrypoint: air ${AIR_CONFIG}
    ports:
      - 8085:8080
      - 2350:2350
    environment:
      - LOCAL_AUTH_ENABLED
  mint_client:
    profiles: ["frontend"]
    build:
      context: .
      dockerfile: Dockerfile.client
      target: src
    environment:
      - REACT_APP_APP_ENV
      - REACT_APP_API_ADDRESS
      - REACT_APP_GRAPHQL_ADDRESS
      - REACT_APP_OKTA_CLIENT_ID
      - REACT_APP_OKTA_DOMAIN
      - REACT_APP_OKTA_ISSUER
      - REACT_APP_OKTA_REDIRECT_URI
      - REACT_APP_OKTA_SERVER_ID
      - REACT_APP_LD_ENV_USER
      - REACT_APP_LD_USER_HASH
      - REACT_APP_LD_CLIENT_ID
      - REACT_APP_LOCAL_AUTH_ENABLED
      - REACT_APP_BEACON_ID
      - CHOKIDAR_USEPOLLING=true
      - ESLINT_NO_DEV_ERRORS=true
      - PORT=3005
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3005:3005
  minio:
    ports:
      - '9005:9005'
      - '9966:9966'
    volumes:
      - ./tmp/minio:/data
  # prince:
  #   image: lambci/lambda:go1.x
  #   platform: linux/amd64
  #   ports:
  #     - 9006:9001
  #   environment:
  #     - DOCKER_LAMBDA_STAY_OPEN=1
  #     - LICENSE_KEY
  #   volumes:
  #     - ./../mint-infra-modules/lambda/prince/build:/var/task:ro,delegated
