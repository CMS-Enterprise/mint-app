// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// ComponentAddReader is a Reader for the ComponentAdd structure.
type ComponentAddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ComponentAddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewComponentAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewComponentAddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewComponentAddUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewComponentAddInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewComponentAddOK creates a ComponentAddOK with default headers values
func NewComponentAddOK() *ComponentAddOK {
	return &ComponentAddOK{}
}

/* ComponentAddOK describes a response with status code 200, with default header values.

OK
*/
type ComponentAddOK struct {
	Payload *models.ComponentAddResponse
}

func (o *ComponentAddOK) Error() string {
	return fmt.Sprintf("[POST /component][%d] componentAddOK  %+v", 200, o.Payload)
}
func (o *ComponentAddOK) GetPayload() *models.ComponentAddResponse {
	return o.Payload
}

func (o *ComponentAddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentAddResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewComponentAddBadRequest creates a ComponentAddBadRequest with default headers values
func NewComponentAddBadRequest() *ComponentAddBadRequest {
	return &ComponentAddBadRequest{}
}

/* ComponentAddBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ComponentAddBadRequest struct {
	Payload *models.Response
}

func (o *ComponentAddBadRequest) Error() string {
	return fmt.Sprintf("[POST /component][%d] componentAddBadRequest  %+v", 400, o.Payload)
}
func (o *ComponentAddBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *ComponentAddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewComponentAddUnauthorized creates a ComponentAddUnauthorized with default headers values
func NewComponentAddUnauthorized() *ComponentAddUnauthorized {
	return &ComponentAddUnauthorized{}
}

/* ComponentAddUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type ComponentAddUnauthorized struct {
	Payload *models.Response
}

func (o *ComponentAddUnauthorized) Error() string {
	return fmt.Sprintf("[POST /component][%d] componentAddUnauthorized  %+v", 401, o.Payload)
}
func (o *ComponentAddUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *ComponentAddUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewComponentAddInternalServerError creates a ComponentAddInternalServerError with default headers values
func NewComponentAddInternalServerError() *ComponentAddInternalServerError {
	return &ComponentAddInternalServerError{}
}

/* ComponentAddInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ComponentAddInternalServerError struct {
	Payload *models.Response
}

func (o *ComponentAddInternalServerError) Error() string {
	return fmt.Sprintf("[POST /component][%d] componentAddInternalServerError  %+v", 500, o.Payload)
}
func (o *ComponentAddInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *ComponentAddInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
