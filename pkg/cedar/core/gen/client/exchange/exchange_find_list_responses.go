// Code generated by go-swagger; DO NOT EDIT.

package exchange

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// ExchangeFindListReader is a Reader for the ExchangeFindList structure.
type ExchangeFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExchangeFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExchangeFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExchangeFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExchangeFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExchangeFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExchangeFindListOK creates a ExchangeFindListOK with default headers values
func NewExchangeFindListOK() *ExchangeFindListOK {
	return &ExchangeFindListOK{}
}

/* ExchangeFindListOK describes a response with status code 200, with default header values.

OK
*/
type ExchangeFindListOK struct {
	Payload *models.ExchangeFindResponse
}

func (o *ExchangeFindListOK) Error() string {
	return fmt.Sprintf("[GET /exchange][%d] exchangeFindListOK  %+v", 200, o.Payload)
}
func (o *ExchangeFindListOK) GetPayload() *models.ExchangeFindResponse {
	return o.Payload
}

func (o *ExchangeFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExchangeFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExchangeFindListBadRequest creates a ExchangeFindListBadRequest with default headers values
func NewExchangeFindListBadRequest() *ExchangeFindListBadRequest {
	return &ExchangeFindListBadRequest{}
}

/* ExchangeFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ExchangeFindListBadRequest struct {
	Payload *models.Response
}

func (o *ExchangeFindListBadRequest) Error() string {
	return fmt.Sprintf("[GET /exchange][%d] exchangeFindListBadRequest  %+v", 400, o.Payload)
}
func (o *ExchangeFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *ExchangeFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExchangeFindListUnauthorized creates a ExchangeFindListUnauthorized with default headers values
func NewExchangeFindListUnauthorized() *ExchangeFindListUnauthorized {
	return &ExchangeFindListUnauthorized{}
}

/* ExchangeFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type ExchangeFindListUnauthorized struct {
	Payload *models.Response
}

func (o *ExchangeFindListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /exchange][%d] exchangeFindListUnauthorized  %+v", 401, o.Payload)
}
func (o *ExchangeFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *ExchangeFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExchangeFindListInternalServerError creates a ExchangeFindListInternalServerError with default headers values
func NewExchangeFindListInternalServerError() *ExchangeFindListInternalServerError {
	return &ExchangeFindListInternalServerError{}
}

/* ExchangeFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ExchangeFindListInternalServerError struct {
	Payload *models.Response
}

func (o *ExchangeFindListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /exchange][%d] exchangeFindListInternalServerError  %+v", 500, o.Payload)
}
func (o *ExchangeFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *ExchangeFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
