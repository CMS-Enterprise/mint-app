// Code generated by go-swagger; DO NOT EDIT.

package exchange

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewExchangeFindListParams creates a new ExchangeFindListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewExchangeFindListParams() *ExchangeFindListParams {
	return &ExchangeFindListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewExchangeFindListParamsWithTimeout creates a new ExchangeFindListParams object
// with the ability to set a timeout on a request.
func NewExchangeFindListParamsWithTimeout(timeout time.Duration) *ExchangeFindListParams {
	return &ExchangeFindListParams{
		timeout: timeout,
	}
}

// NewExchangeFindListParamsWithContext creates a new ExchangeFindListParams object
// with the ability to set a context for a request.
func NewExchangeFindListParamsWithContext(ctx context.Context) *ExchangeFindListParams {
	return &ExchangeFindListParams{
		Context: ctx,
	}
}

// NewExchangeFindListParamsWithHTTPClient creates a new ExchangeFindListParams object
// with the ability to set a custom HTTPClient for a request.
func NewExchangeFindListParamsWithHTTPClient(client *http.Client) *ExchangeFindListParams {
	return &ExchangeFindListParams{
		HTTPClient: client,
	}
}

/* ExchangeFindListParams contains all the parameters to send to the API endpoint
   for the exchange find list operation.

   Typically these are written to a http.Request.
*/
type ExchangeFindListParams struct {

	/* Direction.

	   The direction of the data exchange, relative to the systemId provided.
	*/
	Direction string

	/* SystemID.

	   ID of the system that the data exchange is associated with.
	*/
	SystemID string

	/* Version.

	   Version of the data exchanges to be retrieved.
	*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the exchange find list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ExchangeFindListParams) WithDefaults() *ExchangeFindListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the exchange find list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ExchangeFindListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the exchange find list params
func (o *ExchangeFindListParams) WithTimeout(timeout time.Duration) *ExchangeFindListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the exchange find list params
func (o *ExchangeFindListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the exchange find list params
func (o *ExchangeFindListParams) WithContext(ctx context.Context) *ExchangeFindListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the exchange find list params
func (o *ExchangeFindListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the exchange find list params
func (o *ExchangeFindListParams) WithHTTPClient(client *http.Client) *ExchangeFindListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the exchange find list params
func (o *ExchangeFindListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDirection adds the direction to the exchange find list params
func (o *ExchangeFindListParams) WithDirection(direction string) *ExchangeFindListParams {
	o.SetDirection(direction)
	return o
}

// SetDirection adds the direction to the exchange find list params
func (o *ExchangeFindListParams) SetDirection(direction string) {
	o.Direction = direction
}

// WithSystemID adds the systemID to the exchange find list params
func (o *ExchangeFindListParams) WithSystemID(systemID string) *ExchangeFindListParams {
	o.SetSystemID(systemID)
	return o
}

// SetSystemID adds the systemId to the exchange find list params
func (o *ExchangeFindListParams) SetSystemID(systemID string) {
	o.SystemID = systemID
}

// WithVersion adds the version to the exchange find list params
func (o *ExchangeFindListParams) WithVersion(version *string) *ExchangeFindListParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the exchange find list params
func (o *ExchangeFindListParams) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *ExchangeFindListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param direction
	qrDirection := o.Direction
	qDirection := qrDirection
	if qDirection != "" {

		if err := r.SetQueryParam("direction", qDirection); err != nil {
			return err
		}
	}

	// query param systemId
	qrSystemID := o.SystemID
	qSystemID := qrSystemID
	if qSystemID != "" {

		if err := r.SetQueryParam("systemId", qSystemID); err != nil {
			return err
		}
	}

	if o.Version != nil {

		// query param version
		var qrVersion string

		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {

			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
