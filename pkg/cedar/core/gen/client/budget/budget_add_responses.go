// Code generated by go-swagger; DO NOT EDIT.

package budget

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// BudgetAddReader is a Reader for the BudgetAdd structure.
type BudgetAddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BudgetAddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBudgetAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBudgetAddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBudgetAddUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBudgetAddInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBudgetAddOK creates a BudgetAddOK with default headers values
func NewBudgetAddOK() *BudgetAddOK {
	return &BudgetAddOK{}
}

/* BudgetAddOK describes a response with status code 200, with default header values.

OK
*/
type BudgetAddOK struct {
	Payload *models.Response
}

func (o *BudgetAddOK) Error() string {
	return fmt.Sprintf("[POST /budget][%d] budgetAddOK  %+v", 200, o.Payload)
}
func (o *BudgetAddOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetAddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetAddBadRequest creates a BudgetAddBadRequest with default headers values
func NewBudgetAddBadRequest() *BudgetAddBadRequest {
	return &BudgetAddBadRequest{}
}

/* BudgetAddBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BudgetAddBadRequest struct {
	Payload *models.Response
}

func (o *BudgetAddBadRequest) Error() string {
	return fmt.Sprintf("[POST /budget][%d] budgetAddBadRequest  %+v", 400, o.Payload)
}
func (o *BudgetAddBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetAddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetAddUnauthorized creates a BudgetAddUnauthorized with default headers values
func NewBudgetAddUnauthorized() *BudgetAddUnauthorized {
	return &BudgetAddUnauthorized{}
}

/* BudgetAddUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type BudgetAddUnauthorized struct {
	Payload *models.Response
}

func (o *BudgetAddUnauthorized) Error() string {
	return fmt.Sprintf("[POST /budget][%d] budgetAddUnauthorized  %+v", 401, o.Payload)
}
func (o *BudgetAddUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetAddUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetAddInternalServerError creates a BudgetAddInternalServerError with default headers values
func NewBudgetAddInternalServerError() *BudgetAddInternalServerError {
	return &BudgetAddInternalServerError{}
}

/* BudgetAddInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BudgetAddInternalServerError struct {
	Payload *models.Response
}

func (o *BudgetAddInternalServerError) Error() string {
	return fmt.Sprintf("[POST /budget][%d] budgetAddInternalServerError  %+v", 500, o.Payload)
}
func (o *BudgetAddInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetAddInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
