// Code generated by go-swagger; DO NOT EDIT.

package contract

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewContractFindParams creates a new ContractFindParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewContractFindParams() *ContractFindParams {
	return &ContractFindParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewContractFindParamsWithTimeout creates a new ContractFindParams object
// with the ability to set a timeout on a request.
func NewContractFindParamsWithTimeout(timeout time.Duration) *ContractFindParams {
	return &ContractFindParams{
		timeout: timeout,
	}
}

// NewContractFindParamsWithContext creates a new ContractFindParams object
// with the ability to set a context for a request.
func NewContractFindParamsWithContext(ctx context.Context) *ContractFindParams {
	return &ContractFindParams{
		Context: ctx,
	}
}

// NewContractFindParamsWithHTTPClient creates a new ContractFindParams object
// with the ability to set a custom HTTPClient for a request.
func NewContractFindParamsWithHTTPClient(client *http.Client) *ContractFindParams {
	return &ContractFindParams{
		HTTPClient: client,
	}
}

/* ContractFindParams contains all the parameters to send to the API endpoint
   for the contract find operation.

   Typically these are written to a http.Request.
*/
type ContractFindParams struct {

	/* Keyword.

	   A keyword to be used in the query
	*/
	Keyword *string

	/* SystemID.

	   ID of the system that the contract is associated with
	*/
	SystemID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the contract find params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ContractFindParams) WithDefaults() *ContractFindParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the contract find params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ContractFindParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the contract find params
func (o *ContractFindParams) WithTimeout(timeout time.Duration) *ContractFindParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the contract find params
func (o *ContractFindParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the contract find params
func (o *ContractFindParams) WithContext(ctx context.Context) *ContractFindParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the contract find params
func (o *ContractFindParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the contract find params
func (o *ContractFindParams) WithHTTPClient(client *http.Client) *ContractFindParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the contract find params
func (o *ContractFindParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKeyword adds the keyword to the contract find params
func (o *ContractFindParams) WithKeyword(keyword *string) *ContractFindParams {
	o.SetKeyword(keyword)
	return o
}

// SetKeyword adds the keyword to the contract find params
func (o *ContractFindParams) SetKeyword(keyword *string) {
	o.Keyword = keyword
}

// WithSystemID adds the systemID to the contract find params
func (o *ContractFindParams) WithSystemID(systemID *string) *ContractFindParams {
	o.SetSystemID(systemID)
	return o
}

// SetSystemID adds the systemId to the contract find params
func (o *ContractFindParams) SetSystemID(systemID *string) {
	o.SystemID = systemID
}

// WriteToRequest writes these params to a swagger request
func (o *ContractFindParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Keyword != nil {

		// query param keyword
		var qrKeyword string

		if o.Keyword != nil {
			qrKeyword = *o.Keyword
		}
		qKeyword := qrKeyword
		if qKeyword != "" {

			if err := r.SetQueryParam("keyword", qKeyword); err != nil {
				return err
			}
		}
	}

	if o.SystemID != nil {

		// query param systemId
		var qrSystemID string

		if o.SystemID != nil {
			qrSystemID = *o.SystemID
		}
		qSystemID := qrSystemID
		if qSystemID != "" {

			if err := r.SetQueryParam("systemId", qSystemID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
