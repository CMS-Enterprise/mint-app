// Code generated by go-swagger; DO NOT EDIT.

package contract

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// ContractFindReader is a Reader for the ContractFind structure.
type ContractFindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContractFindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewContractFindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewContractFindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewContractFindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContractFindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewContractFindOK creates a ContractFindOK with default headers values
func NewContractFindOK() *ContractFindOK {
	return &ContractFindOK{}
}

/* ContractFindOK describes a response with status code 200, with default header values.

OK
*/
type ContractFindOK struct {
	Payload *models.ContractFindResponse
}

func (o *ContractFindOK) Error() string {
	return fmt.Sprintf("[GET /contract][%d] contractFindOK  %+v", 200, o.Payload)
}
func (o *ContractFindOK) GetPayload() *models.ContractFindResponse {
	return o.Payload
}

func (o *ContractFindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContractFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractFindBadRequest creates a ContractFindBadRequest with default headers values
func NewContractFindBadRequest() *ContractFindBadRequest {
	return &ContractFindBadRequest{}
}

/* ContractFindBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ContractFindBadRequest struct {
	Payload *models.Response
}

func (o *ContractFindBadRequest) Error() string {
	return fmt.Sprintf("[GET /contract][%d] contractFindBadRequest  %+v", 400, o.Payload)
}
func (o *ContractFindBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *ContractFindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractFindUnauthorized creates a ContractFindUnauthorized with default headers values
func NewContractFindUnauthorized() *ContractFindUnauthorized {
	return &ContractFindUnauthorized{}
}

/* ContractFindUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type ContractFindUnauthorized struct {
	Payload *models.Response
}

func (o *ContractFindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contract][%d] contractFindUnauthorized  %+v", 401, o.Payload)
}
func (o *ContractFindUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *ContractFindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContractFindInternalServerError creates a ContractFindInternalServerError with default headers values
func NewContractFindInternalServerError() *ContractFindInternalServerError {
	return &ContractFindInternalServerError{}
}

/* ContractFindInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ContractFindInternalServerError struct {
	Payload *models.Response
}

func (o *ContractFindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /contract][%d] contractFindInternalServerError  %+v", 500, o.Payload)
}
func (o *ContractFindInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *ContractFindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
