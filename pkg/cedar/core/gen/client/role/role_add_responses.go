// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// RoleAddReader is a Reader for the RoleAdd structure.
type RoleAddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoleAddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRoleAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoleAddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRoleAddUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRoleAddInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRoleAddOK creates a RoleAddOK with default headers values
func NewRoleAddOK() *RoleAddOK {
	return &RoleAddOK{}
}

/* RoleAddOK describes a response with status code 200, with default header values.

OK
*/
type RoleAddOK struct {
	Payload *models.Response
}

func (o *RoleAddOK) Error() string {
	return fmt.Sprintf("[POST /role][%d] roleAddOK  %+v", 200, o.Payload)
}
func (o *RoleAddOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *RoleAddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoleAddBadRequest creates a RoleAddBadRequest with default headers values
func NewRoleAddBadRequest() *RoleAddBadRequest {
	return &RoleAddBadRequest{}
}

/* RoleAddBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RoleAddBadRequest struct {
	Payload *models.Response
}

func (o *RoleAddBadRequest) Error() string {
	return fmt.Sprintf("[POST /role][%d] roleAddBadRequest  %+v", 400, o.Payload)
}
func (o *RoleAddBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *RoleAddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoleAddUnauthorized creates a RoleAddUnauthorized with default headers values
func NewRoleAddUnauthorized() *RoleAddUnauthorized {
	return &RoleAddUnauthorized{}
}

/* RoleAddUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type RoleAddUnauthorized struct {
	Payload *models.Response
}

func (o *RoleAddUnauthorized) Error() string {
	return fmt.Sprintf("[POST /role][%d] roleAddUnauthorized  %+v", 401, o.Payload)
}
func (o *RoleAddUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *RoleAddUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoleAddInternalServerError creates a RoleAddInternalServerError with default headers values
func NewRoleAddInternalServerError() *RoleAddInternalServerError {
	return &RoleAddInternalServerError{}
}

/* RoleAddInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RoleAddInternalServerError struct {
	Payload *models.Response
}

func (o *RoleAddInternalServerError) Error() string {
	return fmt.Sprintf("[POST /role][%d] roleAddInternalServerError  %+v", 500, o.Payload)
}
func (o *RoleAddInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *RoleAddInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
