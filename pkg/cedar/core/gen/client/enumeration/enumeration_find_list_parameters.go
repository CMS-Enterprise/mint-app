// Code generated by go-swagger; DO NOT EDIT.

package enumeration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewEnumerationFindListParams creates a new EnumerationFindListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEnumerationFindListParams() *EnumerationFindListParams {
	return &EnumerationFindListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEnumerationFindListParamsWithTimeout creates a new EnumerationFindListParams object
// with the ability to set a timeout on a request.
func NewEnumerationFindListParamsWithTimeout(timeout time.Duration) *EnumerationFindListParams {
	return &EnumerationFindListParams{
		timeout: timeout,
	}
}

// NewEnumerationFindListParamsWithContext creates a new EnumerationFindListParams object
// with the ability to set a context for a request.
func NewEnumerationFindListParamsWithContext(ctx context.Context) *EnumerationFindListParams {
	return &EnumerationFindListParams{
		Context: ctx,
	}
}

// NewEnumerationFindListParamsWithHTTPClient creates a new EnumerationFindListParams object
// with the ability to set a custom HTTPClient for a request.
func NewEnumerationFindListParamsWithHTTPClient(client *http.Client) *EnumerationFindListParams {
	return &EnumerationFindListParams{
		HTTPClient: client,
	}
}

/* EnumerationFindListParams contains all the parameters to send to the API endpoint
   for the enumeration find list operation.

   Typically these are written to a http.Request.
*/
type EnumerationFindListParams struct {

	/* Application.

	   Application where the object or role exists.
	*/
	Application string

	/* Names.

	   An array of name of enumerations.
	*/
	Names []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the enumeration find list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EnumerationFindListParams) WithDefaults() *EnumerationFindListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the enumeration find list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EnumerationFindListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the enumeration find list params
func (o *EnumerationFindListParams) WithTimeout(timeout time.Duration) *EnumerationFindListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the enumeration find list params
func (o *EnumerationFindListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the enumeration find list params
func (o *EnumerationFindListParams) WithContext(ctx context.Context) *EnumerationFindListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the enumeration find list params
func (o *EnumerationFindListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the enumeration find list params
func (o *EnumerationFindListParams) WithHTTPClient(client *http.Client) *EnumerationFindListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the enumeration find list params
func (o *EnumerationFindListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplication adds the application to the enumeration find list params
func (o *EnumerationFindListParams) WithApplication(application string) *EnumerationFindListParams {
	o.SetApplication(application)
	return o
}

// SetApplication adds the application to the enumeration find list params
func (o *EnumerationFindListParams) SetApplication(application string) {
	o.Application = application
}

// WithNames adds the names to the enumeration find list params
func (o *EnumerationFindListParams) WithNames(names []string) *EnumerationFindListParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the enumeration find list params
func (o *EnumerationFindListParams) SetNames(names []string) {
	o.Names = names
}

// WriteToRequest writes these params to a swagger request
func (o *EnumerationFindListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param application
	qrApplication := o.Application
	qApplication := qrApplication
	if qApplication != "" {

		if err := r.SetQueryParam("application", qApplication); err != nil {
			return err
		}
	}

	if o.Names != nil {

		// binding items for names
		joinedNames := o.bindParamNames(reg)

		// query array param names
		if err := r.SetQueryParam("names", joinedNames...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamEnumerationFindList binds the parameter names
func (o *EnumerationFindListParams) bindParamNames(formats strfmt.Registry) []string {
	namesIR := o.Names

	var namesIC []string
	for _, namesIIR := range namesIR { // explode []string

		namesIIV := namesIIR // string as string
		namesIC = append(namesIC, namesIIV)
	}

	// items.CollectionFormat: "multi"
	namesIS := swag.JoinByFormat(namesIC, "multi")

	return namesIS
}
