// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cmsgov/easi-app/pkg/cedar/cedarldap/gen/models"
)

// PersonIDReader is a Reader for the PersonID structure.
type PersonIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PersonIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPersonIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPersonIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPersonIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPersonIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPersonIDOK creates a PersonIDOK with default headers values
func NewPersonIDOK() *PersonIDOK {
	return &PersonIDOK{}
}

/*PersonIDOK handles this case with default header values.

OK
*/
type PersonIDOK struct {
	Payload *models.Person
}

func (o *PersonIDOK) Error() string {
	return fmt.Sprintf("[GET /person/{id}][%d] personIdOK  %+v", 200, o.Payload)
}

func (o *PersonIDOK) GetPayload() *models.Person {
	return o.Payload
}

func (o *PersonIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Person)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPersonIDBadRequest creates a PersonIDBadRequest with default headers values
func NewPersonIDBadRequest() *PersonIDBadRequest {
	return &PersonIDBadRequest{}
}

/*PersonIDBadRequest handles this case with default header values.

Bad Request
*/
type PersonIDBadRequest struct {
	Payload *models.Response
}

func (o *PersonIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /person/{id}][%d] personIdBadRequest  %+v", 400, o.Payload)
}

func (o *PersonIDBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *PersonIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPersonIDUnauthorized creates a PersonIDUnauthorized with default headers values
func NewPersonIDUnauthorized() *PersonIDUnauthorized {
	return &PersonIDUnauthorized{}
}

/*PersonIDUnauthorized handles this case with default header values.

Access Denied
*/
type PersonIDUnauthorized struct {
	Payload *models.Response
}

func (o *PersonIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /person/{id}][%d] personIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PersonIDUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *PersonIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPersonIDInternalServerError creates a PersonIDInternalServerError with default headers values
func NewPersonIDInternalServerError() *PersonIDInternalServerError {
	return &PersonIDInternalServerError{}
}

/*PersonIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type PersonIDInternalServerError struct {
	Payload *models.Response
}

func (o *PersonIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /person/{id}][%d] personIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PersonIDInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *PersonIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
