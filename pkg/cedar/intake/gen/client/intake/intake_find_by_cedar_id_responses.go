// Code generated by go-swagger; DO NOT EDIT.

package intake

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/intake/gen/models"
)

// IntakeFindByCedarIDReader is a Reader for the IntakeFindByCedarID structure.
type IntakeFindByCedarIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IntakeFindByCedarIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIntakeFindByCedarIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIntakeFindByCedarIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewIntakeFindByCedarIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIntakeFindByCedarIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewIntakeFindByCedarIDOK creates a IntakeFindByCedarIDOK with default headers values
func NewIntakeFindByCedarIDOK() *IntakeFindByCedarIDOK {
	return &IntakeFindByCedarIDOK{}
}

/* IntakeFindByCedarIDOK describes a response with status code 200, with default header values.

OK
*/
type IntakeFindByCedarIDOK struct {
	Payload *models.Intake
}

func (o *IntakeFindByCedarIDOK) Error() string {
	return fmt.Sprintf("[GET /intake/cedar/{id}][%d] intakeFindByCedarIdOK  %+v", 200, o.Payload)
}
func (o *IntakeFindByCedarIDOK) GetPayload() *models.Intake {
	return o.Payload
}

func (o *IntakeFindByCedarIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Intake)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntakeFindByCedarIDBadRequest creates a IntakeFindByCedarIDBadRequest with default headers values
func NewIntakeFindByCedarIDBadRequest() *IntakeFindByCedarIDBadRequest {
	return &IntakeFindByCedarIDBadRequest{}
}

/* IntakeFindByCedarIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type IntakeFindByCedarIDBadRequest struct {
	Payload *models.Response
}

func (o *IntakeFindByCedarIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /intake/cedar/{id}][%d] intakeFindByCedarIdBadRequest  %+v", 400, o.Payload)
}
func (o *IntakeFindByCedarIDBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *IntakeFindByCedarIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntakeFindByCedarIDUnauthorized creates a IntakeFindByCedarIDUnauthorized with default headers values
func NewIntakeFindByCedarIDUnauthorized() *IntakeFindByCedarIDUnauthorized {
	return &IntakeFindByCedarIDUnauthorized{}
}

/* IntakeFindByCedarIDUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type IntakeFindByCedarIDUnauthorized struct {
	Payload *models.Response
}

func (o *IntakeFindByCedarIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /intake/cedar/{id}][%d] intakeFindByCedarIdUnauthorized  %+v", 401, o.Payload)
}
func (o *IntakeFindByCedarIDUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *IntakeFindByCedarIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntakeFindByCedarIDInternalServerError creates a IntakeFindByCedarIDInternalServerError with default headers values
func NewIntakeFindByCedarIDInternalServerError() *IntakeFindByCedarIDInternalServerError {
	return &IntakeFindByCedarIDInternalServerError{}
}

/* IntakeFindByCedarIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type IntakeFindByCedarIDInternalServerError struct {
	Payload *models.Response
}

func (o *IntakeFindByCedarIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /intake/cedar/{id}][%d] intakeFindByCedarIdInternalServerError  %+v", 500, o.Payload)
}
func (o *IntakeFindByCedarIDInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *IntakeFindByCedarIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
