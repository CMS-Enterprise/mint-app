// Code generated by go-swagger; DO NOT EDIT.

package intake

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/intake/gen/models"
)

// IntakeStatusByClientIDReader is a Reader for the IntakeStatusByClientID structure.
type IntakeStatusByClientIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IntakeStatusByClientIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIntakeStatusByClientIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIntakeStatusByClientIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewIntakeStatusByClientIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIntakeStatusByClientIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewIntakeStatusByClientIDOK creates a IntakeStatusByClientIDOK with default headers values
func NewIntakeStatusByClientIDOK() *IntakeStatusByClientIDOK {
	return &IntakeStatusByClientIDOK{}
}

/* IntakeStatusByClientIDOK describes a response with status code 200, with default header values.

OK
*/
type IntakeStatusByClientIDOK struct {
	Payload *models.IntakeStatus
}

func (o *IntakeStatusByClientIDOK) Error() string {
	return fmt.Sprintf("[GET /intake/status/client/{id}][%d] intakeStatusByClientIdOK  %+v", 200, o.Payload)
}
func (o *IntakeStatusByClientIDOK) GetPayload() *models.IntakeStatus {
	return o.Payload
}

func (o *IntakeStatusByClientIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IntakeStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntakeStatusByClientIDBadRequest creates a IntakeStatusByClientIDBadRequest with default headers values
func NewIntakeStatusByClientIDBadRequest() *IntakeStatusByClientIDBadRequest {
	return &IntakeStatusByClientIDBadRequest{}
}

/* IntakeStatusByClientIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type IntakeStatusByClientIDBadRequest struct {
	Payload *models.Response
}

func (o *IntakeStatusByClientIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /intake/status/client/{id}][%d] intakeStatusByClientIdBadRequest  %+v", 400, o.Payload)
}
func (o *IntakeStatusByClientIDBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *IntakeStatusByClientIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntakeStatusByClientIDUnauthorized creates a IntakeStatusByClientIDUnauthorized with default headers values
func NewIntakeStatusByClientIDUnauthorized() *IntakeStatusByClientIDUnauthorized {
	return &IntakeStatusByClientIDUnauthorized{}
}

/* IntakeStatusByClientIDUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type IntakeStatusByClientIDUnauthorized struct {
	Payload *models.Response
}

func (o *IntakeStatusByClientIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /intake/status/client/{id}][%d] intakeStatusByClientIdUnauthorized  %+v", 401, o.Payload)
}
func (o *IntakeStatusByClientIDUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *IntakeStatusByClientIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntakeStatusByClientIDInternalServerError creates a IntakeStatusByClientIDInternalServerError with default headers values
func NewIntakeStatusByClientIDInternalServerError() *IntakeStatusByClientIDInternalServerError {
	return &IntakeStatusByClientIDInternalServerError{}
}

/* IntakeStatusByClientIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type IntakeStatusByClientIDInternalServerError struct {
	Payload *models.Response
}

func (o *IntakeStatusByClientIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /intake/status/client/{id}][%d] intakeStatusByClientIdInternalServerError  %+v", 500, o.Payload)
}
func (o *IntakeStatusByClientIDInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *IntakeStatusByClientIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
