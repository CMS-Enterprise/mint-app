"""
ModelPlan represent the data point for plans about a model. It is the central data type in the application
"""
type ModelPlan {
  id: UUID!
  modelName: String!
  abbreviation: String
  archived: Boolean!
  createdBy: UUID!
  createdByUserAccount: UserAccount!
  createdDts: Time!
  modifiedBy: UUID
  modifiedByUserAccount: UserAccount
  modifiedDts: Time
  basics: PlanBasics!
  generalCharacteristics: PlanGeneralCharacteristics!
  participantsAndProviders: PlanParticipantsAndProviders!
  beneficiaries: PlanBeneficiaries!
  opsEvalAndLearning: PlanOpsEvalAndLearning!
  collaborators: [PlanCollaborator!]!
  documents: [PlanDocument!]!
  discussions: [PlanDiscussion!]!
  payments: PlanPayments!
  status: ModelStatus!
  isFavorite: Boolean!
  isCollaborator: Boolean!
  crTdls: [PlanCrTdl!]!
  prepareForClearance: PrepareForClearance!
  nameHistory(sort: SortDirection! = DESC): [String!]!
  operationalNeeds: [OperationalNeed!]!
  existingModelLinks: [ExistingModelLink!]!
}

"""
ModelPlanChanges represents the possible changes you can make to a model plan when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input ModelPlanChanges @goModel(model: "map[string]interface{}") {
  modelName: String
  abbreviation: String
  someNumbers: [Int!]
  archived: Boolean
  status: ModelStatus
}