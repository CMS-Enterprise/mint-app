package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/launchdarkly/go-sdk-common/v3/ldcontext"

	"github.com/cmsgov/mint-app/pkg/appcontext"
	"github.com/cmsgov/mint-app/pkg/models"
)

// EchimpCr is the resolver for the echimpCR field.
func (r *queryResolver) EchimpCr(ctx context.Context) ([]*models.EChimpCR, error) {
	principal := appcontext.Principal(ctx)

	ldContext := ldcontext.
		NewBuilder(principal.ID()).
		Anonymous(false).
		Build()

		//TODO: make this be more generalized in a helper function
		// TODO respect the key value

	enabled, err := r.ldClient.BoolVariation("echimp-enabled", ldContext, false)
	if err != nil {
		return nil, err
	}
	if enabled {
		return GetEChimpCRs(r.echimpS3Client)
	}

	return nil, nil

}

// EchimpTdl is the resolver for the echimpTDL field.
func (r *queryResolver) EchimpTdl(ctx context.Context) ([]*models.EChimpTDL, error) {

	return GetEChimpTDLS(r.echimpS3Client)
}

// EchimpCRAndTdls is the resolver for the echimpCRAndTDLS field.
func (r *queryResolver) EchimpCRAndTdls(ctx context.Context) ([]models.EChimpCRAndTDLS, error) {

	return GetEchimpCRAndTdls(r.echimpS3Client)
}
