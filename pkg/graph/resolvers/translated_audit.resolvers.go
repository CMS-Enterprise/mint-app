package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/cms-enterprise/mint-app/pkg/appcontext"
	"github.com/cms-enterprise/mint-app/pkg/graph/generated"
	"github.com/cms-enterprise/mint-app/pkg/models"
	"github.com/google/uuid"
)

// TranslatedAuditCollection is the resolver for the translatedAuditCollection field.
func (r *queryResolver) TranslatedAuditCollection(ctx context.Context, modelPlanID uuid.UUID, limit *int, offset *int) ([]*models.TranslatedAudit, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	return TranslatedAuditCollectionGetByModelPlanID(ctx, r.store, logger, principal, modelPlanID, limit, offset)
}

// TranslatedFields is the resolver for the translatedFields field.
func (r *translatedAuditResolver) TranslatedFields(ctx context.Context, obj *models.TranslatedAudit) ([]*models.TranslatedAuditField, error) {
	return TranslatedAuditFieldCollectionGetByTranslatedAuditID(ctx, obj.ID)
}

// NotApplicableQuestions is the resolver for the notApplicableQuestions field.
func (r *translatedAuditFieldResolver) NotApplicableQuestions(ctx context.Context, obj *models.TranslatedAuditField) ([]string, error) {
	if obj.NotApplicableQuestions == nil {
		return nil, nil
	}

	return *obj.NotApplicableQuestions, nil
}

// TranslatedAudit returns generated.TranslatedAuditResolver implementation.
func (r *Resolver) TranslatedAudit() generated.TranslatedAuditResolver {
	return &translatedAuditResolver{r}
}

// TranslatedAuditField returns generated.TranslatedAuditFieldResolver implementation.
func (r *Resolver) TranslatedAuditField() generated.TranslatedAuditFieldResolver {
	return &translatedAuditFieldResolver{r}
}

type translatedAuditResolver struct{ *Resolver }
type translatedAuditFieldResolver struct{ *Resolver }
