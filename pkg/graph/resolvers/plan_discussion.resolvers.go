package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/cmsgov/mint-app/pkg/appcontext"
	"github.com/cmsgov/mint-app/pkg/graph/generated"
	"github.com/cmsgov/mint-app/pkg/graph/model"
	"github.com/cmsgov/mint-app/pkg/models"
	"github.com/cmsgov/mint-app/pkg/userhelpers"
)

// CreatePlanDiscussion is the resolver for the createPlanDiscussion field.
func (r *mutationResolver) CreatePlanDiscussion(ctx context.Context, input model.PlanDiscussionCreateInput) (*models.PlanDiscussion, error) {
	principal := appcontext.Principal(ctx)
	logger := appcontext.ZLogger(ctx)

	return CreatePlanDiscussion(
		ctx,
		logger,
		r.emailService,
		r.emailTemplateService,
		r.addressBook,
		&input,
		principal,
		r.store,
		userhelpers.GetUserInfoAccountInfoWrapperFunc(r.service.FetchUserInfo),
	)
}

// Content is the resolver for the content field.
func (r *planDiscussionResolver) Content(ctx context.Context, obj *models.PlanDiscussion) (*models.TaggedContent, error) {
	logger := appcontext.ZLogger(ctx)
	return TaggedContentGet(logger, r.store, string(obj.Content.RawContent), "plan_discussion", "content", obj.ID)
}

// Replies is the resolver for the replies field.
func (r *planDiscussionResolver) Replies(ctx context.Context, obj *models.PlanDiscussion) ([]*models.DiscussionReply, error) {
	return DiscussionReplyCollectionByDiscusionIDLOADER(ctx, obj.ID)
}

// PlanDiscussion returns generated.PlanDiscussionResolver implementation.
func (r *Resolver) PlanDiscussion() generated.PlanDiscussionResolver {
	return &planDiscussionResolver{r}
}

type planDiscussionResolver struct{ *Resolver }
