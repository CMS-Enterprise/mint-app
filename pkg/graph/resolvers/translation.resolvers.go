package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"fmt"

	"github.com/cmsgov/mint-app/pkg/graph/generated"
	"github.com/cmsgov/mint-app/pkg/graph/model"
	"github.com/cmsgov/mint-app/pkg/models"
)

// DataType is the resolver for the dataType field.
func (r *translationFieldResolver) DataType(ctx context.Context, obj *models.TranslationField) (model.TranslationDataType, error) {
	panic(fmt.Errorf("not implemented: DataType - dataType"))
}

// FormType is the resolver for the formType field.
func (r *translationFieldResolver) FormType(ctx context.Context, obj *models.TranslationField) (model.TranslationFormType, error) {
	panic(fmt.Errorf("not implemented: FormType - formType"))
}

// IsNote is the resolver for the isNote field.
func (r *translationFieldResolver) IsNote(ctx context.Context, obj *models.TranslationField) (*bool, error) {
	panic(fmt.Errorf("not implemented: IsNote - isNote"))
}

// OtherParentField is the resolver for the otherParentField field.
func (r *translationFieldResolver) OtherParentField(ctx context.Context, obj *models.TranslationField) (*string, error) {
	panic(fmt.Errorf("not implemented: OtherParentField - otherParentField"))
}

// ParentReferencesLabel is the resolver for the parentReferencesLabel field.
func (r *translationFieldResolver) ParentReferencesLabel(ctx context.Context, obj *models.TranslationField) (*string, error) {
	panic(fmt.Errorf("not implemented: ParentReferencesLabel - parentReferencesLabel"))
}

// DataType is the resolver for the dataType field.
func (r *translationFieldWithOptionsResolver) DataType(ctx context.Context, obj *models.TranslationFieldWithOptions) (model.TranslationDataType, error) {
	panic(fmt.Errorf("not implemented: DataType - dataType"))
}

// FormType is the resolver for the formType field.
func (r *translationFieldWithOptionsResolver) FormType(ctx context.Context, obj *models.TranslationFieldWithOptions) (model.TranslationFormType, error) {
	panic(fmt.Errorf("not implemented: FormType - formType"))
}

// IsNote is the resolver for the isNote field.
func (r *translationFieldWithOptionsResolver) IsNote(ctx context.Context, obj *models.TranslationFieldWithOptions) (*bool, error) {
	panic(fmt.Errorf("not implemented: IsNote - isNote"))
}

// OtherParentField is the resolver for the otherParentField field.
func (r *translationFieldWithOptionsResolver) OtherParentField(ctx context.Context, obj *models.TranslationFieldWithOptions) (*string, error) {
	panic(fmt.Errorf("not implemented: OtherParentField - otherParentField"))
}

// ParentReferencesLabel is the resolver for the parentReferencesLabel field.
func (r *translationFieldWithOptionsResolver) ParentReferencesLabel(ctx context.Context, obj *models.TranslationFieldWithOptions) (*string, error) {
	panic(fmt.Errorf("not implemented: ParentReferencesLabel - parentReferencesLabel"))
}

// TranslationField returns generated.TranslationFieldResolver implementation.
func (r *Resolver) TranslationField() generated.TranslationFieldResolver {
	return &translationFieldResolver{r}
}

// TranslationFieldWithOptions returns generated.TranslationFieldWithOptionsResolver implementation.
func (r *Resolver) TranslationFieldWithOptions() generated.TranslationFieldWithOptionsResolver {
	return &translationFieldWithOptionsResolver{r}
}

type translationFieldResolver struct{ *Resolver }
type translationFieldWithOptionsResolver struct{ *Resolver }
