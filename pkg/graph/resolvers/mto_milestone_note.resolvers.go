package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/cms-enterprise/mint-app/pkg/appcontext"
	"github.com/cms-enterprise/mint-app/pkg/models"
)

// CreateMTOMilestoneNote is the resolver for the createMTOMilestoneNote field.
func (r *mutationResolver) CreateMTOMilestoneNote(ctx context.Context, input models.MTOMilestoneNoteCreateInput) (*models.MTOMilestoneNote, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	store := r.store
	return CreateMTOMilestoneNote(ctx, logger, principal, store, input)
}

// UpdateMTOMilestoneNote is the resolver for the updateMTOMilestoneNote field.
func (r *mutationResolver) UpdateMTOMilestoneNote(ctx context.Context, input models.MTOMilestoneNoteUpdateInput) (*models.MTOMilestoneNote, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	store := r.store
	return UpdateMTOMilestoneNote(ctx, logger, principal, store, input)
}

// DeleteMTOMilestoneNote is the resolver for the deleteMTOMilestoneNote field.
func (r *mutationResolver) DeleteMTOMilestoneNote(ctx context.Context, input models.MTOMilestoneNoteDeleteInput) (*models.MTOMilestoneNote, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	store := r.store
	return DeleteMTOMilestoneNote(ctx, logger, principal, store, input)
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mTOMilestoneNoteResolver) MtoMilestoneID(ctx context.Context, obj *models.MTOMilestoneNote) (uuid.UUID, error) {
	return obj.MTOMilestoneID, nil
}
func (r *Resolver) MTOMilestoneNote() generated.MTOMilestoneNoteResolver {
	return &mTOMilestoneNoteResolver{r}
}
type mTOMilestoneNoteResolver struct{ *Resolver }
*/
