package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/cms-enterprise/mint-app/pkg/appcontext"
	"github.com/cms-enterprise/mint-app/pkg/graph/generated"
	"github.com/cms-enterprise/mint-app/pkg/models"
)

// MilestoneID is the resolver for the milestoneID field.
func (r *mTOMilestoneNoteResolver) MilestoneID(ctx context.Context, obj *models.MTOMilestoneNote) (uuid.UUID, error) {
	panic(fmt.Errorf("not implemented: MilestoneID - milestoneID"))
}

// CreateMTOMilestoneNote is the resolver for the createMTOMilestoneNote field.
func (r *mutationResolver) CreateMTOMilestoneNote(ctx context.Context, input models.MTOMilestoneNoteCreateInput) (*models.MTOMilestoneNote, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	store := r.store
	return CreateMTOMilestoneNote(ctx, logger, principal, store, input)
}

// UpdateMTOMilestoneNote is the resolver for the updateMTOMilestoneNote field.
func (r *mutationResolver) UpdateMTOMilestoneNote(ctx context.Context, input models.MTOMilestoneNoteUpdateInput) (*models.MTOMilestoneNote, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	store := r.store
	return UpdateMTOMilestoneNote(ctx, logger, principal, store, input)
}

// DeleteMTOMilestoneNote is the resolver for the deleteMTOMilestoneNote field.
func (r *mutationResolver) DeleteMTOMilestoneNote(ctx context.Context, id uuid.UUID) (bool, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	store := r.store
	err := DeleteMTOMilestoneNote(ctx, logger, principal, store, id)
	if err != nil {
		return false, err
	}
	return true, nil
}

// MilestoneID is the resolver for the milestoneID field.
func (r *mTOMilestoneNoteCreateInputResolver) MilestoneID(ctx context.Context, obj *models.MTOMilestoneNoteCreateInput, data uuid.UUID) error {
	panic(fmt.Errorf("not implemented: MilestoneID - milestoneID"))
}

// MTOMilestoneNote returns generated.MTOMilestoneNoteResolver implementation.
func (r *Resolver) MTOMilestoneNote() generated.MTOMilestoneNoteResolver {
	return &mTOMilestoneNoteResolver{r}
}

// MTOMilestoneNoteCreateInput returns generated.MTOMilestoneNoteCreateInputResolver implementation.
func (r *Resolver) MTOMilestoneNoteCreateInput() generated.MTOMilestoneNoteCreateInputResolver {
	return &mTOMilestoneNoteCreateInputResolver{r}
}

type mTOMilestoneNoteResolver struct{ *Resolver }
type mTOMilestoneNoteCreateInputResolver struct{ *Resolver }
