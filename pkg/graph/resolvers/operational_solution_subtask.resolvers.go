package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/google/uuid"

	"github.com/cmsgov/mint-app/pkg/appcontext"
	"github.com/cmsgov/mint-app/pkg/graph/model"
	"github.com/cmsgov/mint-app/pkg/models"
)

// CreateOperationalSolutionSubtasks is the resolver for the createOperationalSolutionSubtasks field.
func (r *mutationResolver) CreateOperationalSolutionSubtasks(ctx context.Context, solutionID uuid.UUID, inputs []*model.CreateOperationalSolutionSubtaskInput) ([]*models.OperationalSolutionSubtask, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)

	return OperationalSolutionSubtasksCreate(logger, r.store, inputs, solutionID, principal)
}

// UpdateOperationalSolutionSubtasks is the resolver for the updateOperationalSolutionSubtasks field.
func (r *mutationResolver) UpdateOperationalSolutionSubtasks(ctx context.Context, inputs []*model.UpdateOperationalSolutionSubtaskInput) ([]*models.OperationalSolutionSubtask, error) {
	principal := appcontext.Principal(ctx)
	logger := appcontext.ZLogger(ctx)

	return OperationalSolutionSubtasksUpdateByID(logger, r.store, principal, inputs)
}

// DeleteOperationalSolutionSubtask is the resolver for the deleteOperationalSolutionSubtask field.
func (r *mutationResolver) DeleteOperationalSolutionSubtask(ctx context.Context, id uuid.UUID) (int, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)

	return OperationalSolutionSubtaskDelete(logger, r.store, principal, id)
}
