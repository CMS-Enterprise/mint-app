package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/cms-enterprise/mint-app/pkg/appcontext"
	"github.com/cms-enterprise/mint-app/pkg/graph/generated"
	"github.com/cms-enterprise/mint-app/pkg/models"
	"github.com/google/uuid"
)

// Fields is the resolver for the fields field.
func (r *auditChangeResolver) Fields(ctx context.Context, obj *models.AuditChange) (map[string]interface{}, error) {
	return obj.Fields.ToInterface()
}

// AuditChanges is the resolver for the auditChanges field.
func (r *queryResolver) AuditChanges(ctx context.Context, tableName models.TableName, primaryKey uuid.UUID) ([]*models.AuditChange, error) {
	logger := appcontext.ZLogger(ctx)
	return AuditChangeCollectionByIDAndTable(logger, tableName, primaryKey, r.store)
}

// AuditChange returns generated.AuditChangeResolver implementation.
func (r *Resolver) AuditChange() generated.AuditChangeResolver { return &auditChangeResolver{r} }

type auditChangeResolver struct{ *Resolver }
