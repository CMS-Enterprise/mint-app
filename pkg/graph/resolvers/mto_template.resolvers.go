package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/cms-enterprise/mint-app/pkg/appcontext"
	"github.com/cms-enterprise/mint-app/pkg/graph/generated"
	"github.com/cms-enterprise/mint-app/pkg/graph/model"
	"github.com/cms-enterprise/mint-app/pkg/models"
	"github.com/google/uuid"
)

// Categories is the resolver for the categories field.
func (r *mTOTemplateResolver) Categories(ctx context.Context, obj *models.MTOTemplate) ([]*models.MTOTemplateCategory, error) {
	categories, err := MTOTemplateCategoryGetByTemplateIDLOADER(ctx, obj.ID)
	if err != nil {
		return nil, err
	}

	// remove all items from categories that have a non null parent id
	var topLevelCategories []*models.MTOTemplateCategory
	for _, category := range categories {
		if category.ParentID == nil {
			topLevelCategories = append(topLevelCategories, category)
		}
	}

	return topLevelCategories, nil
}

// Milestones is the resolver for the milestones field.
func (r *mTOTemplateResolver) Milestones(ctx context.Context, obj *models.MTOTemplate) ([]*models.MTOTemplateMilestone, error) {
	return MTOTemplateMilestoneGetByTemplateIDLOADER(ctx, obj.ID)
}

// Solutions is the resolver for the solutions field.
func (r *mTOTemplateResolver) Solutions(ctx context.Context, obj *models.MTOTemplate) ([]*models.MTOTemplateSolution, error) {
	return MTOTemplateSolutionGetByTemplateIDLOADER(ctx, obj.ID)
}

// SubCategories is the resolver for the subCategories field.
func (r *mTOTemplateCategoryResolver) SubCategories(ctx context.Context, obj *models.MTOTemplateCategory) ([]*models.MTOTemplateSubCategory, error) {
	return MTOTemplateSubCategoryGetByCategoryIDLOADER(ctx, obj.ID)
}

// Solutions is the resolver for the solutions field.
func (r *mTOTemplateMilestoneResolver) Solutions(ctx context.Context, obj *models.MTOTemplateMilestone) ([]*models.MTOTemplateSolution, error) {
	return MTOTemplateSolutionGetByMilestoneIDLOADER(ctx, obj.ID)
}

// Milestones is the resolver for the milestones field.
func (r *mTOTemplateSolutionResolver) Milestones(ctx context.Context, obj *models.MTOTemplateSolution) ([]*models.MTOTemplateMilestone, error) {
	return MTOTemplateMilestoneGetBySolutionIDLOADER(ctx, obj.ID)
}

// Milestones is the resolver for the milestones field.
func (r *mTOTemplateSubCategoryResolver) Milestones(ctx context.Context, obj *models.MTOTemplateSubCategory) ([]*models.MTOTemplateMilestone, error) {
	res, err := MTOTemplateMilestoneGetByCategoryIDLOADER(ctx, obj.ID)
	if err != nil {
		return nil, err
	}

	return res, nil
}

// CreateTemplateToMto is the resolver for the createTemplateToMTO field.
func (r *mutationResolver) CreateTemplateToMto(ctx context.Context, modelPlanID uuid.UUID, templateID uuid.UUID) (*model.ApplyTemplateResult, error) {
	logger := appcontext.ZLogger(ctx)
	principal := appcontext.Principal(ctx)
	return ApplyTemplateToMTO(ctx, r.store, logger, principal, r.emailService, r.emailTemplateService, r.addressBook, modelPlanID, templateID)
}

// MtoTemplates is the resolver for the mtoTemplates field.
func (r *queryResolver) MtoTemplates(ctx context.Context, keys []models.MTOTemplateKey) ([]*models.MTOTemplate, error) {
	return MTOTemplateGetByKeysLOADER(ctx, keys)
}

// MtoTemplate is the resolver for the mtoTemplate field.
func (r *queryResolver) MtoTemplate(ctx context.Context, id *uuid.UUID, key *models.MTOTemplateKey) (*models.MTOTemplate, error) {
	return MTOTemplateGetByIDOrKeyLOADER(ctx, id, key)
}

// MTOTemplate returns generated.MTOTemplateResolver implementation.
func (r *Resolver) MTOTemplate() generated.MTOTemplateResolver { return &mTOTemplateResolver{r} }

// MTOTemplateCategory returns generated.MTOTemplateCategoryResolver implementation.
func (r *Resolver) MTOTemplateCategory() generated.MTOTemplateCategoryResolver {
	return &mTOTemplateCategoryResolver{r}
}

// MTOTemplateMilestone returns generated.MTOTemplateMilestoneResolver implementation.
func (r *Resolver) MTOTemplateMilestone() generated.MTOTemplateMilestoneResolver {
	return &mTOTemplateMilestoneResolver{r}
}

// MTOTemplateSolution returns generated.MTOTemplateSolutionResolver implementation.
func (r *Resolver) MTOTemplateSolution() generated.MTOTemplateSolutionResolver {
	return &mTOTemplateSolutionResolver{r}
}

// MTOTemplateSubCategory returns generated.MTOTemplateSubCategoryResolver implementation.
func (r *Resolver) MTOTemplateSubCategory() generated.MTOTemplateSubCategoryResolver {
	return &mTOTemplateSubCategoryResolver{r}
}

type mTOTemplateResolver struct{ *Resolver }
type mTOTemplateCategoryResolver struct{ *Resolver }
type mTOTemplateMilestoneResolver struct{ *Resolver }
type mTOTemplateSolutionResolver struct{ *Resolver }
type mTOTemplateSubCategoryResolver struct{ *Resolver }
