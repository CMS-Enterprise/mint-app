package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"time"

	"github.com/google/uuid"

	"github.com/cms-enterprise/mint-app/pkg/appcontext"
	"github.com/cms-enterprise/mint-app/pkg/graph/generated"
	"github.com/cms-enterprise/mint-app/pkg/models"
)

// UpdateTimeline is the resolver for the updateTimeline field.
func (r *mutationResolver) UpdateTimeline(ctx context.Context, id uuid.UUID, changes map[string]interface{}) (*models.Timeline, error) {
	principal := appcontext.Principal(ctx)
	logger := appcontext.ZLogger(ctx)

	return UpdateTimeline(
		ctx,
		logger,
		id,
		changes,
		principal,
		r.store,
		r.emailService,
		r.emailTemplateService,
		r.addressBook,
	)
}

// UpcomingTimelineDate is the resolver for the upcomingTimelineDate field.
func (r *timelineResolver) UpcomingTimelineDate(ctx context.Context, obj *models.Timeline) (*time.Time, error) {
	return ModelPlanUpcomingTimelineDate(ctx, obj.ModelPlanID)
}

// Timeline returns generated.TimelineResolver implementation.
func (r *Resolver) Timeline() generated.TimelineResolver { return &timelineResolver{r} }

type timelineResolver struct{ *Resolver }
