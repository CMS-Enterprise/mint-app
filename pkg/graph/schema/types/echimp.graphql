type EChimpCR {
  crNumber: String!
  versionNum: String!
  initiator: String
  firstName: String
  lastName: String
  title: String
  sensitiveFlag: Boolean
  implementationDate: String
  """
  CRSummary is rich text in HTML format, in practice, the data is not tagged.
  We use the TaggedContent type as we don't have another use for a plain HTML type.
  """
  crSummary: TaggedContent 
  crStatus: String
  emergencyCrFlag: Boolean
  relatedCrNumbers: String
  relatedCrTdlNumbers: String
  associatedModelUids: UUID
}

type EChimpTDL {
  tdlNumber: String!
  versionNum: String!
  initiator: String
  firstName: String
  lastName: String
  title: String
  issuedDate: String
  status: String
  associatedModelUids: UUID
}


# """
# EChimpCRAndTDLS is a type that represents CRS and TDLS so they can be returned together in graphql
# """
union EChimpCRAndTDLS = EChimpCR  | EChimpTDL




extend type Query {
  echimpCR(id: String!): EChimpCR!
  echimpCRs: [EChimpCR!]!
  echimpTDLs: [EChimpTDL!]!
  echimpTDL(id: String!): EChimpTDL!
  echimpCRAndTDLS: [EChimpCRAndTDLS!]!
}