type PossibleOperationalSolution {
  id: Int!
  name: String!
  key: OperationalSolutionKey!
  treatAsOther: Boolean!
  pointsOfContact: [PossibleOperationalSolutionContact!]!
  filterView: ModelViewFilter

  createdBy: UUID!
  createdByUserAccount: UserAccount!
  createdDts: Time!
  modifiedBy: UUID
  modifiedByUserAccount: UserAccount
  modifiedDts: Time
}

extend type Query {
  possibleOperationalSolutions: [PossibleOperationalSolution!]!
  @hasAnyRole(roles: [MINT_USER, MINT_MAC])
}

extend type Mutation {
  createOperationalSolution(operationalNeedID: UUID!, solutionType: OperationalSolutionKey, changes: OperationalSolutionChanges!): OperationalSolution!
  @hasRole(role: MINT_USER)

  updateOperationalSolution(id: UUID!, changes: OperationalSolutionChanges!): OperationalSolution!
  @hasRole(role: MINT_USER)
}