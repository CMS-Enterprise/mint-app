enum ChangeType {
  ADDED
  UPDATED
  REMOVED
}

enum ActionType {
  """
  A normal flow action
  """
  NORMAL

  """
  An administrative action
  """
  ADMIN
}

type TaskListSectionLockStatusChanged {
  changeType: ChangeType!
  lockStatus: TaskListSectionLockStatus!
  actionType: ActionType!
}

type TaskListSectionLockStatus {
  modelPlanID: UUID!
  section: TaskListSection!
  lockedByUserAccount: UserAccount!
  isAssessment: Boolean!
}

extend type Query {
  taskListSectionLocks(modelPlanID: UUID!): [TaskListSectionLockStatus!]!
  @hasAnyRole(roles: [MINT_USER, MINT_MAC])
}

extend type Mutation {
  lockTaskListSection(modelPlanID: UUID!, section: TaskListSection!): Boolean!
  @hasRole(role: MINT_USER)

  unlockTaskListSection(modelPlanID: UUID!, section: TaskListSection!): Boolean!
  @hasRole(role: MINT_USER)

  unlockAllTaskListSections(modelPlanID: UUID!): [TaskListSectionLockStatus!]!
  @hasRole(role: MINT_ASSESSMENT)
}

type Subscription {
  onTaskListSectionLocksChanged(modelPlanID: UUID!): TaskListSectionLockStatusChanged!
  @hasRole(role: MINT_USER)

  onLockTaskListSectionContext(modelPlanID: UUID!): TaskListSectionLockStatusChanged!
  @hasRole(role: MINT_USER)
}