enum ExisitingModelLinkFieldType {
  GEN_CHAR_RESEMBLES_EXISTING_MODEL_WHICH
  GEN_CHAR_PARTICIPATION_EXISTING_MODEL_WHICH
}

"""
LinkedExistingModel is a union type that returns either an Existing Model, or a Model plan from the database
"""
union LinkedExistingModel = ExistingModel | ModelPlan

type ExistingModelLinks {
  links: [ExistingModelLink!]!
  fieldName: ExisitingModelLinkFieldType!
  modelPlanID: UUID!
  names: [String!]!
}

type ExistingModelLink {
  id: UUID
  modelPlanID: UUID!
  existingModelID: Int
  currentModelPlanID: UUID
  fieldName: ExisitingModelLinkFieldType!
  model: LinkedExistingModel!

  createdBy: UUID!
  createdByUserAccount: UserAccount!
  createdDts: Time!
  modifiedBy: UUID
  modifiedByUserAccount: UserAccount
  modifiedDts: Time
}

extend type Query {
  existingModelLink(id: UUID!): ExistingModelLink!
    @hasAnyRole(roles: [MINT_USER, MINT_MAC])
}

extend type Mutation {
  """
  This will update linked existing models, and relatede model plans for given model plan and fieldName.
  The fieldName allows it so you can create links for multiple sections of the model plan
  """
  updateExistingModelLinks(
    modelPlanID: UUID!
    fieldName: ExisitingModelLinkFieldType!
    existingModelIDs: [Int!]
    currentModelPlanIDs: [UUID!]
  ): ExistingModelLinks! @hasRole(role: MINT_USER)
}
