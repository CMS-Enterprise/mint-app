enum ViewCustomizationType {
  MY_MODEL_PLANS
  ALL_MODEL_PLANS
  FOLLOWED_MODELS
  MODELS_WITH_CR_TDL
  MODELS_BY_SOLUTION
  MODELS_APPROACHING_CLEARANCE
  MODELS_BY_GROUP
  MODELS_BY_STATUS
}

enum ComponentGroup {
  CCMI_PCMG
  CCMI_PPG
  CCMI_SCMG
  CCMI_SPHG
  CCMI_TBD
  CCSQ
  CMCS
  CM
  FCHCO
  CPI
}

enum ModelPlanStatusGroup {
  PRE_CLEARANCE
  IN_CLEARANCE
  CLEARED
  ANNOUNCED
  ACTIVE
  ENDED
  CANCELED
  PAUSED
}

type UserViewCustomization {
  id: UUID!
  userId: UUID!
  userAccount: UserAccount!
  viewCustomization: [ViewCustomizationType!]!
  solutions: [MTOCommonSolutionKey!]!
  componentGroups: [ComponentGroup!]!
  createdBy: UUID!
  createdByUserAccount: UserAccount!
  createdDts: Time!
  modifiedBy: UUID
  modifiedByUserAccount: UserAccount
  modifiedDts: Time
}

input UserViewCustomizationChanges @goModel(model: "map[string]interface{}") {
  viewCustomization: [ViewCustomizationType!]
  solutions: [MTOCommonSolutionKey!]
  componentGroups: [ComponentGroup!]
}

extend type Query {
  userViewCustomization: UserViewCustomization!
    @hasAnyRole(roles: [MINT_USER, MINT_MAC])
}

extend type Mutation {
  updateUserViewCustomization(
    changes: UserViewCustomizationChanges!
  ): UserViewCustomization! @hasAnyRole(roles: [MINT_USER, MINT_MAC])
}
