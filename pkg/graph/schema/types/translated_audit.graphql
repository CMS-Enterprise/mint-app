"""
TranslatedAuditMetaData is a type that represents all the data that can be captured in a Translated audit
"""
union TranslatedAuditMetaData = TranslatedAuditMetaBaseStruct 


type TranslatedAuditMetaBaseStruct {
    version: Int!
    tableName: String

}

enum DatabaseOperation {
    INSERT
    UPDATE
    DELETE
    TRUNCATE
}

"""
TranslatedAudit represent a point in time change made to part of application.
"""
type TranslatedAudit {
    id: UUID!
    modelName: String!
    
    tableID: Int!
    tableName: String!
    primaryKey: UUID!
    
    date: Time!
    action: DatabaseOperation!


    actorID: UUID!
    actorName: String!  #Changes: (Serialization) This could live in the actor account, but this is meant to facilitate search
    changeID: Int! # This points to a specific audit change.
    metaData: TranslatedAuditMetaData!

    """
    The specific fields that were changed by the transaction
    """
    translatedFields: [TranslatedAuditField!]!


    createdBy: UUID!
    createdByUserAccount: UserAccount!
    createdDts: Time!
    modifiedBy: UUID
    modifiedByUserAccount: UserAccount
    modifiedDts: Time
}
enum AuditFieldChangeType {
    ANSWERED
    UPDATED
    REMOVED
}

type TranslatedAuditField {
    id: UUID!
    translatedAuditID: UUID!

    """
    This represents whether a field was answered, updated, or had the answer removed
    """
    changeType: AuditFieldChangeType! 

    fieldName: String!
    fieldNameTranslated: String!
    old: Any 
    oldTranslated: Any
    new: Any
    newTranslated: Any

    # Changes: (Structure) Decide if this field is needed here, or just on the parent level... Also, consider if it makes sense to leave this nullable?
    metaData: TranslatedAuditFieldMetaData!

    createdBy: UUID!
    createdByUserAccount: UserAccount!
    createdDts: Time!
    modifiedBy: UUID
    modifiedByUserAccount: UserAccount
    modifiedDts: Time
}

union TranslatedAuditFieldMetaData = TranslatedAuditFieldMetaBaseStruct 


type TranslatedAuditFieldMetaBaseStruct {
    version: Int!
}

extend type Query {
    translatedAuditCollection(modelPlanID: UUID!): [TranslatedAudit!]
    @hasAnyRole(roles: [MINT_USER, MINT_MAC])
}  