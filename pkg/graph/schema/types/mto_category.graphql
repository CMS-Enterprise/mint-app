
# TODO: Add a way to determine order of Categories and subcategories
type MTOCategory {
  # DB Fields
  id: UUID! # TODO: If we handle "Uncategorized" as a real category, maybe it won't actually have an ID?
  name: String!


  # Custom Resolvers
  isUncategorized: Boolean!
  subCategories: [MTOSubcategory!]!
}

type MTOSubcategory {
  # DB Fields
  id: UUID! # TODO: If we handle "Uncategorized" as a real category, maybe it won't actually have an ID?
  name: String!

  # Custom Resolvers
  isUncategorized: Boolean!
  milestones: [Milestone!]!
}

extend type Mutation {
  """
  Allows you to create an MTOCategory or Subcategory if you provide a parent ID. 
  Note, the parent must belong to the same model plan, or this will return an error
  """
  createMTOCategory(modelPlanID: UUID!, name: String!, parentID: UUID): MTOCategory!
  @hasRole(role: MINT_USER)
  """
  Allows you to rename an MTO category. Notably, name is the only field that can be updated.
  You cannot have a duplicate name per model plan and parent. If the change makes a conflict, this will error.
  """
  updateMTOCategory(id: UUID!, name: String!): MTOCategory!
  @hasRole(role: MINT_USER)
}