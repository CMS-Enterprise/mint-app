

"""
The current user's Launch Darkly key
"""
type LaunchDarklySettings {
  userKey: String!
  signedHash: String!
}

"""
The current user of the application
"""
type CurrentUser {
  launchDarkly: LaunchDarklySettings!
}
"""
UUIDs are represented using 36 ASCII characters, for example B0511859-ADE6-4A67-8969-16EC280C0E1A
"""
scalar UUID
"""
Time values are represented as strings using RFC3339 format, for example 2019-10-12T07:20:50G.52Z
"""
scalar Time

"""
ModelPlan represent the data point for plans about a model. It is the central data type in the application
"""
type ModelPlan {
  id: UUID!
  modelName: String!
  modelCategory: ModelCategory
  cmsCenters: [CMSCenter!]!
  cmsOther: String
  cmmiGroups: [CMMIGroup!]!
  archived: Boolean!
  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
  basics: PlanBasics!
  milestones: PlanMilestones!
  generalCharacteristics: PlanGeneralCharacteristics!
  participantsAndProviders: PlanParticipantsAndProviders!
  beneficiaries: PlanBeneficiaries!
  opsEvalAndLearning: PlanOpsEvalAndLearning!
  collaborators: [PlanCollaborator!]!
  documents: [PlanDocument!]!
  discussions: [PlanDiscussion!]!
  itTools: PlanITTools!
  status: ModelStatus!
}

"""
ModelPlanChanges represents the possible changes you can make to a model plan when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input ModelPlanChanges @goModel(model: "map[string]interface{}") {
  modelName: String
  modelCategory: ModelCategory
  cmsCenters: [CMSCenter!]
  cmsOther: String
  cmmiGroups: [CMMIGroup!]
  someNumbers: [Int!]
  archived: Boolean
  status: ModelStatus
}

"""
PlanCollaborator represents a collaborator on a plan
"""
type PlanCollaborator {
  id: UUID!
  modelPlanID: UUID!
  euaUserID: String!
  fullName: String!
  teamRole: TeamRole!
  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
}
"""
ExistingModel represents a model that already exists outside of the scope of MINT
"""
type ExistingModel {
  id: String
  modelName: String
  stage: String!
  numberOfParticipants: String
  category: String
  authority: String
  description: String
  numberOfBeneficiariesImpacted: Int
  numberOfPhysiciansImpacted: Int
  dateBegan: Time
  dateEnded: Time
  states: String
  keywords: String
  url: String
  displayModelSummary: Boolean
  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
}

"""
PlanCollaboratorCreateInput represents the data required to create a collaborator on a plan
"""
input PlanCollaboratorCreateInput {
  modelPlanID: UUID!
  euaUserID: String!
  fullName: String!
  teamRole: TeamRole!
}

"""
Input associated with a document to be uploaded
"""
input GeneratePresignedUploadURLInput {
  fileName: String!
  mimeType: String!
  size: Int!
}

"""
URL generated for a document to be uploaded
"""
type GeneratePresignedUploadURLPayload {
  url: String
}

"""
PlanDocument represents a document on a plan
"""
type PlanDocument {
  id: UUID!
  modelPlanID: UUID!
  fileType: String!
  bucket: String!
  fileKey: String!
  virusScanned: Boolean!
  virusClean: Boolean!
  fileName: String!
  fileSize: Int!
  documentType: DocumentType!
  otherType: String
  optionalNotes: String
  deletedAt: Time
  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
}

"""
PlanDocumentInput represents the data required to create, modify, or delete a document on a plan
"""
input PlanDocumentInput {
  id: UUID
  modelPlanID: UUID!
  documentParameters: PlanDocumentParameters!
  url: String
}

"""
PlanDocumentCreateParameters represents the specific data required to create or modify a document on a plan
"""
input PlanDocumentParameters {
  fileName: String
  fileSize: Int!
  fileType: String
  documentType: DocumentType
  otherTypeDescription: String
  optionalNotes: String
}

"""
PlanDocumentPayload represents the response to a document request
"""
type PlanDocumentPayload {
  document: PlanDocument
  presignedURL: String
}

"""
Represents plan basics
"""
type PlanBasics {
  id: UUID!
  modelPlanID: UUID!

  modelType: ModelType
  problem: String
  goal: String
  testInterventions: String
  note: String
  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
  status: TaskStatus!
}

"""
PlanBasicsChanges represents the possible changes you can make to a Plan Basics object when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input PlanBasicsChanges @goModel(model: "map[string]interface{}") {
  modelType: ModelType
  problem: String
  goal: String
  testInterventions: String
  note: String
}

"""
Represents a person response from CEDAR LDAP
"""
type UserInfo {
  commonName: String!
  email: String!
  euaUserId: String!
}
"""
Represents plan milestones
"""
type PlanMilestones {
  id: UUID!
  modelPlanID: UUID!

  completeICIP: Time
  clearanceStarts: Time
  clearanceEnds: Time

  announced: Time

  applicationsStart: Time
  applicationsEnd: Time

  performancePeriodStarts: Time
  performancePeriodEnds: Time
  wrapUpEnds: Time
  highLevelNote: String

  phasedIn: Boolean
  phasedInNote: String


  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
  status: TaskStatus!
}

"""
PlanMilestoneChanges represents the possible changes you can make to a Plan Milestones object when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input PlanMilestoneChanges @goModel(model: "map[string]interface{}") {
  completeICIP: Time
  clearanceStarts: Time
  clearanceEnds: Time

  announced: Time

  applicationsStart: Time
  applicationsEnd: Time

  performancePeriodStarts: Time
  performancePeriodEnds: Time
  wrapUpEnds: Time
  highLevelNote: String

  phasedIn: Boolean
  phasedInNote: String
}

"""
PlanDiscussion represents plan discussion
"""
type PlanDiscussion  {
	id:          UUID!
	modelPlanID: UUID!
	content: String
	status: DiscussionStatus!
  replies: [DiscussionReply!]!

  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
}

"""
PlanDiscussionCreateInput represents the necessary fields to create a plan discussion
"""
input PlanDiscussionCreateInput {
  modelPlanID: UUID!
  content: String!
}

"""
PlanDiscussionChanges represents the possible changes you can make to a plan discussion when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input PlanDiscussionChanges @goModel(model: "map[string]interface{}") {
  content: String
  status: DiscussionStatus
}

"""
DiscussionReply represents a discussion reply
"""
type DiscussionReply  {
	id: UUID!
	discussionID: UUID!
	content: String
	resolution: Boolean

	createdBy: String!
	createdDts: Time!
	modifiedBy: String
	modifiedDts: Time
}

"""
DiscussionReplyCreateInput represents the necessary fields to create a discussion reply
"""
input DiscussionReplyCreateInput {
  discussionID: UUID!
  content: String!
  resolution: Boolean! = false
}

"""
DiscussionReplyChanges represents the possible changes you can make to a discussion reply when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input DiscussionReplyChanges @goModel(model: "map[string]interface{}") {
  content: String
  resolution: Boolean
}

"""
PlanGeneralCharacteristics represents a plan general characteristics object
"""
type PlanGeneralCharacteristics {
  id: UUID!
  modelPlanID: UUID!

  # Page 1
  isNewModel: Boolean
  existingModel: String
  resemblesExistingModel: Boolean
  resemblesExistingModelWhich: [String!]!
  resemblesExistingModelHow: String
  resemblesExistingModelNote: String
  hasComponentsOrTracks: Boolean
  hasComponentsOrTracksDiffer: String
  hasComponentsOrTracksNote: String

  # Page 2
  alternativePaymentModel: Boolean
  alternativePaymentModelTypes: [AlternativePaymentModelType!]!
  alternativePaymentModelNote: String
  keyCharacteristics: [KeyCharacteristic!]!
  keyCharacteristicsOther: String
  keyCharacteristicsNote: String
  collectPlanBids: Boolean
  collectPlanBidsNote: String
  managePartCDEnrollment: Boolean
  managePartCDEnrollmentNote: String
  planContactUpdated: Boolean
  planContactUpdatedNote: String

  # Page 3
  careCoordinationInvolved: Boolean
  careCoordinationInvolvedDescription: String
  careCoordinationInvolvedNote: String
  additionalServicesInvolved: Boolean
  additionalServicesInvolvedDescription: String
  additionalServicesInvolvedNote: String
  communityPartnersInvolved: Boolean
  communityPartnersInvolvedDescription: String
  communityPartnersInvolvedNote: String

  # Page 4
  geographiesTargeted: Boolean
  geographiesTargetedTypes: [GeographyType!]!
  geographiesTargetedTypesOther: String
  geographiesTargetedAppliedTo: [GeographyApplication!]!
  geographiesTargetedAppliedToOther: String
  geographiesTargetedNote: String
  participationOptions: Boolean
  participationOptionsNote: String
  agreementTypes: [AgreementType!]!
  agreementTypesOther: String
  multiplePatricipationAgreementsNeeded: Boolean
  multiplePatricipationAgreementsNeededNote: String

  # Page 5
  rulemakingRequired: Boolean
  rulemakingRequiredDescription: String
  rulemakingRequiredNote: String
  authorityAllowances: [AuthorityAllowance!]!
  authorityAllowancesOther: String
  authorityAllowancesNote: String
  waiversRequired: Boolean
  waiversRequiredTypes: [WaiverType!]!
  waiversRequiredNote: String

  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
  status: TaskStatus!
}

"""
PlanGeneralCharacteristicsChanges represents the possible changes you can make to a
general characteristics object when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input PlanGeneralCharacteristicsChanges @goModel(model: "map[string]interface{}") {
  # Page 1
  isNewModel: Boolean
  existingModel: String
  resemblesExistingModel: Boolean
  resemblesExistingModelWhich: [String!]
  resemblesExistingModelHow: String
  resemblesExistingModelNote: String
  hasComponentsOrTracks: Boolean
  hasComponentsOrTracksDiffer: String
  hasComponentsOrTracksNote: String

  # Page 2
  alternativePaymentModel: Boolean
  alternativePaymentModelTypes: [AlternativePaymentModelType!]
  alternativePaymentModelNote: String
  keyCharacteristics: [KeyCharacteristic!]
  keyCharacteristicsOther: String
  keyCharacteristicsNote: String
  collectPlanBids: Boolean
  collectPlanBidsNote: String
  managePartCDEnrollment: Boolean
  managePartCDEnrollmentNote: String
  planContactUpdated: Boolean
  planContactUpdatedNote: String

  # Page 3
  careCoordinationInvolved: Boolean
  careCoordinationInvolvedDescription: String
  careCoordinationInvolvedNote: String
  additionalServicesInvolved: Boolean
  additionalServicesInvolvedDescription: String
  additionalServicesInvolvedNote: String
  communityPartnersInvolved: Boolean
  communityPartnersInvolvedDescription: String
  communityPartnersInvolvedNote: String

  # Page 4
  geographiesTargeted: Boolean
  geographiesTargetedTypes: [GeographyType!]
  geographiesTargetedTypesOther: String
  geographiesTargetedAppliedTo: [GeographyApplication!]
  geographiesTargetedAppliedToOther: String
  geographiesTargetedNote: String
  participationOptions: Boolean
  participationOptionsNote: String
  agreementTypes: [AgreementType!]
  agreementTypesOther: String
  multiplePatricipationAgreementsNeeded: Boolean
  multiplePatricipationAgreementsNeededNote: String

  # Page 5
  rulemakingRequired: Boolean
  rulemakingRequiredDescription: String
  rulemakingRequiredNote: String
  authorityAllowances: [AuthorityAllowance!]
  authorityAllowancesOther: String
  authorityAllowancesNote: String
  waiversRequired: Boolean
  waiversRequiredTypes: [WaiverType!]
  waiversRequiredNote: String
}

"""
Plan Beneficiaries represents the the beneficiaries section of the task list
"""

type PlanBeneficiaries {
  id: UUID!
  modelPlanID: UUID!
  #Page 1
  beneficiaries: [BeneficiariesType!]!
  beneficiariesOther: String
  beneficiariesNote: String
  treatDualElligibleDifferent: TriStateAnswer
  treatDualElligibleDifferentHow: String
  treatDualElligibleDifferentNote: String
  excludeCertainCharacteristics: TriStateAnswer
  excludeCertainCharacteristicsCriteria: String
  excludeCertainCharacteristicsNote: String
  #Page 2
  numberPeopleImpacted: Int
  estimateConfidence: ConfidenceType
  confidenceNote: String
  beneficiarySelectionMethod: [SelectionMethodType!]!
  beneficiarySelectionOther: String
  beneficiarySelectionNote: String
  #Page 3
  beneficiarySelectionFrequency: FrequencyType
  beneficiarySelectionFrequencyOther: String
  beneficiarySelectionFrequencyNote: String
  beneficiaryOverlap: OverlapType
  beneficiaryOverlapNote: String
  precedenceRules: String

  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
  status: TaskStatus!
}

input PlanBeneficiariesChanges @goModel(model: "map[string]interface{}") {
  #Page 1
  beneficiaries: [BeneficiariesType!]
  beneficiariesOther: String
  beneficiariesNote: String
  treatDualElligibleDifferent: TriStateAnswer
  treatDualElligibleDifferentHow: String
  treatDualElligibleDifferentNote: String
  excludeCertainCharacteristics: TriStateAnswer
  excludeCertainCharacteristicsCriteria: String
  excludeCertainCharacteristicsNote: String
  #Page 2
  numberPeopleImpacted: Int
  estimateConfidence: ConfidenceType
  confidenceNote: String
  beneficiarySelectionMethod: [SelectionMethodType!]
  beneficiarySelectionOther: String
  beneficiarySelectionNote: String
  #Page 3
  beneficiarySelectionFrequency: FrequencyType
  beneficiarySelectionFrequencyOther: String
  beneficiarySelectionFrequencyNote: String
  beneficiaryOverlap: OverlapType
  beneficiaryOverlapNote: String
  precedenceRules: String

}

"""
PlanParticipantsAndProviders is the task list section that deals with information regarding all Providers and Participants
"""
type PlanParticipantsAndProviders {
  id: UUID!
  modelPlanID: UUID!

  #Page 1
  participants:                      [ParticipantsType!]!
  medicareProviderType:              String       
  statesEngagement:                  String       
  participantsOther:                 String       
  participantsNote:                  String       
  participantsCurrentlyInModels:     Boolean       
  participantsCurrentlyInModelsNote: String       
  modelApplicationLevel:             String       

  #Page 2
  expectedNumberOfParticipants: Int             
  estimateConfidence:           ConfidenceType 
  confidenceNote:               String         
  recruitmentMethod:            RecruitmentType
  recruitmentOther:             String         
  recruitmentNote:              String         
  selectionMethod:              [ParticipantSelectionType!]!
  selectionOther:               String         
  selectionNote:                String         

  #Page 3
  communicationMethod:   [ParticipantCommunicationType!]!
  communicationMethodOther:   String
  communicationNote:     String             
  participantAssumeRisk: Boolean             
  riskType:              ParticipantRiskType
  riskOther:             String             
  riskNote:              String             
  willRiskChange:        Boolean             
  willRiskChangeNote:    String             

  #Page 4
  coordinateWork:          Boolean       
  coordinateWorkNote:      String       
  gainsharePayments:       Boolean       
  gainsharePaymentsTrack: Boolean       
  gainsharePaymentsNote:   String       
  participantsIds:         [ParticipantsIDType!]!
  participantsIdsOther:    String       
  participantsIDSNote:     String       

  #Page 5
  providerAdditionFrequency:      FrequencyType
  providerAdditionFrequencyOther: String       
  providerAdditionFrequencyNote:  String       
  providerAddMethod:              [ProviderAddType!]!
  providerAddMethodOther:         String       
  providerAddMethodNote:          String       
  providerLeaveMethod:            [ProviderLeaveType!]!
  providerLeaveMethodOther:       String       
  providerLeaveMethodNote:        String       
  providerOverlap:                OverlapType  
  providerOverlapHierarchy:       String       
  providerOverlapNote:            String       


  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
  status: TaskStatus!

}

"""
PlanParticipantsAndProvidersChanges represents the possible changes you can make to a
providers and participants object when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input PlanParticipantsAndProvidersChanges @goModel(model: "map[string]interface{}") {
  #Page 1
  participants:                      [ParticipantsType!]
  medicareProviderType:              String       
  statesEngagement:                  String       
  participantsOther:                 String       
  participantsNote:                  String       
  participantsCurrentlyInModels:     Boolean       
  participantsCurrentlyInModelsNote: String       
  modelApplicationLevel:             String       

  #Page 2
  expectedNumberOfParticipants: Int             
  estimateConfidence:           ConfidenceType 
  confidenceNote:               String         
  recruitmentMethod:            RecruitmentType
  recruitmentOther:             String         
  recruitmentNote:              String         
  selectionMethod:              [ParticipantSelectionType!]
  selectionOther:               String         
  selectionNote:                String         

  #Page 3
  communicationMethod:   [ParticipantCommunicationType!]
  communicationMethodOther:   String
  communicationNote:     String             
  participantAssumeRisk: Boolean             
  riskType:              ParticipantRiskType
  riskOther:             String             
  riskNote:              String             
  willRiskChange:        Boolean             
  willRiskChangeNote:    String             

  #Page 4
  coordinateWork:          Boolean       
  coordinateWorkNote:      String       
  gainsharePayments:       Boolean       
  gainsharePaymentsTrack: Boolean       
  gainsharePaymentsNote:   String       
  participantsIds:         [ParticipantsIDType!]
  participantsIdsOther:    String       
  participantsIDSNote:     String       

  #Page 5
  providerAdditionFrequency:      FrequencyType
  providerAdditionFrequencyOther: String       
  providerAdditionFrequencyNote:  String       
  providerAddMethod:              [ProviderAddType!]
  providerAddMethodOther:         String       
  providerAddMethodNote:          String       
  providerLeaveMethod:            [ProviderLeaveType!]
  providerLeaveMethodOther:       String       
  providerLeaveMethodNote:        String       
  providerOverlap:                OverlapType  
  providerOverlapHierarchy:       String       
  providerOverlapNote:            String     

}

""""
PlanITTools is the task list section that deals with information regarding IT Tools
"""
type PlanITTools {
  id: UUID!
  modelPlanID: UUID!

  #Page 1
  gcPartCD: [GcPartCDType!]!
  gcPartCDOther: String
  gcPartCDNote: String
  gcCollectBids: [GcCollectBidsType!]!
  gcCollectBidsOther: String
  gcCollectBidsNote: String
  gcUpdateContract: [GcUpdateContractType!]!
  gcUpdateContractOther: String
  gcUpdateContractNote: String
  #Page 2
  ppToAdvertise: [PpToAdvertiseType!]!
  ppToAdvertiseOther: String
  ppToAdvertiseNote: String
  ppCollectScoreReview: [PpCollectScoreReviewType!]!
  ppCollectScoreReviewOther: String
  ppCollectScoreReviewNote: String
  ppAppSupportContractor: [PpAppSupportContractorType!]!
  ppAppSupportContractorOther: String
  ppAppSupportContractorNote: String
  #Page 3
  ppCommunicateWithParticipant: [PpCommunicateWithParticipantType!]!
  ppCommunicateWithParticipantOther: String
  ppCommunicateWithParticipantNote: String
  ppManageProviderOverlap: [PpManageProviderOverlapType!]!
  ppManageProviderOverlapOther: String
  ppManageProviderOverlapNote: String
  bManageBeneficiaryOverlap: [BManageBeneficiaryOverlapType!]!
  bManageBeneficiaryOverlapOther: String
  bManageBeneficiaryOverlapNote: String
  #Page 4
  oelHelpdeskSupport: [OelHelpdeskSupportType!]!
  oelHelpdeskSupportOther: String
  oelHelpdeskSupportNote: String
  oelManageAco: [OelManageAcoType!]!
  oelManageAcoOther: String
  oelManageAcoNote: String
  #Page 5
  oelPerformanceBenchmark: [OelPerformanceBenchmarkType!]!
  oelPerformanceBenchmarkOther: String
  oelPerformanceBenchmarkNote: String
  oelProcessAppeals: [OelProcessAppealsType!]!
  oelProcessAppealsOther: String
  oelProcessAppealsNote: String
  oelEvaluationContractor: [OelEvaluationContractorType!]!
  oelEvaluationContractorOther: String
  oelEvaluationContractorNote: String
  #Page 6
  oelCollectData: [OelCollectDataType!]!
  oelCollectDataOther: String
  oelCollectDataNote: String
  oelObtainData: [OelObtainDataType!]!
  oelObtainDataOther: String
  oelObtainDataNote: String
  oelClaimsBasedMeasures: [OelClaimsBasedMeasuresType!]!
  oelClaimsBasedMeasuresOther: String
  oelClaimsBasedMeasuresNote: String
  #Page 7
  oelQualityScores: [OelQualityScoresType!]!
  oelQualityScoresOther: String
  oelQualityScoresNote: String
  oelSendReports: [OelSendReportsType!]!
  oelSendReportsOther: String
  oelSendReportsNote: String
  oelLearningContractor: [OelLearningContractorType!]!
  oelLearningContractorOther: String
  oelLearningContractorNote: String
  #Page 8 
  oelParticipantCollaboration: [OelParticipantCollaborationType!]!
  oelParticipantCollaborationOther: String
  oelParticipantCollaborationNote: String
  oelEducateBeneficiaries: [OelEducateBeneficiariesType!]!
  oelEducateBeneficiariesOther: String
  oelEducateBeneficiariesNote: String
  pMakeClaimsPayments: [PMakeClaimsPaymentsType!]!
  pMakeClaimsPaymentsOther: String
  pMakeClaimsPaymentsNote: String
  #Page 9
  pInformFfs: [PInformFfsType!]!
  pInformFfsOther: String
  pInformFfsNote: String
  pNonClaimsBasedPayments: [PNonClaimsBasedPaymentsType!]!
  pNonClaimsBasedPaymentsOther: String
  pNonClaimsBasedPaymentsNote: String
  pSharedSavingsPlan: [PSharedSavingsPlanType!]!
  pSharedSavingsPlanOther: String
  pSharedSavingsPlanNote: String
  #Page 10
  pRecoverPayments: [PRecoverPaymentsType!]!
  pRecoverPaymentsOther: String
  pRecoverPaymentsNote: String

  createdBy: String!
  createdDts: Time!
  modifiedBy: String
  modifiedDts: Time
  status: TaskStatus!
}


input PlanITToolsChanges @goModel(model: "map[string]interface{}") {

  #Page 1
  gcPartCD: [GcPartCDType!]
  gcPartCDOther: String
  gcPartCDNote: String
  gcCollectBids: [GcCollectBidsType!]
  gcCollectBidsOther: String
  gcCollectBidsNote: String
  gcUpdateContract: [GcUpdateContractType!]
  gcUpdateContractOther: String
  gcUpdateContractNote: String
  #Page 2
  ppToAdvertise: [PpToAdvertiseType!]
  ppToAdvertiseOther: String
  ppToAdvertiseNote: String
  ppCollectScoreReview: [PpCollectScoreReviewType!]
  ppCollectScoreReviewOther: String
  ppCollectScoreReviewNote: String
  ppAppSupportContractor: [PpAppSupportContractorType!]
  ppAppSupportContractorOther: String
  ppAppSupportContractorNote: String
  #Page 3
  ppCommunicateWithParticipant: [PpCommunicateWithParticipantType!]
  ppCommunicateWithParticipantOther: String
  ppCommunicateWithParticipantNote: String
  ppManageProviderOverlap: [PpManageProviderOverlapType!] 
  ppManageProviderOverlapOther: String
  ppManageProviderOverlapNote: String
  bManageBeneficiaryOverlap: [BManageBeneficiaryOverlapType!] 
  bManageBeneficiaryOverlapOther: String
  bManageBeneficiaryOverlapNote: String
  #Page 4
  oelHelpdeskSupport: [OelHelpdeskSupportType!]
  oelHelpdeskSupportOther: String
  oelHelpdeskSupportNote: String
  oelManageAco: [OelManageAcoType!] 
  oelManageAcoOther: String
  oelManageAcoNote: String
  #Page 5
  oelPerformanceBenchmark: [OelPerformanceBenchmarkType!]
  oelPerformanceBenchmarkOther: String
  oelPerformanceBenchmarkNote: String
  oelProcessAppeals: [OelProcessAppealsType!]
  oelProcessAppealsOther: String
  oelProcessAppealsNote: String
  oelEvaluationContractor: [OelEvaluationContractorType!]
  oelEvaluationContractorOther: String
  oelEvaluationContractorNote: String
  #Page 6
  oelCollectData: [OelCollectDataType!]
  oelCollectDataOther: String
  oelCollectDataNote: String
  oelObtainData: [OelObtainDataType!]
  oelObtainDataOther: String
  oelObtainDataNote: String
  oelClaimsBasedMeasures: [OelClaimsBasedMeasuresType!]
  oelClaimsBasedMeasuresOther: String
  oelClaimsBasedMeasuresNote: String
  #Page 7
  oelQualityScores: [OelQualityScoresType!]
  oelQualityScoresOther: String
  oelQualityScoresNote: String
  oelSendReports: [OelSendReportsType!]
  oelSendReportsOther: String
  oelSendReportsNote: String
  oelLearningContractor: [OelLearningContractorType!]
  oelLearningContractorOther: String
  oelLearningContractorNote: String
  #Page 8 
  oelParticipantCollaboration: [OelParticipantCollaborationType!]
  oelParticipantCollaborationOther: String
  oelParticipantCollaborationNote: String
  oelEducateBeneficiaries: [OelEducateBeneficiariesType!]
  oelEducateBeneficiariesOther: String
  oelEducateBeneficiariesNote: String
  pMakeClaimsPayments: [PMakeClaimsPaymentsType!]
  pMakeClaimsPaymentsOther: String
  pMakeClaimsPaymentsNote: String
  #Page 9
  pInformFfs: [PInformFfsType!]
  pInformFfsOther: String
  pInformFfsNote: String
  pNonClaimsBasedPayments: [PNonClaimsBasedPaymentsType!]
  pNonClaimsBasedPaymentsOther: String
  pNonClaimsBasedPaymentsNote: String
  pSharedSavingsPlan: [PSharedSavingsPlanType!]
  pSharedSavingsPlanOther: String
  pSharedSavingsPlanNote: String
  #Page 10
  pRecoverPayments: [PRecoverPaymentsType!]
  pRecoverPaymentsOther: String
  pRecoverPaymentsNote: String
  
}
"""
PlanOpsEvalAndLearning represents the task list section that deals with information regarding the Ops Eval and Learning
"""
type PlanOpsEvalAndLearning {
    id: UUID!
    modelPlanID: UUID!

    #Page 1
    agencyOrStateHelp: [AgencyOrStateHelpType!]!
    agencyOrStateHelpOther: String
    agencyOrStateHelpNote: String
    stakeholders: [StakeholdersType!]!
    stakeholdersOther: String
    stakeholdersNote: String
    helpdeskUse: Boolean
    helpdeskUseNote: String
    contractorSupport: [ContractorSupportType!]!
    contractorSupportOther: String
    contractorSupportHow: String
    contractorSupportNote: String
    iddocSupport: Boolean
    iddocSupportNote: String
    #Page 2
    technicalContactsIdentified: Boolean
    technicalContactsIdentifiedDetail: String
    technicalContactsIdentifiedNote: String
    captureParticipantInfo: Boolean
    captureParticipantInfoNote: String
    icdOwner: String
    draftIcdDueDate: Time
    icdNote: String
    #Page 3
    uatNeeds: String
    stcNeeds: String
    testingTimelines: String
    testingNote: String
    dataMonitoringFileTypes: [MonitoringFileType!]!
    dataMonitoringFileOther: String
    dataResponseType: String
    dataResponseFileFrequency: String
    #Page 4
    dataFullTimeOrIncremental: DataFullTimeOrIncrementalType
    eftSetUp: Boolean
    unsolicitedAdjustmentsIncluded: Boolean
    dataFlowDiagramsNeeded: Boolean
    produceBenefitEnhancementFiles: Boolean
    fileNamingConventions: String
    dataMonitoringNote: String
    #Page 5
    benchmarkForPerformance: BenchmarkForPerformanceType
    benchmarkForPerformanceNote: String
    computePerformanceScores: Boolean
    computePerformanceScoresNote: String
    riskAdjustPerformance: Boolean
    riskAdjustFeedback: Boolean
    riskAdjustPayments: Boolean
    riskAdjustOther: Boolean
    riskAdjustNote: String
    appealPerformance: Boolean
    appealFeedback: Boolean
    appealPayments: Boolean
    appealOther: Boolean
    appealNote: String
    #Page 6
    evaluationApproaches: [EvaluationApproachType!]!
    evaluationApproachOther: String
    evalutaionApproachNote: String
    ccmInvolvment: [CcmInvolvmentType!]!
    ccmInvolvmentOther: String
    ccmInvolvmentNote: String
    dataNeededForMonitoring: [DataForMonitoringType!]!
    dataNeededForMonitoringOther: String
    dataNeededForMonitoringNote: String
    dataToSendParticicipants: [DataToSendParticipantsType!]!
    dataToSendParticicipantsOther: String
    dataToSendParticicipantsNote: String
    shareCclfData: Boolean
    shareCclfDataNote: String
    #Page 7
    sendFilesBetweenCcw: Boolean
    sendFilesBetweenCcwNote: String
    appToSendFilesToKnown: Boolean
    appToSendFilesToWhich: String
    appToSendFilesToNote: String
    useCcwForFileDistribiutionToParticipants: Boolean
    useCcwForFileDistribiutionToParticipantsNote: String
    developNewQualityMeasures: Boolean
    developNewQualityMeasuresNote: String
    qualityPerformanceImpactsPayment: Boolean
    qualityPerformanceImpactsPaymentNote: String
    #Page 8
    dataSharingStarts: DataStartsType
    dataSharingStartsOther: String
    dataSharingFrequency: [DataFrequencyType!]!
    dataSharingFrequencyOther: String
    dataSharingStartsNote: String
    dataCollectionStarts: DataStartsType
    dataCollectionStartsOther: String
    dataCollectionFrequency: [DataFrequencyType!]!
    dataCollectionFrequencyOther: String
    dataCollectionFrequencyNote: String
    qualityReportingStarts: DataStartsType
    qualityReportingStartsOther: String
    qualityReportingStartsNote: String
    #Page 9
    modelLearningSystems: [ModelLearningSystemType!]!
    modelLearningSystemsOther: String
    modelLearningSystemsNote: String
    anticipatedChallenges: String



    createdBy: String!
    createdDts: Time!
    modifiedBy: String
    modifiedDts: Time
    status: TaskStatus!
}

"""
PlanOpsEvalAndLearningChanges represents the possible changes you can make to a
ops, eval and learning object when updating it.
Fields explicitly set with NULL will be unset, and omitted fields will be left unchanged.
https://gqlgen.com/reference/changesets/
"""
input PlanOpsEvalAndLearningChanges @goModel(model: "map[string]interface{}") {

    #Page 1
    agencyOrStateHelp: [AgencyOrStateHelpType!]
    agencyOrStateHelpOther: String
    agencyOrStateHelpNote: String
    stakeholders: [StakeholdersType!]
    stakeholdersOther: String
    stakeholdersNote: String
    helpdeskUse: Boolean
    helpdeskUseNote: String
    contractorSupport: [ContractorSupportType!]
    contractorSupportOther: String
    contractorSupportHow: String
    contractorSupportNote: String
    iddocSupport: Boolean
    iddocSupportNote: String
    #Page 2
    technicalContactsIdentified: Boolean
    technicalContactsIdentifiedDetail: String
    technicalContactsIdentifiedNote: String
    captureParticipantInfo: Boolean
    captureParticipantInfoNote: String
    icdOwner: String
    draftIcdDueDate: Time
    icdNote: String
    #Page 3
    uatNeeds: String
    stcNeeds: String
    testingTimelines: String
    testingNote: String
    dataMonitoringFileTypes: [MonitoringFileType!]
    dataMonitoringFileOther: String
    dataResponseType: String
    dataResponseFileFrequency: String
    #Page 4
    dataFullTimeOrIncremental: DataFullTimeOrIncrementalType
    eftSetUp: Boolean
    unsolicitedAdjustmentsIncluded: Boolean
    dataFlowDiagramsNeeded: Boolean
    produceBenefitEnhancementFiles: Boolean
    fileNamingConventions: String
    dataMonitoringNote: String
    #Page 5
    benchmarkForPerformance: BenchmarkForPerformanceType
    benchmarkForPerformanceNote: String
    computePerformanceScores: Boolean
    computePerformanceScoresNote: String
    riskAdjustPerformance: Boolean
    riskAdjustFeedback: Boolean
    riskAdjustPayments: Boolean
    riskAdjustOther: Boolean
    riskAdjustNote: String
    appealPerformance: Boolean
    appealFeedback: Boolean
    appealPayments: Boolean
    appealOther: Boolean
    appealNote: String
    #Page 6
    evaluationApproaches: [EvaluationApproachType!]
    evaluationApproachOther: String
    evalutaionApproachNote: String
    ccmInvolvment: [CcmInvolvmentType!]
    ccmInvolvmentOther: String
    ccmInvolvmentNote: String
    dataNeededForMonitoring: [DataForMonitoringType!]
    dataNeededForMonitoringOther: String
    dataNeededForMonitoringNote: String
    dataToSendParticicipants: [DataToSendParticipantsType!]
    dataToSendParticicipantsOther: String
    dataToSendParticicipantsNote: String
    shareCclfData: Boolean
    shareCclfDataNote: String
    #Page 7
    sendFilesBetweenCcw: Boolean
    sendFilesBetweenCcwNote: String
    appToSendFilesToKnown: Boolean
    appToSendFilesToWhich: String
    appToSendFilesToNote: String
    useCcwForFileDistribiutionToParticipants: Boolean
    useCcwForFileDistribiutionToParticipantsNote: String
    developNewQualityMeasures: Boolean
    developNewQualityMeasuresNote: String
    qualityPerformanceImpactsPayment: Boolean
    qualityPerformanceImpactsPaymentNote: String
    #Page 8
    dataSharingStarts: DataStartsType
    dataSharingStartsOther: String
    dataSharingFrequency: [DataFrequencyType!]
    dataSharingFrequencyOther: String
    dataSharingStartsNote: String
    dataCollectionStarts: DataStartsType
    dataCollectionStartsOther: String
    dataCollectionFrequency: [DataFrequencyType!]
    dataCollectionFrequencyOther: String
    dataCollectionFrequencyNote: String
    qualityReportingStarts: DataStartsType
    qualityReportingStartsOther: String
    qualityReportingStartsNote: String
    #Page 9
    modelLearningSystems: [ModelLearningSystemType!]
    modelLearningSystemsOther: String
    modelLearningSystemsNote: String
    anticipatedChallenges: String
}
"""
Query definition for the schema
"""
type Query {
  currentUser: CurrentUser!
  modelPlan(id: UUID!): ModelPlan!
  planDocument(id: UUID!): PlanDocument!
  planDocumentDownloadURL(id: UUID!): PlanDocumentPayload!
  readPlanDocumentByModelID(id: UUID!): [PlanDocument!]!
  modelPlanCollection: [ModelPlan!]!
  existingModelCollection: [ExistingModel!]!
  cedarPersonsByCommonName(commonName: String!): [UserInfo!]!
  planCollaboratorByID(id: UUID!): PlanCollaborator!
}

"""
Mutations definition for the schema
"""
type Mutation {
createModelPlan(modelName: String!): ModelPlan!
@hasRole(role: MINT_BASE_USER)

updateModelPlan(id: UUID!, changes: ModelPlanChanges!): ModelPlan!
@hasRole(role: MINT_BASE_USER)

createPlanCollaborator(input: PlanCollaboratorCreateInput!): PlanCollaborator!
@hasRole(role: MINT_BASE_USER)

updatePlanCollaborator(id: UUID!, newRole: TeamRole!): PlanCollaborator!
@hasRole(role: MINT_BASE_USER)

deletePlanCollaborator(id: UUID!): PlanCollaborator!
@hasRole(role: MINT_BASE_USER)

updatePlanBasics(id: UUID!, changes: PlanBasicsChanges!): PlanBasics!
@hasRole(role: MINT_BASE_USER)

updatePlanMilestones(id: UUID!, changes: PlanMilestoneChanges!): PlanMilestones!
@hasRole(role: MINT_BASE_USER)

updatePlanGeneralCharacteristics(id: UUID!, changes: PlanGeneralCharacteristicsChanges!): PlanGeneralCharacteristics!
@hasRole(role: MINT_BASE_USER)

updatePlanBeneficiaries(id: UUID!, changes: PlanBeneficiariesChanges!): PlanBeneficiaries!
@hasRole(role: MINT_BASE_USER)

updatePlanParticipantsAndProviders(id: UUID!, changes: PlanParticipantsAndProvidersChanges!): PlanParticipantsAndProviders!
@hasRole(role: MINT_BASE_USER)

updatePlanItTools(id: UUID!, changes:PlanITToolsChanges!): PlanITTools!
@hasRole(role: MINT_BASE_USER)

updatePlanOpsEvalAndLearning(id: UUID!, changes: PlanOpsEvalAndLearningChanges!): PlanOpsEvalAndLearning!
@hasRole(role: MINT_BASE_USER)


generatePresignedUploadURL(input: GeneratePresignedUploadURLInput!): GeneratePresignedUploadURLPayload!
@hasRole(role: MINT_BASE_USER)

createPlanDocument(input: PlanDocumentInput!): PlanDocumentPayload!
@hasRole(role: MINT_BASE_USER)

updatePlanDocument(input: PlanDocumentInput!): PlanDocumentPayload!
@hasRole(role: MINT_BASE_USER)

deletePlanDocument(input: PlanDocumentInput!): Int!
@hasRole(role: MINT_BASE_USER)

createPlanDiscussion(input: PlanDiscussionCreateInput!): PlanDiscussion!
@hasRole(role: MINT_BASE_USER)

updatePlanDiscussion(id: UUID!, changes: PlanDiscussionChanges!): PlanDiscussion!
@hasRole(role: MINT_BASE_USER)

deletePlanDiscussion(id: UUID!): PlanDiscussion!
@hasRole(role: MINT_BASE_USER)

createDiscussionReply(input: DiscussionReplyCreateInput!): DiscussionReply!
@hasRole(role: MINT_BASE_USER)

updateDiscussionReply(id: UUID!, changes: DiscussionReplyChanges!): DiscussionReply!
@hasRole(role: MINT_BASE_USER)

deleteDiscussionReply(id: UUID!): DiscussionReply!
@hasRole(role: MINT_BASE_USER)
}

enum TaskStatus {
  READY
  IN_PROGRESS
  COMPLETE
}

enum TeamRole {
  MODEL_LEAD
  MODEL_TEAM
  LEADERSHIP
  LEARNING
  EVALUATION
}

enum ModelType
{
  VOLUNTARY
  MANDATORY
  TBD
}

enum ModelCategory {
	ACCOUNTABLE_CARE
	DEMONSTRATION
	EPISODE_BASED_PAYMENT_INITIATIVES
	INIT_MEDICAID_CHIP_POP
	INIT__MEDICARE_MEDICAID_ENROLLEES
	INIT_ACCEL_DEV_AND_TEST
	INIT_SPEED_ADOPT_BEST_PRACTICE
	PRIMARY_CARE_TRANSFORMATION
	UNKNOWN
}

enum ModelStatus {
	PLAN_DRAFT
	PLAN_COMPLETE
	ICIP_COMPLETE
	INTERNAL_CMMI_CLEARANCE
	CMS_CLEARANCE
	HHS_CLEARANCE
	OMB_ASRF_CLEARANCE
	CLEARED
	ANNOUNCED
}

enum CMSCenter {
  CMMI
  CENTER_FOR_MEDICARE
  FEDERAL_COORDINATED_HEALTH_CARE_OFFICE
  CENTER_FOR_CLINICAL_STANDARDS_AND_QUALITY
  CENTER_FOR_PROGRAM_INTEGRITY
  OTHER
}

enum CMMIGroup {
  PATIENT_CARE_MODELS_GROUP
  POLICY_AND_PROGRAMS_GROUP
  PREVENTIVE_AND_POPULATION_HEALTH_CARE_MODELS_GROUP
  SEAMLESS_CARE_MODELS_GROUP
  STATE_INNOVATIONS_GROUP
}

enum DiscussionStatus {
  ANSWERED
  WAITING_FOR_RESPONSE
  UNANSWERED
}

enum DocumentType {
  CONCEPT_PAPER,
  POLICY_PAPER,
  ICIP_DRAFT,
  MARKET_RESEARCH,
  OTHER
}

enum AlternativePaymentModelType {
  REGULAR
  MIPS
  ADVANCED
}

enum KeyCharacteristic {
  EPISODE_BASED
  PART_C
  PART_D
  PAYMENT
  POPULATION_BASED
  PREVENTATIVE
  SERVICE_DELIVERY
  SHARED_SAVINGS
  OTHER
}

enum GeographyType {
  STATE
  REGION
  OTHER
}

enum GeographyApplication {
  PARTICIPANTS
  PROVIDERS
  BENEFICIARIES
  OTHER
}

enum AgreementType {
  PARTICIPATION
  COOPERATIVE
  OTHER
}

enum AuthorityAllowance {
  ACA
  CONGRESSIONALLY_MANDATED
  SSA_PART_B
  OTHER
}

enum WaiverType {
  FRAUD_ABUSE
  PROGRAM_PAYMENT
  MEDICAID
}

enum BeneficiariesType {
  MEDICARE_FFS
  MEDICARE_ADVANTAGE
  MEDICARE_PART_D
  MEDICAID
  DUALLY_ELIGIBLE
  DISEASE_SPECIFIC
  OTHER
  NA
}
enum SelectionMethodType {
  HISTORICAL
  PROSPECTIVE
  RETROSPECTIVE
  VOLUNTARY
  PROVIDER_SIGN_UP
  OTHER
  NA
}
enum OverlapType {
  YES_NEED_POLICIES
  YES_NO_ISSUES
  NO
}
enum ConfidenceType {
  NOT_AT_ALL
  SLIGHTLY
  FAIRLY
  COMPLETELY  
}
enum FrequencyType {
  ANNUALLY
  BIANNUALLY
  QUARTERLY
  MONTHLY
  ROLLING
  OTHER
}
enum TriStateAnswer {
  YES
  NO
  TBD
}
enum ParticipantsType {
  MEDICARE_PROVIDERS
  ENTITIES
  CONVENER
  MEDICARE_ADVANTAGE_PLANS
  STANDALONE_PART_D_PLANS
  MEDICARE_ADVANTAGE_PRESCRIPTION_DRUG_PLANS
  STATE_MEDICAID_AGENCIES
  MEDICAID_MANAGED_CARE_ORGANIZATIONS
  MEDICAID_PROVIDERS
  STATES
  COMMUNITY_BASED_ORGANIZATIONS
  NON_PROFIT_ORGANIZATIONS
  COMMERCIAL_PAYERS
  OTHER
}

enum RecruitmentType {
  LOI
  RFA
  NOFO
  OTHER
  NA
}
enum ParticipantSelectionType {
  MODEL_TEAM_REVIEW_APPLICATIONS
  SUPPORT_FROM_CMMI
  CMS_COMPONENT_OR_PROCESS
  APPLICATION_REVIEW_AND_SCORING_TOOL
  APPLICATION_SUPPORT_CONTRACTOR
  BASIC_CRITERIA
  OTHER
  NO_SELECTING_PARTICIPANTS
}
enum ParticipantCommunicationType {
  MASS_EMAIL
  IT_TOOL
  OTHER
  NO_COMMUNICATION
}
enum ParticipantRiskType {
  TWO_SIDED
  ONE_SIDED
  CAPITATION
  OTHER
}

enum ParticipantsIDType{
  TINS
  NPIS
  CCNS
  OTHER
  NO_IDENTIFIERS
}

enum ProviderAddType {
  PROSPECTIVELY
  RETROSPECTIVELY
  VOLUNTARILY
  MANDATORILY
  ONLINE_TOOLS
  OTHER
  NA
}

enum ProviderLeaveType {

VOLUNTARILY_WITHOUT_IMPLICATIONS
AFTER_A_CERTAIN_WITH_IMPLICATIONS
VARIES_BY_TYPE_OF_PROVIDER
NOT_ALLOWED_TO_LEAVE
OTHER
NOT_APPLICABLE
}

#IT TOOLS ENUMS

enum GcPartCDType {
    MARX
    OTHER
}
enum GcCollectBidsType {
    HPMS
    OTHER
}
enum GcUpdateContractType {
    
    HPMS
    OTHER
}
enum PpToAdvertiseType {
    SALESFORCE
    GRANT_SOLUTIONS
    OTHER
}
enum PpCollectScoreReviewType {
    RFA
    ARS
    GRANT_SOLUTIONS
    OTHER
}
enum PpAppSupportContractorType {
    RMDA
    OTHER
}
enum PpCommunicateWithParticipantType {
    OUTLOOK_MAILBOX
    GOV_DELIVERY
    SALESFORCE_PORTAL
    OTHER
}
enum PpManageProviderOverlapType {
    MDM
    OTHER
    NA
}
enum BManageBeneficiaryOverlapType { 
    MDM
    OTHER
    NA
}
enum OelHelpdeskSupportType {
    CBOSC
    CONTRACTOR
    OTHER
}
enum OelManageAcoType { 
    ACO_OS
    ACO_UI
    INNOVATION
    OTHER
}
enum OelPerformanceBenchmarkType { 
    IDR
    CCW
    OTHER
}
enum OelProcessAppealsType {
    MEDICARE_APPEAL_SYSTEM
    OTHER
}
enum OelEvaluationContractorType { 
    RMDA
    OTHER
}
enum OelCollectDataType { 
    IDR
    CCW
    IDOS
    ISP
    CONTRACTOR
    OTHER
}
enum OelObtainDataType { 
    CCW
    IDOS
    ISP
    OTHER
}
enum OelClaimsBasedMeasuresType {
    IDR
    CCW
    OTHER
}
enum OelQualityScoresType {
    EXISTING_DATA_AND_PROCESS
    NEW_DATA_AND_CMMI_PROCESS
    OTHER
    NONE
}
enum OelSendReportsType {
    IDOS
    RMADA
    INTERNAL_STAFF
    OTHER
}
enum OelLearningContractorType {
    RMADA
    CROSS_MODEL_CONTRACT
    OTHER
}
enum OelParticipantCollaborationType {
    CONNECT
    OTHER
}
enum OelEducateBeneficiariesType {
    OC
    OTHER
}
enum PMakeClaimsPaymentsType {
    SHARED_SYSTEMS
    HIGLAS
    OTHER
}
enum PInformFfsType {
    FFS_COMPETENCY_CENTER
    OTHER
}
enum PNonClaimsBasedPaymentsType {
    APPS
    HIGLAS
    IPC
    MAC
    OTHER
}
enum PSharedSavingsPlanType {
    RMADA
    OTHER
}
enum PRecoverPaymentsType {
    APPS
    IPC
    MAC
    OTHER
}

#end IT TOOLS ENUMS

#Ops Eval and Learning types begin

enum AgencyOrStateHelpType {
    YES_STATE
    YES_AGENCY_IDEAS
    YES_AGENCY_IAA
    NO
    OTHER
}

enum StakeholdersType {
    BENEFICIARIES
    COMMUNITY_ORGANIZATIONS
    PARTICIPANTS
    PROFESSIONAL_ORGANIZATIONS
    PROVIDERS
    STATES
    OTHER
}


enum ContractorSupportType {
    ONE
    MULTIPLE
    NONE
    OTHER
}

enum MonitoringFileType {
    BENEFICIARY
    PROVIDER
    PART_A
    PART_B
    OTHER
}

enum EvaluationApproachType {
    CONTROL_INTERVENTION
    COMPARISON_MATCH
    INTERRUPTED_TIME
    NON_MEDICARE_DATA
    OTHER
}

enum CcmInvolvmentType {
    YES_EVALUATION
    YES__IMPLEMENTATION
    NO
    OTHER
}

enum DataForMonitoringType {
    SITE_VISITS
    MEDICARE_CLAIMS
    MEDICAID_CLAIMS
    ENCOUNTER_DATA
    NO_PAY_CLAIMS
    QUALITY_CLAIMS_BASED_MEASURES
    QUALITY_REPORTED_MEASURES
    CLINICAL_DATA
    NON_CLINICAL_DATA
    NON_MEDICAL_DATA
    OTHER
    NOT_PLANNING_TO_COLLECT_DATA
}

enum DataToSendParticipantsType {
    BASELINE_HISTORICAL_DATA
    CLAIMS_LEVEL_DATA
    BENEFICIARY_LEVEL_DATA
    PARTICIPANT_LEVEL_DATA
    PROVIDER_LEVEL_DATA
    OTHER_MIPS_DATA
    NOT_PLANNING_TO_SEND_DATA
}

enum DataFrequencyType {
    ANNUALLY
    BIANNUALLY
    QUARTERLY
    MONTHLY
    SEMI_MONTHLY
    WEEKLY
    DAILY
    OTHER
    NOT_PLANNING_TO_DO_THIS
}

enum ModelLearningSystemType {
    LEARNING_CONTRACTOR
    IT_PLATFORM_CONNECT
    PARTICIPANT_COLLABORATION
    EDUCATE_BENEFICIARIES
    OTHER
    NO_LEARNING_SYSTEM
}


enum DataFullTimeOrIncrementalType {
    FULL_TIME
    INCREMENTAL
}

enum BenchmarkForPerformanceType {
    YES_RECONCILE
    YES_NO_RECONCILE
    NO
}

enum DataStartsType {
    DURING_APPLICATION_PERIOD
    SHORTLY_BEFORE_THE_START_DATE
    EARLY_IN_THE_FIRST_PERFORMANCE_YEAR
    LATER_IN_THE_FIRST_PERFORMANCE_YEAR
    IN_THE_SUBSEQUENT_PERFORMANCE_YEAR
    AT_SOME_OTHER_POINT_IN_TIME
    NOT_PLANNING_TO_DO_THIS
    OTHER
}
#Ops Eval and Learning types end

directive @hasRole(role: Role!) on FIELD_DEFINITION

# https://gqlgen.com/config/#inline-config-with-directives
directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

"""
A user role associated with a job code
"""
enum Role {
  """
  A basic MINT user
  """
  MINT_BASE_USER

  """
  A MINT admin user
  """
  MINT_ADMIN_USER
}
