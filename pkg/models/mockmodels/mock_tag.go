// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/models/tag.go

// Package mockmodels is a generated GoMock package.
package mockmodels

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTaggedEntity is a mock of TaggedEntity interface.
type MockTaggedEntity struct {
	ctrl     *gomock.Controller
	recorder *MockTaggedEntityMockRecorder
}

// MockTaggedEntityMockRecorder is the mock recorder for MockTaggedEntity.
type MockTaggedEntityMockRecorder struct {
	mock *MockTaggedEntity
}

// NewMockTaggedEntity creates a new mock instance.
func NewMockTaggedEntity(ctrl *gomock.Controller) *MockTaggedEntity {
	mock := &MockTaggedEntity{ctrl: ctrl}
	mock.recorder = &MockTaggedEntityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaggedEntity) EXPECT() *MockTaggedEntityMockRecorder {
	return m.recorder
}

// IsTaggedEntity mocks base method.
func (m *MockTaggedEntity) IsTaggedEntity() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IsTaggedEntity")
}

// IsTaggedEntity indicates an expected call of IsTaggedEntity.
func (mr *MockTaggedEntityMockRecorder) IsTaggedEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsTaggedEntity", reflect.TypeOf((*MockTaggedEntity)(nil).IsTaggedEntity))
}
