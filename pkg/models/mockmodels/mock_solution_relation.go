// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/models/solution_relation.go

// Package mockmodels is a generated GoMock package.
package mockmodels

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockISolutionRelation is a mock of ISolutionRelation interface.
type MockISolutionRelation struct {
	ctrl     *gomock.Controller
	recorder *MockISolutionRelationMockRecorder
}

// MockISolutionRelationMockRecorder is the mock recorder for MockISolutionRelation.
type MockISolutionRelationMockRecorder struct {
	mock *MockISolutionRelation
}

// NewMockISolutionRelation creates a new mock instance.
func NewMockISolutionRelation(ctrl *gomock.Controller) *MockISolutionRelation {
	mock := &MockISolutionRelation{ctrl: ctrl}
	mock.recorder = &MockISolutionRelationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISolutionRelation) EXPECT() *MockISolutionRelationMockRecorder {
	return m.recorder
}

// GetSolutionID mocks base method.
func (m *MockISolutionRelation) GetSolutionID() uuid.UUID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSolutionID")
	ret0, _ := ret[0].(uuid.UUID)
	return ret0
}

// GetSolutionID indicates an expected call of GetSolutionID.
func (mr *MockISolutionRelationMockRecorder) GetSolutionID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSolutionID", reflect.TypeOf((*MockISolutionRelation)(nil).GetSolutionID))
}
