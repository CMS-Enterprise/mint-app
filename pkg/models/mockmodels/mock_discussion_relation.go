// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/models/discussion_relation.go

// Package mockmodels is a generated GoMock package.
package mockmodels

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIDiscussionRelation is a mock of IDiscussionRelation interface.
type MockIDiscussionRelation struct {
	ctrl     *gomock.Controller
	recorder *MockIDiscussionRelationMockRecorder
}

// MockIDiscussionRelationMockRecorder is the mock recorder for MockIDiscussionRelation.
type MockIDiscussionRelationMockRecorder struct {
	mock *MockIDiscussionRelation
}

// NewMockIDiscussionRelation creates a new mock instance.
func NewMockIDiscussionRelation(ctrl *gomock.Controller) *MockIDiscussionRelation {
	mock := &MockIDiscussionRelation{ctrl: ctrl}
	mock.recorder = &MockIDiscussionRelationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDiscussionRelation) EXPECT() *MockIDiscussionRelationMockRecorder {
	return m.recorder
}

// GetDiscussionID mocks base method.
func (m *MockIDiscussionRelation) GetDiscussionID() uuid.UUID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiscussionID")
	ret0, _ := ret[0].(uuid.UUID)
	return ret0
}

// GetDiscussionID indicates an expected call of GetDiscussionID.
func (mr *MockIDiscussionRelationMockRecorder) GetDiscussionID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiscussionID", reflect.TypeOf((*MockIDiscussionRelation)(nil).GetDiscussionID))
}
