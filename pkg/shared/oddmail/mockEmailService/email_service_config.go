// Code generated by MockGen. DO NOT EDIT.
// Source: email_service_config.go

// Package mockemailservice is a generated GoMock package.
package mockemailservice

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockemailServiceConfig is a mock of emailServiceConfig interface.
type MockemailServiceConfig struct {
	ctrl     *gomock.Controller
	recorder *MockemailServiceConfigMockRecorder
}

// MockemailServiceConfigMockRecorder is the mock recorder for MockemailServiceConfig.
type MockemailServiceConfigMockRecorder struct {
	mock *MockemailServiceConfig
}

// NewMockemailServiceConfig creates a new mock instance.
func NewMockemailServiceConfig(ctrl *gomock.Controller) *MockemailServiceConfig {
	mock := &MockemailServiceConfig{ctrl: ctrl}
	mock.recorder = &MockemailServiceConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockemailServiceConfig) EXPECT() *MockemailServiceConfigMockRecorder {
	return m.recorder
}

// GetHost mocks base method.
func (m *MockemailServiceConfig) GetHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHost indicates an expected call of GetHost.
func (mr *MockemailServiceConfigMockRecorder) GetHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHost", reflect.TypeOf((*MockemailServiceConfig)(nil).GetHost))
}

// GetPassword mocks base method.
func (m *MockemailServiceConfig) GetPassword() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPassword")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPassword indicates an expected call of GetPassword.
func (mr *MockemailServiceConfigMockRecorder) GetPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPassword", reflect.TypeOf((*MockemailServiceConfig)(nil).GetPassword))
}

// GetPort mocks base method.
func (m *MockemailServiceConfig) GetPort() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPort")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetPort indicates an expected call of GetPort.
func (mr *MockemailServiceConfigMockRecorder) GetPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPort", reflect.TypeOf((*MockemailServiceConfig)(nil).GetPort))
}

// GetUsername mocks base method.
func (m *MockemailServiceConfig) GetUsername() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsername")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUsername indicates an expected call of GetUsername.
func (mr *MockemailServiceConfigMockRecorder) GetUsername() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsername", reflect.TypeOf((*MockemailServiceConfig)(nil).GetUsername))
}
