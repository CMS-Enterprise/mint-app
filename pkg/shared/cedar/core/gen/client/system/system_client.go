// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new system API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for system API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	SystemDetailAdd(params *SystemDetailAddParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemDetailAddOK, error)

	SystemDetailFindByID(params *SystemDetailFindByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemDetailFindByIDOK, error)

	SystemDetailUpdate(params *SystemDetailUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemDetailUpdateOK, error)

	SystemSummaryFindByID(params *SystemSummaryFindByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemSummaryFindByIDOK, error)

	SystemSummaryFindList(params *SystemSummaryFindListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemSummaryFindListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  SystemDetailAdd adds a new system to alfabet this interface takes id name description acronym and status

  Add a new system to Alfabet. This interface takes id, name, description, acronym and status.
*/
func (a *Client) SystemDetailAdd(params *SystemDetailAddParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemDetailAddOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemDetailAddParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "systemDetailAdd",
		Method:             "POST",
		PathPattern:        "/system/detail",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemDetailAddReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemDetailAddOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for systemDetailAdd: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemDetailFindByID retrieves an existing system based on the provided id

  Retrieve an existing system based on the provided id.
*/
func (a *Client) SystemDetailFindByID(params *SystemDetailFindByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemDetailFindByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemDetailFindByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "systemDetailFindById",
		Method:             "GET",
		PathPattern:        "/system/detail/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemDetailFindByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemDetailFindByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for systemDetailFindById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemDetailUpdate updates an existing system within alfabet this interface takes id name description acronym and status

  Update an existing system within Alfabet. This interface takes id, name, description, acronym and status.
*/
func (a *Client) SystemDetailUpdate(params *SystemDetailUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemDetailUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemDetailUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "systemDetailUpdate",
		Method:             "PUT",
		PathPattern:        "/system/detail",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemDetailUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemDetailUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for systemDetailUpdate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemSummaryFindByID retrieves a system summary based on the provided id

  Retrieve a system summary based on the provided id.
*/
func (a *Client) SystemSummaryFindByID(params *SystemSummaryFindByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemSummaryFindByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemSummaryFindByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "systemSummaryFindById",
		Method:             "GET",
		PathPattern:        "/system/summary/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemSummaryFindByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemSummaryFindByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for systemSummaryFindById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemSummaryFindList retrieves a system summary list this interface takes in state status version include in survey ids only and belongs to

  Retrieve a system summary list. This interface takes in state, status, version, includeInSurvey, idsOnly and belongsTo.
*/
func (a *Client) SystemSummaryFindList(params *SystemSummaryFindListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SystemSummaryFindListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemSummaryFindListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "systemSummaryFindList",
		Method:             "GET",
		PathPattern:        "/system/summary",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemSummaryFindListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemSummaryFindListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for systemSummaryFindList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
