// Code generated by go-swagger; DO NOT EDIT.

package person

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPersonFindListParams creates a new PersonFindListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPersonFindListParams() *PersonFindListParams {
	return &PersonFindListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPersonFindListParamsWithTimeout creates a new PersonFindListParams object
// with the ability to set a timeout on a request.
func NewPersonFindListParamsWithTimeout(timeout time.Duration) *PersonFindListParams {
	return &PersonFindListParams{
		timeout: timeout,
	}
}

// NewPersonFindListParamsWithContext creates a new PersonFindListParams object
// with the ability to set a context for a request.
func NewPersonFindListParamsWithContext(ctx context.Context) *PersonFindListParams {
	return &PersonFindListParams{
		Context: ctx,
	}
}

// NewPersonFindListParamsWithHTTPClient creates a new PersonFindListParams object
// with the ability to set a custom HTTPClient for a request.
func NewPersonFindListParamsWithHTTPClient(client *http.Client) *PersonFindListParams {
	return &PersonFindListParams{
		HTTPClient: client,
	}
}

/* PersonFindListParams contains all the parameters to send to the API endpoint
   for the person find list operation.

   Typically these are written to a http.Request.
*/
type PersonFindListParams struct {

	/* Email.

	   A person's email.
	*/
	Email *string

	/* FirstName.

	   A person's first name.
	*/
	FirstName *string

	/* ID.

	   A person's EUA id.
	*/
	ID *string

	/* LastName.

	   A person's last name.
	*/
	LastName *string

	/* Phone.

	   A person's phone number.
	*/
	Phone *string

	/* UserName.

	   A person's username.
	*/
	UserName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the person find list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PersonFindListParams) WithDefaults() *PersonFindListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the person find list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PersonFindListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the person find list params
func (o *PersonFindListParams) WithTimeout(timeout time.Duration) *PersonFindListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the person find list params
func (o *PersonFindListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the person find list params
func (o *PersonFindListParams) WithContext(ctx context.Context) *PersonFindListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the person find list params
func (o *PersonFindListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the person find list params
func (o *PersonFindListParams) WithHTTPClient(client *http.Client) *PersonFindListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the person find list params
func (o *PersonFindListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmail adds the email to the person find list params
func (o *PersonFindListParams) WithEmail(email *string) *PersonFindListParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the person find list params
func (o *PersonFindListParams) SetEmail(email *string) {
	o.Email = email
}

// WithFirstName adds the firstName to the person find list params
func (o *PersonFindListParams) WithFirstName(firstName *string) *PersonFindListParams {
	o.SetFirstName(firstName)
	return o
}

// SetFirstName adds the firstName to the person find list params
func (o *PersonFindListParams) SetFirstName(firstName *string) {
	o.FirstName = firstName
}

// WithID adds the id to the person find list params
func (o *PersonFindListParams) WithID(id *string) *PersonFindListParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the person find list params
func (o *PersonFindListParams) SetID(id *string) {
	o.ID = id
}

// WithLastName adds the lastName to the person find list params
func (o *PersonFindListParams) WithLastName(lastName *string) *PersonFindListParams {
	o.SetLastName(lastName)
	return o
}

// SetLastName adds the lastName to the person find list params
func (o *PersonFindListParams) SetLastName(lastName *string) {
	o.LastName = lastName
}

// WithPhone adds the phone to the person find list params
func (o *PersonFindListParams) WithPhone(phone *string) *PersonFindListParams {
	o.SetPhone(phone)
	return o
}

// SetPhone adds the phone to the person find list params
func (o *PersonFindListParams) SetPhone(phone *string) {
	o.Phone = phone
}

// WithUserName adds the userName to the person find list params
func (o *PersonFindListParams) WithUserName(userName *string) *PersonFindListParams {
	o.SetUserName(userName)
	return o
}

// SetUserName adds the userName to the person find list params
func (o *PersonFindListParams) SetUserName(userName *string) {
	o.UserName = userName
}

// WriteToRequest writes these params to a swagger request
func (o *PersonFindListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Email != nil {

		// query param email
		var qrEmail string

		if o.Email != nil {
			qrEmail = *o.Email
		}
		qEmail := qrEmail
		if qEmail != "" {

			if err := r.SetQueryParam("email", qEmail); err != nil {
				return err
			}
		}
	}

	if o.FirstName != nil {

		// query param firstName
		var qrFirstName string

		if o.FirstName != nil {
			qrFirstName = *o.FirstName
		}
		qFirstName := qrFirstName
		if qFirstName != "" {

			if err := r.SetQueryParam("firstName", qFirstName); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID string

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := qrID
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.LastName != nil {

		// query param lastName
		var qrLastName string

		if o.LastName != nil {
			qrLastName = *o.LastName
		}
		qLastName := qrLastName
		if qLastName != "" {

			if err := r.SetQueryParam("lastName", qLastName); err != nil {
				return err
			}
		}
	}

	if o.Phone != nil {

		// query param phone
		var qrPhone string

		if o.Phone != nil {
			qrPhone = *o.Phone
		}
		qPhone := qrPhone
		if qPhone != "" {

			if err := r.SetQueryParam("phone", qPhone); err != nil {
				return err
			}
		}
	}

	if o.UserName != nil {

		// query param userName
		var qrUserName string

		if o.UserName != nil {
			qrUserName = *o.UserName
		}
		qUserName := qrUserName
		if qUserName != "" {

			if err := r.SetQueryParam("userName", qUserName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
