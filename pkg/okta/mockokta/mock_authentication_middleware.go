// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/okta/authentication_middleware.go

// Package mockokta is a generated GoMock package.
package mockokta

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	jwtverifier "github.com/okta/okta-jwt-verifier-golang"
)

// MockJwtVerifier is a mock of JwtVerifier interface.
type MockJwtVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockJwtVerifierMockRecorder
}

// MockJwtVerifierMockRecorder is the mock recorder for MockJwtVerifier.
type MockJwtVerifierMockRecorder struct {
	mock *MockJwtVerifier
}

// NewMockJwtVerifier creates a new mock instance.
func NewMockJwtVerifier(ctrl *gomock.Controller) *MockJwtVerifier {
	mock := &MockJwtVerifier{ctrl: ctrl}
	mock.recorder = &MockJwtVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtVerifier) EXPECT() *MockJwtVerifierMockRecorder {
	return m.recorder
}

// VerifyAccessToken mocks base method.
func (m *MockJwtVerifier) VerifyAccessToken(jwt string) (*jwtverifier.Jwt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyAccessToken", jwt)
	ret0, _ := ret[0].(*jwtverifier.Jwt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyAccessToken indicates an expected call of VerifyAccessToken.
func (mr *MockJwtVerifierMockRecorder) VerifyAccessToken(jwt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyAccessToken", reflect.TypeOf((*MockJwtVerifier)(nil).VerifyAccessToken), jwt)
}
